var __webpack_exports__={};const presence=new Presence({clientId:"978186598669758504"}),browsingTimestamp=Math.floor(Date.now()/1e3);let title;async function getStrings(){return presence.getStrings({browse:"general.browsing",search:"general.searchFor",viewHome:"general.viewHome",buttonViewPage:"general.buttonViewPage",buttonViewProfile:"general.buttonViewProfile"},await presence.getSetting("lang").catch((()=>"en")))}function capitalizeFirstLetter(e){return e?e.trim().charAt(0).toUpperCase()+e.trim().slice(1).toLowerCase():"Undefined"}let strings,oldLang=null;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Wiki.gg/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t,hostname:n,href:r}=document.location,[i,s,a]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("buttons")]),o=document.querySelector('[id="ca-nstab-main"]')?.textContent?.toLowerCase()??"";if(oldLang===i&&strings||(oldLang=i,strings=await getStrings()),s)return e.details=strings.browse,void presence.setActivity(e);if("wiki.gg"===n)e.details="/"===t?strings.viewHome:document.querySelector("head > title").textContent.slice(0,-10);else{title=capitalizeFirstLetter(document.querySelector('[property="og:site_name"]')?.getAttribute("content")?.toLowerCase()??document.querySelector('[property="og:title"]')?.getAttribute("content")?.toLowerCase()??document.querySelector('[id="footer-places-about"]')?.textContent?.replace(/About /gm,"")?.toLowerCase());let i=document.querySelectorAll("input[id='searchInput']")??document.querySelectorAll("input[name='search']");if(i=1===i.length?i[0]:i[1],e.largeImageKey=`https://${n}/images/e/e6/Site-logo.png`,i?.value)e.state=i.value,title=`${title} | ${strings.search?.toLowerCase()}`,e.details=title,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png";else if(t.includes("wiki")&&"main page"!==o){e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";const t=document.querySelector("#firstHeading").textContent?.toLowerCase();e.details=title,t?.includes(":")?e.state=`${capitalizeFirstLetter(document.querySelector("#firstHeading").textContent?.toLowerCase().split(":")[0])} | ${document.querySelector("#firstHeading").textContent?.toLowerCase().split(":")[1]}`:e.state=capitalizeFirstLetter(t),e.buttons=[{label:strings.buttonViewPage,url:r}]}else"/"!==t&&"main"!==o&&"main page"!==o||(e.state=strings.viewHome,e.details=title)}!a&&e.buttons&&delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;