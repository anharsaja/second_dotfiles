var __webpack_exports__={};const presence=new Presence({clientId:"1047847313118351421"}),browsingStamp=Math.floor(Date.now()/1e3);async function getStrings(){return presence.getStrings({browse:"general.browsing",buttonWatchVideo:"general.buttonWatchVideo",home:"general.viewHome",paused:"general.paused",play:"general.playing",search:"general.searchFor",viewShow:"general.viewShow"},await presence.getSetting("lang").catch((()=>"en")))}async function imgPath(e){return e?`https://${e.replace("//","")}`:"https://cdn.rcd.gg/PreMiD/websites/H/History%20Vault/assets/logo.png"}let strings,oldLang=null;presence.on("UpdateData",(async()=>{const e={startTimestamp:browsingStamp,largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/H/History%20Vault/assets/logo.png"},{href:t,pathname:s}=document.location,[a,n,r,o]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("covers")]),i=document.querySelector('input[class*="Component-input-"]'),c=document.querySelectorAll("video")[1]??document.querySelector("video");if(oldLang===a&&strings||(oldLang=a,strings=await getStrings()),n)return e.details=strings.browse,void presence.setActivity(e);if(i?.value&&s.includes("search"))return e.details=strings.search,e.state=i.value,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",void presence.setActivity(e);switch(s.split("/")[1]){case"":e.details=strings.home;break;case"documentaries":e.details=`${strings.viewShow} ${document.querySelector('[id="hero-section"]').querySelector('[class*="Component-title-"]')?.textContent}`,e.state=document.querySelector('[aria-label="Select season dropdown"]')?.textContent?.replace(/\)k/g,"").replace("("," - "),e.buttons=[{label:"Browse",url:t}];break;case"topics":e.details="Viewing shows about",e.state=document.querySelector('[data-testid="typography"]')?.textContent,e.buttons=[{label:"Browse",url:t}];break;case"shows":case"specials":if("/shows"===s||"/documentaries"===s)e.details="Viewing all documentaries";else{const s=await imgPath(document.querySelector('img[class*="Component-imageImg-"]')?.getAttribute("src").slice(2));s&&(e.largeImageKey=`https://${s}`),c?.duration?(delete e.startTimestamp,e.details=document.querySelector('[class*="Component-typeSectionTitleMd"]')?.textContent,c.duration&&!c.paused&&([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(c)),e.smallImageKey=c.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=c.paused?strings.paused:strings.play,e.buttons=[{label:strings.buttonWatchVideo,url:t}]):(e.details="Viewing show",e.state=document.querySelector('[class*="Component-contentWrapper"]')?.querySelector('[data-testid="typography"]')?.textContent,e.buttons=[{label:"Browse",url:t}])}break;default:e.details=strings.browse}o||"https://cdn.rcd.gg/PreMiD/websites/H/History%20Vault/assets/logo.png"===e.largeImageKey||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/H/History%20Vault/assets/logo.png"),!r&&e.buttons&&delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;