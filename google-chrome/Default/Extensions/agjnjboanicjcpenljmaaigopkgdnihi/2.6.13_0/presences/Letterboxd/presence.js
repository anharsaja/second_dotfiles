var __webpack_exports__={};const presence=new Presence({clientId:"938732156346314795"}),user=document.cookie.split(";").find((e=>e.trim().startsWith("letterboxd"))).split("=")[1],browsingTimestamp=Math.floor(Date.now()/1e3);function generateButtonText(e){return[{label:e.replace("Viewing","View"),url:window.location.href}]}function clarifyString(e){return e.replaceAll(String.fromCharCode(160)," ").replaceAll(String.fromCharCode(8217),"'")}function getImageURLByAlt(e){return Array.from(document.querySelectorAll("img")).find((t=>t.alt===e))?.src}function filterIterable(e,t){return Array.from(e).find(((e,i)=>t(e,i)))}presence.on("UpdateData",(async()=>{const e=document.location.pathname.slice(1).split("/");e.pop();const t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/L/Letterboxd/assets/logo.png",startTimestamp:browsingTimestamp};if(e[0])switch(e[0]){case"lists":t.details="Viewing all lists",t.buttons=generateButtonText(t.details);break;case"members":t.details="Viewing all members",t.buttons=generateButtonText(t.details);break;case"journal":t.details="Viewing the journal",t.buttons=generateButtonText(t.details);break;case"search":t.details=`Searching for ${e[1].replaceAll("+"," ")}`;break;case"settings":t.details="Changing their settings",t.smallImageKey=getImageURLByAlt(user);break;case"list":t.details="Creating a list",t.smallImageKey=getImageURLByAlt(user);break;case"invitations":t.details="Viewing their invitations",t.smallImageKey=getImageURLByAlt(user);break;case"actor":case"director":{const i=document.querySelectorAll(".title-1.prettify")[0].textContent.replace("director"===e[0]?"FILMS DIRECTED BY\n":"FILMS STARRING\n",""),s=document.querySelectorAll(".avatar.person-image.image-loaded")[0].firstElementChild.src;t.details=`Viewing ${"director"===e[0]?"director":"actor"}: ${i}`,t.largeImageKey=s,t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/L/Letterboxd/assets/logo.png",t.buttons=generateButtonText(t.details);break}case"activity":{const i=document.querySelectorAll(".title-3")[0].firstElementChild.textContent;if(t.smallImageKey=getImageURLByAlt(i),t.smallImageText=i,e[1])switch(e[1]){case"you":t.details="Viewing personal activity";break;case"incoming":t.details="Viewing incoming activity"}else t.details="Viewing all activity";break}case"films":if(e[1])switch(e[1]){case"upcoming":t.details="Viewing upcoming films";break;case"popular":t.details="Viewing popular films";break;case"genre":t.details=`Viewing ${e[2]??"unknown"} films`;break;case"decade":t.details=`Viewing films from the ${e[2]??"unknown"}`}else t.details="Viewing films";t.details||(t.details="Viewing films"),t.buttons=generateButtonText(t.details);break;case"film":if(e[1])switch(e[1]){default:if(!e[2]){const e=document.querySelector("#featured-film-header"),i=clarifyString(e.firstElementChild.textContent);t.details=`${i}, ${e.lastElementChild.firstElementChild.firstElementChild.textContent}`,t.state=`By ${e.lastElementChild.lastElementChild.firstElementChild.textContent}`,t.buttons=[{label:`View ${i}`,url:window.location.href}],t.largeImageKey=getImageURLByAlt(i),t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/L/Letterboxd/assets/logo.png";break}if("trailer"===e[2]){const e=document.querySelector("#featured-film-header"),i=clarifyString(e.firstElementChild.textContent);t.details="Viewing the trailer of...",t.state=`${i}, ${e.lastElementChild.firstElementChild.firstElementChild.textContent}`,t.largeImageKey=getImageURLByAlt(i),t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/L/Letterboxd/assets/logo.png",delete t.startTimestamp,t.buttons=[{label:"Watch trailer",url:window.location.href}]}else{const i=document.querySelectorAll(".contextual-title")[0].firstElementChild.firstElementChild.nextElementSibling,s=i.nextElementSibling.firstElementChild.textContent;switch(e[2]){case"members":t.details=`Viewing people who have seen ${i.textContent}, ${s}`;break;case"fans":t.details=`Viewing fans of ${i.textContent}, ${s}`;break;case"likes":t.details=`Viewing people who have liked ${i.textContent}, ${s}`;break;case"ratings":t.details=`Viewing ratings of ${i.textContent}, ${s}`;break;case"reviews":t.details=`Viewing reviews of ${i.textContent}, ${s}`;break;case"lists":t.details=`Viewing lists that include ${i.textContent}, ${s}`}t.buttons=generateButtonText(t.details),t.largeImageKey=getImageURLByAlt(clarifyString(i.textContent)),t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/L/Letterboxd/assets/logo.png"}}break;default:if(!e[1]){const i=document.querySelectorAll(".title-1")[0].textContent;t.details=`Viewing ${e[0]===user?"their own":`${i}'s`} profile`,t.state=`(${e[0]===user?`${i}/${e[0]}`:e[0]})`,t.largeImageKey=document.querySelector("#avatar-zoom").previousElementSibling.src,t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/L/Letterboxd/assets/logo.png",t.buttons=[{label:`View ${i}`,url:window.location.href}];break}switch(e[1]){case"watchlist":t.details="Viewing their watchlist",t.buttons=generateButtonText(t.details);break;case"lists":t.details="Viewing their lists",t.buttons=generateButtonText(t.details);break;case"likes":t.details="Viewing their liked films",t.buttons=generateButtonText(t.details);break;case"following":t.details="Viewing who they've followed",t.buttons=generateButtonText(t.details);break;case"followers":t.details="Viewing their followers";break;case"blocked":t.details="Viewing who they've blocked";break;case"activity":e[2]?t.details="Viewing who they've followed's activity":t.details="Viewing their activity";break;case"films":if(e[2])switch(e[2]){case"reviews":t.details="Viewing their reviews",t.buttons=generateButtonText(t.details);break;case"ratings":t.details="Viewing their ratings",t.buttons=generateButtonText(t.details);break;case"diary":t.details="Viewing their diary",t.buttons=generateButtonText(t.details)}else t.details="Viewing their films",t.buttons=generateButtonText(t.details);break;case"tags":if(e[2])switch(e[2]){case"diary":t.details="Viewing their diary tags",t.buttons=generateButtonText(t.details);break;case"reviews":t.details="Viewing their tagged reviews",t.buttons=generateButtonText(t.details);break;case"lists":t.details="Viewing their tagged lists",t.buttons=generateButtonText(t.details)}else t.details="Viewing their tagged films",t.buttons=generateButtonText(t.details);break;case"stats":{const e=document.querySelectorAll(".yir-member-subtitle")[0].lastElementChild;t.details=`Viewing ${e.textContent}'s statistics`,t.largeImageKey=e.previousElementSibling.firstElementChild.src,t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/L/Letterboxd/assets/logo.png",t.buttons=[{label:`View ${e.textContent}'s stats`,url:window.location.href}];break}case"list":{const e=document.querySelectorAll(".title-1.prettify")[0].textContent,i=document.querySelectorAll(".name")[0].firstElementChild.textContent;t.details=`Viewing the list ${e}`,t.buttons=generateButtonText(t.details),t.state=`By ${i}`,t.smallImageKey=getImageURLByAlt(i),t.smallImageText=i;break}case"friends":{const i=document.querySelectorAll(".contextual-title")[0].firstElementChild.firstElementChild.nextElementSibling,s=i.nextElementSibling.firstElementChild.textContent;if(e[4])switch(e[4]){case"ratings":t.details="Viewing friends' ratings of...";break;case"reviews":t.details="Viewing friends' reviews of...";break;case"lists":t.details="Viewing friends' lists that include...";break;case"fans":t.details="Viewing friends who are fans of...";break;case"likes":t.details="Viewing friends who have liked..."}else t.details="Viewing friends who have seen...";t.state=`${i.textContent}, ${s}`,t.largeImageKey=getImageURLByAlt(clarifyString(i.textContent)),t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/L/Letterboxd/assets/logo.png";break}case"film":{const e=clarifyString(document.querySelectorAll(".film-title-wrapper")[0].firstElementChild.textContent),i=filterIterable(document.querySelectorAll("span"),(e=>{if("name"===e.getAttribute("itemprop"))return!0})).textContent,s=filterIterable(document.querySelectorAll("span"),(e=>{if(e.className.startsWith("rating rating-large"))return!0})).textContent;t.details=`Review of ${e}`,t.state=`By ${i} (${s})`,t.buttons=[{label:"View review",url:window.location.href}],t.largeImageKey=getImageURLByAlt(e),t.smallImageKey=getImageURLByAlt(i),t.smallImageText=i;break}}if(["watchlist","films","activity","blocked","followers","following","tags","likes","lists"].includes(e[1])){const i=document.querySelectorAll(".title-3")[0].firstElementChild.textContent;e[0]!==user&&e[0]!==user.toLowerCase()&&(t.details=t.details.replace("their",`${i}'s`).replace("they've",`${i} has`)),t.smallImageKey=getImageURLByAlt(i),t.smallImageText=i}}else t.details="At home";await presence.getSetting("show_buttons")||delete t.buttons,presence.setActivity(t)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;