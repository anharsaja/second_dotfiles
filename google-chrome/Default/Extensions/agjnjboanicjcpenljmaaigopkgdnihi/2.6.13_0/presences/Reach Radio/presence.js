var __webpack_exports__={};const presence=new Presence({clientId:"748698437720997888"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/R/Reach%20Radio/assets/logo.png"},[t,a,n,s]=await Promise.all([presence.getSetting("sInfo"),presence.getSetting("tElapsed"),presence.getSetting("sFormat1"),presence.getSetting("sFormat2")]),c="https://radiopanel.s3.nl-ams.scw.cloud/c9a65443-eed1-41ed-b9d2-743223b5ee75/a01dadcd-df3d-484b-8d20-4923156ce77a.svg"===document.querySelector("#react-listen-content > div > div > div.pt-4.startpause.col > button > img").src;if(t&&c)if(a&&(e.startTimestamp=browsingTimestamp),document.querySelector("#message > div"))e.details="Requesting a song",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/writing.png";else if(document.location.pathname.includes("/about"))e.details="Reading about Reach Radio",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";else if(document.location.pathname.includes("/timetable"))e.details="Viewing the timetable",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";else if(document.location.pathname.includes("/team"))e.details="Viewing the team",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";else if(document.location.pathname.includes("/privacy"))e.details="Reading Privacy Policy",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";else if(document.location.pathname.includes("/alexa-terms"))e.details="Reading Alexa Policy",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";else if(document.location.pathname.includes("/contact"))e.details="Writing to Reach Radio",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/writing.png";else if(document.location.pathname.includes("/all-news"))e.details="Viewing the news",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";else if(document.location.pathname.includes("/news/"))e.details="Reading article:",e.state=document.querySelector("#news3 > section > div > div > div > h4").textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";else if(document.location.pathname.includes("/podcasts"))e.details="Viewing podcasts",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";else if(document.location.pathname.includes("/podcast/"))e.details="Viewing podcast:",e.state=document.querySelector(".pod-name").textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";else if(document.location.pathname.includes("/listen-to-podcast/"))if(e.details="Listening to podcast:",e.state=document.querySelector(".pod-name").textContent,"plyr__controls__item plyr__control"===document.querySelector("#__layout > div > div.page > section > div > div.pod-player > div > div > div > button:nth-child(1)").className)e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",delete e.startTimestamp,delete e.endTimestamp;else{e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png";let t=0;const a=document.querySelector(".plyr__time").textContent.split(":");switch(a.length){case 3:t=parseInt(a[2])+60*parseInt(a[1].replace("-",""))+60*parseInt(a[0].replace("-",""))*60;break;case 2:t=parseInt(a[1])+60*parseInt(a[0].replace("-",""));break;case 1:t=parseInt(a[1])}e.startTimestamp=Math.floor(Date.now()/1e3),e.endTimestamp=Math.floor(Date.now()/1e3)+t}else"/"===document.location.pathname&&(e.details="Browsing...",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.smallImageText=document.querySelector("#current_song").textContent);else{c?(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",delete e.startTimestamp,delete e.endTimestamp):(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",a&&(e.startTimestamp=browsingTimestamp));const[t,i]=document.querySelector("#current_song").textContent.split(" - "),l=document.querySelector(".show_time").textContent;e.details=n.replace("%title%",i).replace("%artist%",t).replace("%presenter%",l),e.state=s.replace("%title%",i).replace("%artist%",t).replace("%presenter%",l),document.querySelector("#message > div")?e.smallImageText="Requesting a song":document.location.pathname.includes("/about")?e.smallImageText="Reading about Reach Radio":document.location.pathname.includes("/timetable")?e.smallImageText="Viewing the timetable":document.location.pathname.includes("/team")?e.smallImageText="Viewing the team":document.location.pathname.includes("/privacy")?e.smallImageText="Reading Privacy Policy":document.location.pathname.includes("/alexa-terms")?e.smallImageText="Reading Alexa Policy":document.location.pathname.includes("/contact")?e.smallImageText="Writing to Reach Radio":document.location.pathname.includes("/all-news")?e.smallImageText="Viewing the news":document.location.pathname.includes("/news/")?e.smallImageText=`Reading article: ${document.querySelector("#news3 > section > div > div > div > h4").textContent}`:document.location.pathname.includes("/podcasts")?e.smallImageText="Viewing podcasts":document.location.pathname.includes("/podcast/")?e.smallImageText=`Viewing podcast: ${document.querySelector(".pod-name").textContent}`:document.location.pathname.includes("/listen-to-podcast/")?e.smallImageText=`Listening to podcast: ${document.querySelector(".pod-name").textContent}`:"/"===document.location.pathname&&(e.smallImageText="Browsing...")}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;