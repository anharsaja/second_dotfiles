var __webpack_exports__={};const presence=new Presence({clientId:"873897838260678666"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const[e,t,a]=await Promise.all([presence.getSetting("buttons"),presence.getSetting("cover"),presence.getSetting("time")]),s={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/G/GX.games/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:n,href:r}=document.location;switch("English"===document.querySelector("footer button")?.textContent?n.split("/")[1]:n.split("/")[2]){case"":s.details="Browsing games";break;case"discover":s.details="Searching games";break;case"tags":s.details="Browsing tag",s.state=document.querySelector("main > div").textContent;break;case"feed":s.details="Browsing feed",s.state=document.querySelector("main > div").textContent;break;case"games":{const e=document.querySelectorAll("[href*='tagAlias'] > span");s.details=document.querySelector("h3"),s.state=`${e[0].textContent}, ${e[1].textContent}, ${e[2].textContent}`,s.buttons=[{label:"View Game",url:r}],t&&(s.largeImageKey=document.querySelector("meta[property='og:image']").content);break}case"challenges":s.details=document.querySelector("h3"),s.state=`Challenge: ${document.querySelector("main h6").textContent}`,s.buttons=[{label:"View Game",url:r}],t&&(s.largeImageKey=document.querySelector("meta[property='og:image']").content);break;case"library":s.details="Viewing library",s.state=document.querySelector("h1").textContent.split(" - ")[1];break;case"studios":s.details="Viewing studio",s.state=`${document.querySelector("main [href='/'] ").parentElement.lastChild.textContent}`,s.buttons=[{label:"View Page",url:r}];break;case"profile":s.details="Viewing their profile";break;case"messages":s.details="Viewing messages"}e||delete s.buttons,a||(delete s.startTimestamp,delete s.endTimestamp),presence.setActivity(s)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;