var __webpack_exports__={};const presence=new Presence({clientId:"808758769424138252"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused"});presence.on("UpdateData",(async()=>{const e=document.querySelector("video.vjs-tech"),t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/A/AnimationDigitalNetwork/assets/logo.png"},{pathname:s,href:a}=document.location,i=await presence.getSetting("buttons"),n=JSON.parse(document.querySelector('[type="application/ld+json"]')?.textContent);if(s?.includes("video")&&e)t.largeImageKey=document.querySelector('meta[property="og:image"]')?.content?.replace(/\/web\/.*/,"/web/affiche_370x0.jpg")??"logo",isNaN(e.duration)?(t.details="Looking at",t.state=n?.partOfSeries?.name??"An episode",t.buttons=[{label:"View Page",url:a}]):(t.details=n.partOfSeries.name,t.smallImageKey=e.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",t.smallImageText=e.paused?(await strings).pause:(await strings).play,[t.startTimestamp,t.endTimestamp]=presence.getTimestampsfromMedia(e),t.buttons=[{label:"Watch Episode",url:a}],e.paused&&(delete t.startTimestamp,delete t.endTimestamp));else if(s?.includes("video")&&!e)if(t.largeImageKey=document.querySelector('meta[property="og:image"]')?.content??"https://cdn.rcd.gg/PreMiD/websites/A/AnimationDigitalNetwork/assets/logo.png",document.querySelector("div.sc-AxjAm.khAjwj.sc-psDXd.iazofB")?.querySelector("span"))t.details="Browsing...";else{const e=document.querySelector('[property="og:title"]')?.content?.split("-");t.state=`Looking at ${n?.partOfSeries?.name??s?.includes("episode-")?s?.match(/episode-[0-9]*/gm)?.[0]?.replace("episode-","episode "):"An episode"}`,t.details=e?.length>5?`${e?.[0]} - ${e?.[1]}`:e?.[0],t.buttons=[{label:"View Page",url:a}]}else t.details="Browsing...";t.buttons&&!i&&delete t.buttons,t.details?presence.setActivity(t):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;