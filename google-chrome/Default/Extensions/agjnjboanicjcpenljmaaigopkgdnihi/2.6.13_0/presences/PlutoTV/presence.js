var __webpack_exports__={};const presence=new Presence({clientId:"640292045117980713"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused"}),browsingTimestamp=Math.floor(Date.now()/1e3);let title,playing,paused,progress,lastState,oldTitle,currentTime,duration,video;lastState=null,oldTitle=null,presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/PlutoTV/assets/logo.png"};"pluto.tv"===document.location.hostname&&(document.location.pathname.includes("/live-tv/")&&(progress=document.querySelector("#root > div.jss1.withHeader.withGuide > div.Player__Wrapper-kxPlPT.cCxNsj > div > div > div > div.PlayerOverlay__Wrapper-kMDJbl.dZAJEx > div > div > div.VideoControls__videoControls-irCOHX.frYEBe > div.VideoControls__bottomPanel-gpACgQ.jiJGDj > div > div > div > div"),progress=progress.style.cssText.replace("width: ","").replace("%;",""),lastState===progress&&"0"!==progress&&"100"!==progress?(playing=!0,paused=!0):"0"===progress||"100"===progress?(playing=!1,paused=!0):(lastState=progress,playing=!0,paused=!1),progress=Number(progress),progress=Math.round(progress)),!0===playing&&!1===paused||!0===playing&&!0===paused?(title=document.querySelector("#root > div.jss1.withHeader.withGuide > div.Player__Wrapper-kxPlPT.cCxNsj > div > div > div > div.PlayerOverlay__Wrapper-kMDJbl.dZAJEx > div > div > div.Overlay__copyWrapper-cCOfPR.dWHpCz > div.Overlay__title-kcjStc.NnGyI"),e.details=title.textContent,e.state=`${progress}% progressed`,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText="Playing"):document.location.pathname.includes("/on-demand/movies/")?(video=document.querySelector("#root > div.jss1.withHeader.withGuide > div.Player__Wrapper-kxPlPT.cCxNsj > div > div > div > div.Player__VideoWrapper-iChBud.eNibdw > div > div:nth-child(1) > div > div.container.chromeless.pointer-enabled > video"),({currentTime,duration,paused}=video),[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(Math.floor(currentTime),Math.floor(duration)),isNaN(duration)?isNaN(duration)&&(e.startTimestamp=browsingTimestamp,e.details="Looking at: ",title=document.querySelector("#root > div.jss1.withHeader.withGuide > div.Player__Wrapper-kxPlPT.ktRSHs > div > div > div > div.PlayerOverlay__Wrapper-kMDJbl.dZAJEx > div > div > div.Overlay__copyWrapper-cCOfPR.dWHpCz > div.Overlay__title-kcjStc.krcxuL"),title??=document.querySelector("#root > div.jss1.withHeader.withGuide > div.Player__Wrapper-kxPlPT.cCxNsj > div > div > div > div.PlayerOverlay__Wrapper-kMDJbl.dZAJEx > div > div > div.Overlay__copyWrapper-cCOfPR.dWHpCz > div.Overlay__title-kcjStc.krcxuL"),!title&&oldTitle?e.details=oldTitle:(e.details=title.textContent,oldTitle=title.textContent),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png"):(e.smallImageKey=paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=paused?(await strings).pause:(await strings).play,title=document.querySelector("#root > div.jss1.withHeader.withGuide > div.Player__Wrapper-kxPlPT.ktRSHs > div > div > div > div.PlayerOverlay__Wrapper-kMDJbl.dZAJEx > div > div > div.Overlay__copyWrapper-cCOfPR.dWHpCz > div.Overlay__title-kcjStc.krcxuL"),title??=document.querySelector("#root > div.jss1.withHeader.withGuide > div.Player__Wrapper-kxPlPT.cCxNsj > div > div > div > div.PlayerOverlay__Wrapper-kMDJbl.dZAJEx > div > div > div.Overlay__copyWrapper-cCOfPR.dWHpCz > div.Overlay__title-kcjStc.krcxuL"),!title&&oldTitle?e.details=oldTitle:(e.details=title.textContent,oldTitle=title.textContent),paused&&(delete e.startTimestamp,delete e.endTimestamp))):document.location.pathname.includes("/trending")?(e.startTimestamp=browsingTimestamp,e.details="Viewing what's trending"):document.location.pathname.includes("/on-demand")&&(e.details="Browsing on",e.state="demand shows...",e.startTimestamp=browsingTimestamp)),e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;