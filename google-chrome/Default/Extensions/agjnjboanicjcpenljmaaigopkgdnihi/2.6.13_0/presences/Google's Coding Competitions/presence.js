var __webpack_exports__={};let presence;function setPresence(){presence=location.pathname.includes("kickstart")?new Presence({clientId:"848588920437604382"}):location.pathname.includes("codejam")?new Presence({clientId:"848588299147935744"}):location.pathname.includes("hashcode")?new Presence({clientId:"848588586524868701"}):new Presence({clientId:"848587645760176148"})}const timeElapsed=~~(Date.now()/1e3);setPresence(),presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/G/Google's%20Coding%20Competitions/assets/logo.png",details:"Home page",startTimestamp:timeElapsed};switch(location.pathname.split("/")[1]){case"kickstart":switch(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/G/Google's%20Coding%20Competitions/assets/0.png",location.pathname.split("/")[2]){case"about":e.details="Reading about Kick Start",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case"schedule":e.details="Viewing Schedule";break;case"faq":e.details="Reading FAQ",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case"rulesandterms":e.details="Reading Rules and Terms",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case"archive":location.pathname.split("/")[3]?(e.details="Viewing Competition archive",e.state=document.querySelector(".headline-2").textContent):e.details="Viewing Competition archive";break;case"round":if(location.pathname.split("/")[4]){const[t]=document.querySelector(".headline-5").textContent.split("-"),a=document.querySelector("#problem-select-selected-text").textContent;!location.hash||location.hash.includes("#problem")?(e.details=`Solving: ${t}`,e.state=a):(e.details=`Reading Analysis: ${t}`,e.state=a,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png")}else e.details=`Viewing ${document.querySelector(".headline-2").textContent}`;break;case"submissions":e.details=`Viewing submissions for ${document.querySelector(".rounds-header__container > p > b").textContent}`,e.state=document.querySelector(".headline-2").textContent}break;case"codejam":switch(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/G/Google's%20Coding%20Competitions/assets/1.png",location.pathname.split("/")[2]){case"about":e.details="Reading about Code Jam",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case"schedule":e.details="Viewing Schedule";break;case"faq":e.details="Reading FAQ",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case"rulesandterms":e.details="Reading Rules and Terms",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case"archive":location.pathname.split("/")[3]?(e.details="Viewing Competition archive",e.state=document.querySelector(".headline-2").textContent):e.details="Viewing Competition archive";break;case"round":if(location.pathname.split("/")[4]){const[t]=document.querySelector(".headline-5").textContent.split("-"),a=document.querySelector("#problem-select-selected-text").textContent;!location.hash||location.hash.includes("#problem")?(e.details=`Solving: ${t}`,e.state=a):(e.details=`Reading Analysis: ${t}`,e.state=a,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png")}else e.details=`Viewing ${document.querySelector(".headline-2").textContent}`;break;case"submissions":e.details=`Viewing submissions for ${document.querySelector(".rounds-header__container > p > b").textContent}`,e.state=document.querySelector(".headline-2").textContent}break;case"hashcode":switch(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/G/Google's%20Coding%20Competitions/assets/2.png",location.pathname.split("/")[2]){case"about":e.details="Reading about Hash Code",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case"schedule":e.details="Viewing Schedule";break;case"hubs":e.details="Viewing Hubs";break;case"rulesandterms":e.details="Reading Rules and Terms",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case"faq":e.details="Reading FAQ",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case"archive":location.pathname.split("/")[3]?(e.details="Viewing Scoreboard",e.state=document.querySelector(".headline-2").textContent):e.details="Viewing Competition archive"}break;default:delete e.startTimestamp,location.pathname.includes("profile")?e.details="Viewing their profile":location.pathname.includes("past-competitions")&&(e.details="Viewing past competitions")}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UUssSUFHckJYLEVBQWFFLFFBQVUscUJBQXFCUSxJQUM1Q1YsRUFBYU0sTUFBUUssRUFDckJYLEVBQWFLLGNBQWdCLGtEQUVyQyxNQWZJTCxFQUFhRSxRQUFVLFdBQVdLLFNBQVNDLGNBQWMsZUFBZUMsY0FnQjVFLE1BRUosSUFBSyxjQUNEVCxFQUFhRSxRQUFVLDJCQUEyQkssU0FBU0MsY0FBYyxxQ0FDcEVDLGNBQ0xULEVBQWFNLE1BQ1RDLFNBQVNDLGNBQWMsZUFBZUMsWUFJbEQsTUFFSixJQUFLLFdBRUQsT0FEQVQsRUFBYUMsY0FBZ0IscUZBQ3JCWCxTQUFTQyxTQUFTYSxNQUFNLEtBQUssSUFDakMsSUFBSyxRQUNESixFQUFhRSxRQUFVLDBCQUN2QkYsRUFBYUssY0FBZ0Isa0RBQzdCLE1BRUosSUFBSyxXQUNETCxFQUFhRSxRQUFVLG1CQUN2QixNQUVKLElBQUssT0FDREYsRUFBYUUsUUFBVSxlQUN2QixNQUVKLElBQUssZ0JBQ0RGLEVBQWFFLFFBQVUsMEJBQ3ZCRixFQUFhSyxjQUFnQixrREFDN0IsTUFFSixJQUFLLE1BQ0RMLEVBQWFFLFFBQVUsY0FDdkJGLEVBQWFLLGNBQWdCLGtEQUM3QixNQUVKLElBQUssVUFDSWYsU0FBU0MsU0FBU2EsTUFBTSxLQUFLLElBRzlCSixFQUFhRSxRQUFVLHFCQUN2QkYsRUFBYU0sTUFDVEMsU0FBU0MsY0FBYyxlQUFlQyxhQUoxQ1QsRUFBYUUsUUFBVSw4QkFTbkMsTUFFSixlQUNXRixFQUFhRyxlQUNoQmIsU0FBU0MsU0FBU0MsU0FBUyxXQUMzQlEsRUFBYUUsUUFBVSx3QkFDbEJaLFNBQVNDLFNBQVNDLFNBQVMsdUJBQ2hDUSxFQUFhRSxRQUFVLDZCQUcvQkYsRUFBYUUsUUFDYmQsU0FBU3lCLFlBQVliLEdBRXJCWixTQUFTeUIsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3ByZXNlbmNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBwcmVzZW5jZTtcbmZ1bmN0aW9uIHNldFByZXNlbmNlKCkge1xuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZS5pbmNsdWRlcyhcImtpY2tzdGFydFwiKSlcbiAgICAgICAgcHJlc2VuY2UgPSBuZXcgUHJlc2VuY2UoeyBjbGllbnRJZDogXCI4NDg1ODg5MjA0Mzc2MDQzODJcIiB9KTtcbiAgICBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5pbmNsdWRlcyhcImNvZGVqYW1cIikpXG4gICAgICAgIHByZXNlbmNlID0gbmV3IFByZXNlbmNlKHsgY2xpZW50SWQ6IFwiODQ4NTg4Mjk5MTQ3OTM1NzQ0XCIgfSk7XG4gICAgZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5jbHVkZXMoXCJoYXNoY29kZVwiKSlcbiAgICAgICAgcHJlc2VuY2UgPSBuZXcgUHJlc2VuY2UoeyBjbGllbnRJZDogXCI4NDg1ODg1ODY1MjQ4Njg3MDFcIiB9KTtcbiAgICBlbHNlXG4gICAgICAgIHByZXNlbmNlID0gbmV3IFByZXNlbmNlKHsgY2xpZW50SWQ6IFwiODQ4NTg3NjQ1NzYwMTc2MTQ4XCIgfSk7XG59XG5jb25zdCB0aW1lRWxhcHNlZCA9IH5+KERhdGUubm93KCkgLyAxMDAwKTtcbnNldFByZXNlbmNlKCk7XG5wcmVzZW5jZS5vbihcIlVwZGF0ZURhdGFcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHByZXNlbmNlRGF0YSA9IHtcbiAgICAgICAgbGFyZ2VJbWFnZUtleTogXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL0cvR29vZ2xlJ3MlMjBDb2RpbmclMjBDb21wZXRpdGlvbnMvYXNzZXRzL2xvZ28ucG5nXCIsXG4gICAgICAgIGRldGFpbHM6IFwiSG9tZSBwYWdlXCIsXG4gICAgICAgIHN0YXJ0VGltZXN0YW1wOiB0aW1lRWxhcHNlZCxcbiAgICB9O1xuICAgIHN3aXRjaCAobG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoXCIvXCIpWzFdKSB7XG4gICAgICAgIGNhc2UgXCJraWNrc3RhcnRcIjoge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmxhcmdlSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRy9Hb29nbGUncyUyMENvZGluZyUyMENvbXBldGl0aW9ucy9hc3NldHMvMC5wbmdcIjtcbiAgICAgICAgICAgIHN3aXRjaCAobG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoXCIvXCIpWzJdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcImFib3V0XCI6IHtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlJlYWRpbmcgYWJvdXQgS2ljayBTdGFydFwiO1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvcmVhZGluZy5wbmdcIjtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgXCJzY2hlZHVsZVwiOiB7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIFNjaGVkdWxlXCI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlIFwiZmFxXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlJlYWRpbmcgRkFRXCI7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9yZWFkaW5nLnBuZ1wiO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSBcInJ1bGVzYW5kdGVybXNcIjoge1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiUmVhZGluZyBSdWxlcyBhbmQgVGVybXNcIjtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3JlYWRpbmcucG5nXCI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlIFwiYXJjaGl2ZVwiOiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoXCIvXCIpWzNdKVxuICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgQ29tcGV0aXRpb24gYXJjaGl2ZVwiO1xuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIENvbXBldGl0aW9uIGFyY2hpdmVcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oZWFkbGluZS0yXCIpLnRleHRDb250ZW50O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlIFwicm91bmRcIjoge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KFwiL1wiKVs0XSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBgVmlld2luZyAke2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaGVhZGxpbmUtMlwiKS50ZXh0Q29udGVudH1gO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgW3JvdW5kXSA9IGRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuaGVhZGxpbmUtNVwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50ZXh0Q29udGVudC5zcGxpdChcIi1cIiksIHByb2JsZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2JsZW0tc2VsZWN0LXNlbGVjdGVkLXRleHRcIikudGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWxvY2F0aW9uLmhhc2ggfHwgbG9jYXRpb24uaGFzaC5pbmNsdWRlcyhcIiNwcm9ibGVtXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBgU29sdmluZzogJHtyb3VuZH1gO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IHByb2JsZW07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IGBSZWFkaW5nIEFuYWx5c2lzOiAke3JvdW5kfWA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gcHJvYmxlbTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvcmVhZGluZy5wbmdcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSBcInN1Ym1pc3Npb25zXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBgVmlld2luZyBzdWJtaXNzaW9ucyBmb3IgJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJvdW5kcy1oZWFkZXJfX2NvbnRhaW5lciA+IHAgPiBiXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAudGV4dENvbnRlbnR9YDtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaGVhZGxpbmUtMlwiKS50ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcImNvZGVqYW1cIjoge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmxhcmdlSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRy9Hb29nbGUncyUyMENvZGluZyUyMENvbXBldGl0aW9ucy9hc3NldHMvMS5wbmdcIjtcbiAgICAgICAgICAgIHN3aXRjaCAobG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoXCIvXCIpWzJdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcImFib3V0XCI6IHtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlJlYWRpbmcgYWJvdXQgQ29kZSBKYW1cIjtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3JlYWRpbmcucG5nXCI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlIFwic2NoZWR1bGVcIjoge1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBTY2hlZHVsZVwiO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSBcImZhcVwiOiB7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJSZWFkaW5nIEZBUVwiO1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvcmVhZGluZy5wbmdcIjtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgXCJydWxlc2FuZHRlcm1zXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlJlYWRpbmcgUnVsZXMgYW5kIFRlcm1zXCI7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9yZWFkaW5nLnBuZ1wiO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSBcImFyY2hpdmVcIjoge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KFwiL1wiKVszXSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIENvbXBldGl0aW9uIGFyY2hpdmVcIjtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBDb21wZXRpdGlvbiBhcmNoaXZlXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaGVhZGxpbmUtMlwiKS50ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSBcInJvdW5kXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZS5zcGxpdChcIi9cIilbNF0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gYFZpZXdpbmcgJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhlYWRsaW5lLTJcIikudGV4dENvbnRlbnR9YDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IFtyb3VuZF0gPSBkb2N1bWVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmhlYWRsaW5lLTVcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGV4dENvbnRlbnQuc3BsaXQoXCItXCIpLCBwcm9ibGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9ibGVtLXNlbGVjdC1zZWxlY3RlZC10ZXh0XCIpLnRleHRDb250ZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFsb2NhdGlvbi5oYXNoIHx8IGxvY2F0aW9uLmhhc2guaW5jbHVkZXMoXCIjcHJvYmxlbVwiKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gYFNvbHZpbmc6ICR7cm91bmR9YDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBwcm9ibGVtO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBgUmVhZGluZyBBbmFseXNpczogJHtyb3VuZH1gO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IHByb2JsZW07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3JlYWRpbmcucG5nXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgXCJzdWJtaXNzaW9uc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gYFZpZXdpbmcgc3VibWlzc2lvbnMgZm9yICR7ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yb3VuZHMtaGVhZGVyX19jb250YWluZXIgPiBwID4gYlwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnRleHRDb250ZW50fWA7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhlYWRsaW5lLTJcIikudGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJoYXNoY29kZVwiOiB7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9HL0dvb2dsZSdzJTIwQ29kaW5nJTIwQ29tcGV0aXRpb25zL2Fzc2V0cy8yLnBuZ1wiO1xuICAgICAgICAgICAgc3dpdGNoIChsb2NhdGlvbi5wYXRobmFtZS5zcGxpdChcIi9cIilbMl0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIFwiYWJvdXRcIjoge1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiUmVhZGluZyBhYm91dCBIYXNoIENvZGVcIjtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3JlYWRpbmcucG5nXCI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlIFwic2NoZWR1bGVcIjoge1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBTY2hlZHVsZVwiO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSBcImh1YnNcIjoge1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBIdWJzXCI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlIFwicnVsZXNhbmR0ZXJtc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJSZWFkaW5nIFJ1bGVzIGFuZCBUZXJtc1wiO1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvcmVhZGluZy5wbmdcIjtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgXCJmYXFcIjoge1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiUmVhZGluZyBGQVFcIjtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3JlYWRpbmcucG5nXCI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlIFwiYXJjaGl2ZVwiOiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoXCIvXCIpWzNdKVxuICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgQ29tcGV0aXRpb24gYXJjaGl2ZVwiO1xuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIFNjb3JlYm9hcmRcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oZWFkbGluZS0yXCIpLnRleHRDb250ZW50O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIGRlbGV0ZSBwcmVzZW5jZURhdGEuc3RhcnRUaW1lc3RhbXA7XG4gICAgICAgICAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5jbHVkZXMoXCJwcm9maWxlXCIpKVxuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHRoZWlyIHByb2ZpbGVcIjtcbiAgICAgICAgICAgIGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluY2x1ZGVzKFwicGFzdC1jb21wZXRpdGlvbnNcIikpXG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgcGFzdCBjb21wZXRpdGlvbnNcIjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAocHJlc2VuY2VEYXRhLmRldGFpbHMpXG4gICAgICAgIHByZXNlbmNlLnNldEFjdGl2aXR5KHByZXNlbmNlRGF0YSk7XG4gICAgZWxzZVxuICAgICAgICBwcmVzZW5jZS5zZXRBY3Rpdml0eSgpO1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljSEpsYzJWdVkyVXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lKd2NtVnpaVzVqWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRlBRU3hKUVVGSkxGRkJRV3RDTEVOQlFVTTdRVUZGZGtJc1UwRkJVeXhYUVVGWE8wbEJRMjVDTEVsQlFVa3NVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJReXhSUVVGUkxFTkJRVU1zVjBGQlZ5eERRVUZETzFGQlF6RkRMRkZCUVZFc1IwRkJSeXhKUVVGSkxGRkJRVkVzUTBGQlF5eEZRVUZGTEZGQlFWRXNSVUZCUlN4dlFrRkJiMElzUlVGQlJTeERRVUZETEVOQlFVTTdVMEZEZUVRc1NVRkJTU3hSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETEZGQlFWRXNRMEZCUXl4VFFVRlRMRU5CUVVNN1VVRkROME1zVVVGQlVTeEhRVUZITEVsQlFVa3NVVUZCVVN4RFFVRkRMRVZCUVVVc1VVRkJVU3hGUVVGRkxHOUNRVUZ2UWl4RlFVRkZMRU5CUVVNc1EwRkJRenRUUVVONFJDeEpRVUZKTEZGQlFWRXNRMEZCUXl4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExGVkJRVlVzUTBGQlF6dFJRVU01UXl4UlFVRlJMRWRCUVVjc1NVRkJTU3hSUVVGUkxFTkJRVU1zUlVGQlJTeFJRVUZSTEVWQlFVVXNiMEpCUVc5Q0xFVkJRVVVzUTBGQlF5eERRVUZET3p0UlFVTjRSQ3hSUVVGUkxFZEJRVWNzU1VGQlNTeFJRVUZSTEVOQlFVTXNSVUZCUlN4UlFVRlJMRVZCUVVVc2IwSkJRVzlDTEVWQlFVVXNRMEZCUXl4RFFVRkRPMEZCUTJ4RkxFTkJRVU03UVVGRlJDeE5RVUZOTEZkQlFWY3NSMEZCVnl4RFFVRkRMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEVkQlFVY3NTVUZCU1N4RFFVRkRMRU5CUVVNN1FVRkZiRVFzVjBGQlZ5eEZRVUZGTEVOQlFVTTdRVUZSWkN4UlFVRlJMRU5CUVVNc1JVRkJSU3hEUVVGRExGbEJRVmtzUlVGQlJTeExRVUZMTEVsQlFVa3NSVUZCUlR0SlFVTndReXhOUVVGTkxGbEJRVmtzUjBGQmFVSTdVVUZEYkVNc1lVRkJZU3hGUVVOYUxIVkdRVUYxUmp0UlFVTjRSaXhQUVVGUExFVkJRVVVzVjBGQlZ6dFJRVU53UWl4alFVRmpMRVZCUVVVc1YwRkJWenRMUVVNelFpeERRVUZETzBsQlJVWXNVVUZCVVN4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSVHRSUVVONFF5eExRVUZMTEZkQlFWY3NRMEZCUXl4RFFVRkRPMWxCUTJwQ0xGbEJRVmtzUTBGQlF5eGhRVUZoTEhWR1FVRnRRaXhEUVVGRE8xbEJSVGxETEZGQlFWRXNVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVN1owSkJRM2hETEV0QlFVc3NUMEZCVHl4RFFVRkRMRU5CUVVNN2IwSkJRMklzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl3d1FrRkJNRUlzUTBGQlF6dHZRa0ZEYkVRc1dVRkJXU3hEUVVGRExHRkJRV0VzYjBSQlFXbENMRU5CUVVNN2IwSkJRelZETEUxQlFVMDdhVUpCUTA0N1owSkJSVVFzUzBGQlN5eFZRVUZWTEVOQlFVTXNRMEZCUXp0dlFrRkRhRUlzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4clFrRkJhMElzUTBGQlF6dHZRa0ZETVVNc1RVRkJUVHRwUWtGRFRqdG5Ra0ZGUkN4TFFVRkxMRXRCUVVzc1EwRkJReXhEUVVGRE8yOUNRVU5ZTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1lVRkJZU3hEUVVGRE8yOUNRVU55UXl4WlFVRlpMRU5CUVVNc1lVRkJZU3h2UkVGQmFVSXNRMEZCUXp0dlFrRkROVU1zVFVGQlRUdHBRa0ZEVGp0blFrRkZSQ3hMUVVGTExHVkJRV1VzUTBGQlF5eERRVUZETzI5Q1FVTnlRaXhaUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEhsQ1FVRjVRaXhEUVVGRE8yOUNRVU5xUkN4WlFVRlpMRU5CUVVNc1lVRkJZU3h2UkVGQmFVSXNRMEZCUXp0dlFrRkROVU1zVFVGQlRUdHBRa0ZEVGp0blFrRkZSQ3hMUVVGTExGTkJRVk1zUTBGQlF5eERRVUZETzI5Q1FVTm1MRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETEV0QlFVc3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03ZDBKQlEyNURMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzTmtKQlFUWkNMRU5CUVVNN2VVSkJRMnBFTzNkQ1FVTktMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzTmtKQlFUWkNMRU5CUVVNN2QwSkJRM0pFTEZsQlFWa3NRMEZCUXl4TFFVRkxPelJDUVVOcVFpeFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhEUVVGRExGZEJRVmNzUTBGQlF6dHhRa0ZEYmtRN2IwSkJRMFFzVFVGQlRUdHBRa0ZEVGp0blFrRkZSQ3hMUVVGTExFOUJRVThzUTBGQlF5eERRVUZETzI5Q1FVTmlMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETEV0QlFVc3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJUdDNRa0ZEY2tNc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eFhRVU4wUWl4UlFVRlJMRU5CUVVNc1lVRkJZU3hEUVVGRExHRkJRV0VzUTBGQlF5eERRVUZETEZkQlEzWkRMRVZCUVVVc1EwRkJRenR4UWtGRFNEdDVRa0ZCVFR0M1FrRkRUaXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVkQlFVY3NVVUZCVVRzMlFrRkRja0lzWVVGQllTeERRVUZETEdGQlFXRXNRMEZCUXpzMlFrRkROVUlzVjBGQlZ5eERRVUZETEV0QlFVc3NRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkRlRUlzVDBGQlR5eEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUXk5Q0xDdENRVUVyUWl4RFFVTXZRaXhEUVVGRExGZEJRVmNzUTBGQlF6dDNRa0ZGWml4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzU1VGQlNTeFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVU1zUlVGQlJUczBRa0ZEZWtRc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eFpRVUZaTEV0QlFVc3NSVUZCUlN4RFFVRkRPelJDUVVNelF5eFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRTlCUVU4c1EwRkJRenQ1UWtGRE4wSTdOa0pCUVUwN05FSkJRMDRzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4eFFrRkJjVUlzUzBGQlN5eEZRVUZGTEVOQlFVTTdORUpCUTNCRUxGbEJRVmtzUTBGQlF5eExRVUZMTEVkQlFVY3NUMEZCVHl4RFFVRkRPelJDUVVNM1FpeFpRVUZaTEVOQlFVTXNZVUZCWVN4dlJFRkJhVUlzUTBGQlF6dDVRa0ZETlVNN2NVSkJRMFE3YjBKQlEwUXNUVUZCVFR0cFFrRkRUanRuUWtGRlJDeExRVUZMTEdGQlFXRXNRMEZCUXl4RFFVRkRPMjlDUVVOdVFpeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMREpDUVVOMFFpeFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMRzFEUVVGdFF5eERRVUZETzNsQ1FVTjZSQ3hYUVVOSUxFVkJRVVVzUTBGQlF6dHZRa0ZEU0N4WlFVRlpMRU5CUVVNc1MwRkJTenQzUWtGRGFrSXNVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhoUVVGaExFTkJRVU1zUTBGQlF5eFhRVUZYTEVOQlFVTTdiMEpCUTI1RUxFMUJRVTA3YVVKQlEwNDdZVUZEUkR0WlFVTkVMRTFCUVUwN1UwRkRUanRSUVVWRUxFdEJRVXNzVTBGQlV5eERRVUZETEVOQlFVTTdXVUZEWml4WlFVRlpMRU5CUVVNc1lVRkJZU3gxUmtGQmFVSXNRMEZCUXp0WlFVVTFReXhSUVVGUkxGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTzJkQ1FVTjRReXhMUVVGTExFOUJRVThzUTBGQlF5eERRVUZETzI5Q1FVTmlMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzZDBKQlFYZENMRU5CUVVNN2IwSkJRMmhFTEZsQlFWa3NRMEZCUXl4aFFVRmhMRzlFUVVGcFFpeERRVUZETzI5Q1FVTTFReXhOUVVGTk8ybENRVU5PTzJkQ1FVVkVMRXRCUVVzc1ZVRkJWU3hEUVVGRExFTkJRVU03YjBKQlEyaENMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzYTBKQlFXdENMRU5CUVVNN2IwSkJRekZETEUxQlFVMDdhVUpCUTA0N1owSkJSVVFzUzBGQlN5eExRVUZMTEVOQlFVTXNRMEZCUXp0dlFrRkRXQ3haUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEdGQlFXRXNRMEZCUXp0dlFrRkRja01zV1VGQldTeERRVUZETEdGQlFXRXNiMFJCUVdsQ0xFTkJRVU03YjBKQlF6VkRMRTFCUVUwN2FVSkJRMDQ3WjBKQlJVUXNTMEZCU3l4bFFVRmxMRU5CUVVNc1EwRkJRenR2UWtGRGNrSXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXg1UWtGQmVVSXNRMEZCUXp0dlFrRkRha1FzV1VGQldTeERRVUZETEdGQlFXRXNiMFJCUVdsQ0xFTkJRVU03YjBKQlF6VkRMRTFCUVUwN2FVSkJRMDQ3WjBKQlJVUXNTMEZCU3l4VFFVRlRMRU5CUVVNc1EwRkJRenR2UWtGRFppeEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPM2RDUVVOdVF5eFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMRFpDUVVFMlFpeERRVUZETzNsQ1FVTnFSRHQzUWtGRFNpeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMRFpDUVVFMlFpeERRVUZETzNkQ1FVTnlSQ3haUVVGWkxFTkJRVU1zUzBGQlN6czBRa0ZEYWtJc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGQlF5eGhRVUZoTEVOQlFVTXNRMEZCUXl4WFFVRlhMRU5CUVVNN2NVSkJRMjVFTzI5Q1FVTkVMRTFCUVUwN2FVSkJRMDQ3WjBKQlJVUXNTMEZCU3l4UFFVRlBMRU5CUVVNc1EwRkJRenR2UWtGRFlpeEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVN2QwSkJRM0pETEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1YwRkRkRUlzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJReXhYUVVOMlF5eEZRVUZGTEVOQlFVTTdjVUpCUTBnN2VVSkJRVTA3ZDBKQlEwNHNUVUZCVFN4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExGRkJRVkU3TmtKQlEzSkNMR0ZCUVdFc1EwRkJReXhoUVVGaExFTkJRVU03TmtKQlF6VkNMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlEzaENMRTlCUVU4c1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVU12UWl3clFrRkJLMElzUTBGREwwSXNRMEZCUXl4WFFVRlhMRU5CUVVNN2QwSkJSV1lzU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4SlFVRkpMRWxCUVVrc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNWVUZCVlN4RFFVRkRMRVZCUVVVN05FSkJRM3BFTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1dVRkJXU3hMUVVGTExFVkJRVVVzUTBGQlF6czBRa0ZETTBNc1dVRkJXU3hEUVVGRExFdEJRVXNzUjBGQlJ5eFBRVUZQTEVOQlFVTTdlVUpCUXpkQ096WkNRVUZOT3pSQ1FVTk9MRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzY1VKQlFYRkNMRXRCUVVzc1JVRkJSU3hEUVVGRE96UkNRVU53UkN4WlFVRlpMRU5CUVVNc1MwRkJTeXhIUVVGSExFOUJRVThzUTBGQlF6czBRa0ZETjBJc1dVRkJXU3hEUVVGRExHRkJRV0VzYjBSQlFXbENMRU5CUVVNN2VVSkJRelZETzNGQ1FVTkVPMjlDUVVORUxFMUJRVTA3YVVKQlEwNDdaMEpCUlVRc1MwRkJTeXhoUVVGaExFTkJRVU1zUTBGQlF6dHZRa0ZEYmtJc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5d3lRa0ZEZEVJc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGQlF5eHRRMEZCYlVNc1EwRkJRenQ1UWtGRGVrUXNWMEZEU0N4RlFVRkZMRU5CUVVNN2IwSkJRMGdzV1VGQldTeERRVUZETEV0QlFVczdkMEpCUTJwQ0xGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNZVUZCWVN4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRE8yOUNRVU51UkN4TlFVRk5PMmxDUVVOT08yRkJRMFE3V1VGRFJDeE5RVUZOTzFOQlEwNDdVVUZGUkN4TFFVRkxMRlZCUVZVc1EwRkJReXhEUVVGRE8xbEJRMmhDTEZsQlFWa3NRMEZCUXl4aFFVRmhMSFZHUVVGclFpeERRVUZETzFsQlJUZERMRkZCUVZFc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVU3WjBKQlEzaERMRXRCUVVzc1QwRkJUeXhEUVVGRExFTkJRVU03YjBKQlEySXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXg1UWtGQmVVSXNRMEZCUXp0dlFrRkRha1FzV1VGQldTeERRVUZETEdGQlFXRXNiMFJCUVdsQ0xFTkJRVU03YjBKQlF6VkRMRTFCUVUwN2FVSkJRMDQ3WjBKQlJVUXNTMEZCU3l4VlFVRlZMRU5CUVVNc1EwRkJRenR2UWtGRGFFSXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhyUWtGQmEwSXNRMEZCUXp0dlFrRkRNVU1zVFVGQlRUdHBRa0ZEVGp0blFrRkZSQ3hMUVVGTExFMUJRVTBzUTBGQlF5eERRVUZETzI5Q1FVTmFMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzWTBGQll5eERRVUZETzI5Q1FVTjBReXhOUVVGTk8ybENRVU5PTzJkQ1FVVkVMRXRCUVVzc1pVRkJaU3hEUVVGRExFTkJRVU03YjBKQlEzSkNMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzZVVKQlFYbENMRU5CUVVNN2IwSkJRMnBFTEZsQlFWa3NRMEZCUXl4aFFVRmhMRzlFUVVGcFFpeERRVUZETzI5Q1FVTTFReXhOUVVGTk8ybENRVU5PTzJkQ1FVVkVMRXRCUVVzc1MwRkJTeXhEUVVGRExFTkJRVU03YjBKQlExZ3NXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhoUVVGaExFTkJRVU03YjBKQlEzSkRMRmxCUVZrc1EwRkJReXhoUVVGaExHOUVRVUZwUWl4RFFVRkRPMjlDUVVNMVF5eE5RVUZOTzJsQ1FVTk9PMmRDUVVWRUxFdEJRVXNzVTBGQlV5eERRVUZETEVOQlFVTTdiMEpCUTJZc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dDNRa0ZEYmtNc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5dzJRa0ZCTmtJc1EwRkJRenQ1UWtGRGFrUTdkMEpCUTBvc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eHZRa0ZCYjBJc1EwRkJRenQzUWtGRE5VTXNXVUZCV1N4RFFVRkRMRXRCUVVzN05FSkJRMnBDTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1lVRkJZU3hEUVVGRExFTkJRVU1zVjBGQlZ5eERRVUZETzNGQ1FVTnVSRHR2UWtGRFJDeE5RVUZOTzJsQ1FVTk9PMkZCUTBRN1dVRkRSQ3hOUVVGTk8xTkJRMDQ3VVVGRlJDeFBRVUZQTEVOQlFVTXNRMEZCUXp0WlFVTlNMRTlCUVU4c1dVRkJXU3hEUVVGRExHTkJRV01zUTBGQlF6dFpRVVZ1UXl4SlFVRkpMRkZCUVZFc1EwRkJReXhSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXp0blFrRkRlRU1zV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4MVFrRkJkVUlzUTBGQlF6dHBRa0ZETTBNc1NVRkJTU3hSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETEZGQlFWRXNRMEZCUXl4dFFrRkJiVUlzUTBGQlF6dG5Ra0ZEZGtRc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5d3lRa0ZCTWtJc1EwRkJRenRUUVVOd1JEdExRVU5FTzBsQlJVUXNTVUZCU1N4WlFVRlpMRU5CUVVNc1QwRkJUenRSUVVGRkxGRkJRVkVzUTBGQlF5eFhRVUZYTEVOQlFVTXNXVUZCV1N4RFFVRkRMRU5CUVVNN08xRkJRM2hFTEZGQlFWRXNRMEZCUXl4WFFVRlhMRVZCUVVVc1EwRkJRenRCUVVNM1FpeERRVUZETEVOQlFVTXNRMEZCUXlKOSJdLCJuYW1lcyI6WyJwcmVzZW5jZSIsInNldFByZXNlbmNlIiwibG9jYXRpb24iLCJwYXRobmFtZSIsImluY2x1ZGVzIiwiUHJlc2VuY2UiLCJjbGllbnRJZCIsInRpbWVFbGFwc2VkIiwiRGF0ZSIsIm5vdyIsIm9uIiwiYXN5bmMiLCJwcmVzZW5jZURhdGEiLCJsYXJnZUltYWdlS2V5IiwiZGV0YWlscyIsInN0YXJ0VGltZXN0YW1wIiwic3BsaXQiLCJzbWFsbEltYWdlS2V5Iiwic3RhdGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ0ZXh0Q29udGVudCIsInJvdW5kIiwicHJvYmxlbSIsImhhc2giLCJzZXRBY3Rpdml0eSJdLCJzb3VyY2VSb290IjoiIn0=
undefined;