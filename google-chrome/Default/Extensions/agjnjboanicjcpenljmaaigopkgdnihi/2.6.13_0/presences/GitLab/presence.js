var __webpack_exports__={};const presence=new Presence({clientId:"709526684428271687"}),browsingTimestamp=Math.floor(Date.now()/1e3);let owner,title,presenceprivate;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/G/GitLab/assets/logo.png",startTimestamp:browsingTimestamp},t=await presence.getSetting("lock");if(presenceprivate=document.querySelector("div.d-inline-flex.align-items-baseline > h1 > span"),"gitlab.com"===window.location.hostname)if("/"===document.location.pathname||document.location.pathname.includes("/dashboard/projects"))"/dashboard/projects/starred"===document.location.pathname?e.details="Viewing Starred":e.details="Viewing Dashboard";else if("/projects/new/"===document.location.pathname)e.details="Creating a project";else if("/groups/new"===document.location.pathname)e.details="Creating a group";else if(document.location.pathname.includes("/explore"))"/explore/snippets"===document.location.pathname?e.details="Exploring Snippets":e.details="Exploring projects";else switch(document.location.pathname){case"/dashboard/groups":e.details="Viewing Groups";break;case"/dashboard/activity":e.details="Viewing Activity";break;case"/dashboard/milestones":e.details="Viewing Milestones";break;case"/dashboard/snippets":e.details="Viewing Snippets";break;case"/-/operations/environments":e.details="Viewing Environments";break;case"/-/operations":e.details="Viewing Operations";break;case"/-/security":e.details="Viewing Security";break;case"/dashboard/issues":e.details="Viewing Issuses";break;case"/dashboard/merge_requests":e.details="Viewing Merge Requests";break;case"/dashboard/todos":e.details="Viewing TODOS";break;case"/help":e.details="Viewing Help";break;case"/users/sign_in":e.details="Signning in or Registering";break;case"/search":title=document.querySelector("#dashboard_search"),e.details="Searching",e.state=title.textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText="Searching";break;default:title=document.querySelector("body > div.layout-page.page-with-contextual-sidebar > div.content-wrapper > div.alert-wrapper > nav > div > div > ul > li:nth-child(2) > a > span"),owner=document.querySelector("body > div.layout-page.page-with-contextual-sidebar > div.content-wrapper > div.alert-wrapper > nav > div > div > ul > li:nth-child(1) > a"),presenceprivate.title.startsWith("Private -")&&t?(e.details="Viewing a Private Presence",e.state="or Private Group"):title&&owner?(e.details=title.textContent,e.state=owner.textContent):null===title&&owner?(e.details=owner.textContent,e.state="My Respository"):null===title&&null===owner?(owner=document.querySelector("#content-body > div.user-profile > div.cover-block.user-cover-block > div.profile-header > div.user-info > p > span:nth-child(1)"),e.details="Viewing:",e.state=owner.textContent):e.details="Viewing Unknown"}else if("about.gitlab.com"===window.location.hostname){switch(document.location.pathname){case"/":e.details="Viewing Home Page";break;case"/stages-devops-lifecycle/":e.details="Viewing DevOps Lifecycle";break;case"/services/":e.details="Viewing Profesional Services"}title=document.querySelector("body > div.wrapper.gitlab-ee-page > div.image-title > div > div > h1"),title?e.details=`Viewing ${title.textContent}`:null===title?(title=document.querySelector("body > div.blank-header > div > h1"),title?e.details=`Viewing ${title.textContent}`:null===title?(title=document.querySelector("body > div.wrapper > div > h1"),title?e.details=`Viewing ${title.textContent}`:null===title&&(title=document.querySelector("body > div.wrapper.blog-landing > div.blog-landing-content > div.blog-hero > div > a > h2"),title?e.details=`Viewing ${title.textContent}`:null===title&&(title=document.querySelector("body > div.blog.article > div.cover > div > div > h1"),title?e.details=`Viewing ${title.textContent}`:(title=document.querySelector("body > div.reseller-hero.text-center > div > h1"),title&&(e.details=`Viewing ${title.textContent}`))))):e.details="Viewing Solutions"):"/services/implementation/"===document.location.pathname?(title=document.querySelector("body > div.wrapper > div > h1"),e.details=`Viewing ${title.textContent}`):e.details="Viewing Unknown"}else e.details="Viewing Unknown";e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;