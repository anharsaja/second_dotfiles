var __webpack_exports__={};const presence=new Presence({clientId:"631595418085490689"});function capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}const elapsed=Math.floor(Date.now()/1e3);let stext;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/J/Just%20Light%20Novels/assets/logo.png"};if(e.startTimestamp=elapsed,"/"===document.location.pathname)e.details="Browsing novels",e.state="at Homepage";else if("//"===document.location.pathname)stext=document.location.search.split("="),e.details="Searching novels",e.state=`Keyword: ${capitalize(stext[1].split("+").join(" "))}`;else if(document.location.pathname.startsWith("/category/"))stext=document.location.pathname.split("/"),e.details="Searching novels ",e.state=`${capitalize(stext[1])}: ${capitalize(stext[2].split("-").join(" "))}`;else if(["/reviews/","/ln-fest-series/"].includes(document.location.pathname))e.details="Browsing site",e.state=`looking at ${capitalize(document.location.pathname.split("/").join("").split("-").join(" "))}`;else{const t=document.location.pathname.split("/");5===t.length&&(e.details=`Reading ${capitalize(t[3].split("-").join(" "))}(${t[1]})`,e.state=`Looking at ${0===document.location.hash.length?"Novel":capitalize(document.location.hash.replace("#",""))}`)}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;