var __webpack_exports__={};const presence=new Presence({clientId:"639107568672702484"}),browsingTimestamp=Math.floor(Date.now()/1e3);async function getStrings(){return presence.getStrings({play:"general.playing",pause:"general.paused",browse:"general.browsing",listen:"general.buttonListenAlong",viewPage:"general.viewPage",btnViewPage:"general.buttonViewPage",readArticle:"general.readingArticle",btnReadArticle:"general.buttonReadArticle",viewProfile:"general.viewProfile",btnViewProfile:"general.buttonViewProfile"},await presence.getSetting("lang").catch((()=>"en")))}let strings=null,oldLang=null;function replacePlaceholders(e){for(const[t,n]of Object.entries({"%artist%":".now-playing-artist","%title%":".now-playing-title","%presenter%":".live-presenter","%description%":".live-description"}))e=e.replace(t,document.querySelector(n).textContent);return e}presence.on("UpdateData",(async()=>{let e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/TruckStopRadio/assets/logo.png",startTimestamp:browsingTimestamp};const[t,n,s,r,a,i,l]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("details"),presence.getSetting("state"),presence.getSetting("browse"),presence.getSetting("timestamp"),presence.getSetting("buttons"),presence.getSetting("cover")]),g=document.querySelector(".play-btn").textContent.toLowerCase().includes("pause");if(oldLang===t&&strings||(oldLang=t,strings=await getStrings()),!r||g)"{0}"!==n&&(e.details=replacePlaceholders(n)),"{0}"!==s&&(e.state=replacePlaceholders(s)),e.smallImageKey=g?"https://cdn.rcd.gg/PreMiD/resources/play.png":"https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText=g?strings.play:strings.pause,l&&(e.largeImageKey=document.querySelector(".now-playing-img").style.backgroundImage.match(/url\("(.*)"\)/)[1]),e.buttons=[{label:strings.listen,url:"https://truckstopradio.co.uk/"}];else for(const[t,n]of Object.entries({"/":{details:strings.browse},"/timetable":{details:strings.viewPage,state:"Timetable",buttons:[{label:strings.btnViewPage,url:location.href}]},"/team":{details:strings.viewPage,state:"Team",buttons:[{label:strings.btnViewPage,url:location.href}]},"/applications":{details:strings.viewPage,state:"Applications",buttons:[{label:strings.btnViewPage,url:location.href}]},"/contact":{details:strings.viewPage,state:"Contact",buttons:[{label:strings.btnViewPage,url:location.href}]},"/news":{details:strings.viewPage,state:"News",buttons:[{label:strings.btnViewPage,url:location.href}]},"/article":{details:strings.readArticle,state:document.querySelector(".post-header > h1")?.textContent,smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/reading.png",buttons:[{label:strings.btnReadArticle,url:location.href}]},"/presenter":{details:strings.viewProfile,state:document.querySelector(".presenter-name")?.textContent,buttons:[{label:strings.btnViewProfile,url:location.href}]}}))location.href.replace(/\/?$/,"/").replace(`https://${document.location.hostname}`,"").replace("?","/").replace("=","/").match(t)&&(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.smallImageText=strings.browse,e={...e,...n});a||delete e.startTimestamp,i||delete e.buttons,presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;