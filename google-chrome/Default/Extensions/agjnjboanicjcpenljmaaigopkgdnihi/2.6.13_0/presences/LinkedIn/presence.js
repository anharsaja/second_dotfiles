var __webpack_exports__={};const presence=new Presence({clientId:"785263902321541181"}),browsingTimestamp=Math.floor(Date.now()/1e3);function unescapeHTML(t){const e=document.createElement("textarea");return e.textContent=t,e.textContent}presence.on("UpdateData",(async()=>{const t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/L/LinkedIn/assets/logo.png",startTimestamp:browsingTimestamp},e=document.location.pathname;if("www.linkedin.com"===document.location.hostname)if("/feed/"===e)t.details="Browsing Feed.";else if(e.includes("/feed/hashtag/"))t.details="Browsing Feed:",t.state=`#${unescapeHTML(document.querySelector("div.application-outlet > div.authentication-outlet > div > div > div > div > section > div > div:first-child > div > h3 > span > span:last-child").textContent.trim())}.`;else if(e.includes("/feed/")){let i,n;!function(t){t["follow/"]="Browsing suggestions.",t["following/"]="Viewing Following:",t["followers/"]="Viewing Followers."}(i||(i={})),function(t){t.connection="Connections",t.member="Members",t.company="Companies",t.channel="Hashtags"}(n||(n={}));const s=i[e.split("/feed/").pop()];t.details=s,s===i["following/"]&&(t.state=`Filtering by ${n[document.location.search.split("?filterType=").pop().split("&").shift()]||"All"}.`)}else if(e.includes("/mynetwork/"))if(t.details="Managing Network:",e.includes("/invitation-manager/"))t.state="Viewing Invitations.";else if(e.includes("/import-contacts/")||"/mynetwork/contacts/"===e)"/mynetwork/contacts/"===e?t.state="Browsing Contacts.":e.endsWith("saved-contacts/")?t.state="Browsing Saved contacts.":t.state="Adding Contacts.";else if(e.includes("/colleagues/"))t.state="Browsing Colleagues.";else{let i;!function(t){t["connections/"]="Browsing Connections.",t["events/"]="Browsing Events.",t["newsletters/"]="Reading Newsletters."}(i||(i={})),t.state=i[e.split(/\/[a-z]+-[a-z]+\//).pop()]||"Homepage."}else if(e.includes("/jobs/")||"/my-items/saved-jobs/"===e)if(e.endsWith("application-settings/"))t.details="Editing settings:",t.state="Application.";else if(t.details="Browsing Jobs:","/my-items/saved-jobs/"===e)t.state="Saved Jobs.";else if("/jobs/search/"===e){const e=await presence.getSetting("showJobsQuery");t.state=e?`Searching for a "${decodeURI(document.location.search.split("keywords=").pop().split("&").shift())}" position.`:"Searching for a job."}else t.state="Homepage.";else if(e.includes("/interview-prep/"))t.details="Taking an Interview Prep:",t.state=`${unescapeHTML(document.querySelector("div.application-outlet > div.authentication-outlet > main > div > section > section > header > div > div:first-child > h2").textContent.trim())}.`;else if(e.includes("/messaging/"))if(t.details="Messaging:","/messaging/thread/new/"===e)t.state="Writing a new message.";else if("/messaging/compose-group/"===e)t.state="Creating a new group.";else{const e=await presence.getSetting("showChatUsername");t.state=e?`Chatting with ${unescapeHTML(document.querySelector("div.application-outlet > div.authentication-outlet > #messaging > div > div > div:nth-child(2) > div:first-child > div > a > div > div > dl > dt > #thread-detail-jump-target").textContent.trim())}.`:"Chatting with someone."}else if("/notifications/"===e)t.details="Viewing Notifications.";else if(e.match(/\/in\/[A-Za-z0-9-]+\/$/))t.details="Viewing a profile:",t.state=`${document.querySelector("div.application-outlet > div.authentication-outlet > #profile-content > div > div > div > div:nth-child(2) > main > div > section > div:nth-child(2) > div:nth-child(2) > div:first-child > ul:first-child > li:first-child").textContent.trim()}.`;else if(e.match(/\/in\/[A-Za-z0-9-]+\//)){if(e.includes("/detail/")){let i;!function(t){t["recent-activity"]="Activities",t.skills="Skills",t.interests="Interests",t["contact-info"]="Contact Info"}(i||(i={})),"/in/luca-biagetti/detail/skills/add/"===e?(t.details="Editing profile:",t.state="Skills."):(t.details="Viewing user details:",t.state=`${unescapeHTML("/in/luca-biagetti/detail/recent-activity/"!==e?document.querySelector("div.application-outlet > div.authentication-outlet > #profile-content > div > div > div > div:nth-child(2) > main > div > section > div:nth-child(2) > div:nth-child(2) > div:first-child > ul:first-child > li:first-child").textContent.trim():document.querySelector("div.application-outlet > div.authentication-outlet > #profile-content > div > div > div > div > div:first-child > header > h1").textContent.trim().replace("â€™s Activity",""))}'s ${i[e.split(/\/in\/[A-Za-z0-9-]+\/detail\//).pop().split("/").shift()]}.`)}else if(e.includes("/edit/")){let i;!function(t){t.intro="Intro.",t.about="About.",t["add-feed-post"]="Posts.",t["add-article"]="Articles.",t["add-link"]="Links.",t.position="Experiences.",t.education="Education.",t.certification="Certifications.",t["volunteer-experience"]="Volunteer experiences.",t.publication="Publications.",t.patent="Patents.",t.course="Courses.",t.project="Projects.",t.honor="Honors & Awards.",t["test-score"]="Test scores.",t.language="Languages.",t.organization="Organizations.",t["secondary-language"]="Secondary language.",t["contact-info"]="Contact info."}(i||(i={})),t.details="Editing profile:",t.state=i[e.split(/\/in\/[A-Za-z0-9-]+\/edit\//).pop().replace("forms/","").split("/").shift()]}}else e.match(/\/company\/[A-Za-z0-9-]+\//)?(t.details="Viewing a company:",t.state=`${unescapeHTML(document.querySelector("div.application-outlet > div.authentication-outlet > div > div:nth-child(3) > div:first-child > section > div > div > div:nth-child(2) > div:first-child > div:first-child > div:nth-child(2) > div > h1 > span").textContent.trim())}.`):e.match(/\/school\/[A-Za-z0-9-]+\//)?(t.details="Viewing a school:",t.state=`${unescapeHTML(document.querySelector("div.application-outlet > div.authentication-outlet > div > div:nth-child(3) > div:first-child > section > div > div > div:nth-child(2) > div:first-child > div:first-child > div:nth-child(2) > div > h1 > span").textContent.trim())}.`):e.startsWith("/groups/")?e.match(/\/groups\/[0-9]+\//)?(t.details="Viewing a group:",t.state=`${unescapeHTML(document.querySelector("div.application-outlet > div.authentication-outlet > div > div:nth-child(2) > main > div:first-child > section > div > h1 > span").textContent.trim().replaceAll("\x3c!----\x3e",""))}.`):(t.details="Browsing Groups:",t.state="/groups/requests/"===e?"Requested groups.":"My groups."):e.includes("/psettings/")?t.details="Editing settings.":"/my-items/"===e?t.details="Browsing My Items.":"/post/new/"===e?t.details="Writing a New Post.":e.includes("/search/results/")?t.details="Searching for something.":t.details="Doing stuffs.";t.details?presence.setActivity(t):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;