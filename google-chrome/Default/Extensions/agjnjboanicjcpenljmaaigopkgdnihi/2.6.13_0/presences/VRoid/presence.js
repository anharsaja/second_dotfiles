var __webpack_exports__={};const presence=new Presence({clientId:"1144333935967473685"}),browsingTimestamp=Math.floor(Date.now()/1e3),slideshow=presence.createSlideshow();function getImportantPath(){const e=document.location.pathname.split("/").filter(Boolean);return"en"===e[0]&&e.shift(),""!==e[e.length-1]&&e.push(""),e}function getTitle(){const e=document.title.match(/(.*) [|-]/);return e?e[1].trim():document.title}function applyCharacterSlideshow(e){const t=[...document.querySelectorAll("a[href*='/characters/']:nth-of-type(1)")].map((e=>e.parentElement));for(const r of t){const t=Object.assign({},e),a=r.querySelector("[data-background-image-url]").dataset.backgroundImageUrl;t.largeImageKey=a,t.smallImageText=r.children[1].firstElementChild.childNodes[0].textContent;try{t.smallImageKey=r.children[3].querySelector("[data-background-image-url]").dataset.backgroundImageUrl}catch{}slideshow.addSlide(a,t,5e3)}}function applyArtworkSlideshow(e){const t=[...document.querySelectorAll("a[href*='/artworks/']:nth-of-type(1)")].map((e=>e.parentElement));for(const r of t){const t=Object.assign({},e),a=r.querySelector("[data-background-image-url]").dataset.backgroundImageUrl;t.largeImageKey=a,slideshow.addSlide(a,t,5e3)}}let oldLang=null,currentTargetLang=null,oldPath=null,strings=null,fetchingStrings=!1,stringFetchTimeout=null;function fetchStrings(){if(oldLang===currentTargetLang&&strings)return;if(fetchingStrings)return;const e=currentTargetLang;fetchingStrings=!0,stringFetchTimeout=setTimeout((()=>{presence.error(`Failed to fetch strings for ${e}.`),fetchingStrings=!1}),5e3),presence.info(`Fetching strings for ${e}.`),presence.getStrings({browsing:"general.browsing",buttonReadArticle:"general.buttonReadArticle",buttonViewPage:"general.buttonViewPage",buttonViewProfile:"general.buttonViewProfile",readingAbout:"general.readingAbout",readingAPost:"general.readingAPost",readingAnArticle:"general.readingAnArticle",viewAProduct:"general.viewAProduct",viewAProfile:"general.viewAProfile",viewCategory:"general.viewCategory",viewHome:"general.viewHome",viewList:"general.viewList",viewing:"general.viewing"},e).then((t=>{e===currentTargetLang&&(clearTimeout(stringFetchTimeout),strings=t,fetchingStrings=!1,oldLang=e,presence.info(`Fetched strings for ${e}.`))})).catch((()=>null))}function checkStringLanguage(e){return currentTargetLang=e,!!strings}setInterval(fetchStrings,3e3),fetchStrings();const settingsFetchStatus={},cachedSettings={};function startSettingGetter(e){if(!settingsFetchStatus[e]){let t=!1;settingsFetchStatus[e]=setTimeout((()=>{t||presence.error(`Failed to fetch setting '${e}' in time.`),delete settingsFetchStatus[e]}),2e3),presence.getSetting(e).then((r=>{cachedSettings[e]=r,t=!0})).catch((()=>null))}}function getSetting(e,t=null){return startSettingGetter(e),cachedSettings[e]??t}presence.on("UpdateData",(()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/V/VRoid/assets/logo.png",startTimestamp:browsingTimestamp},t=getSetting("language"),r=getImportantPath(),{hostname:a,href:n,pathname:s}=document.location;if(t||presence.info("[WARN] Language setting not loaded, using default."),s!==oldPath&&(oldPath=s,slideshow.deleteAllSlides()),!checkStringLanguage(t))return;switch(a){case"developer.vroid.com":"docs"===r[1]?(e.details=`VRoid SDK - ${strings.readingAbout}`,e.state=document.querySelector("h1").textContent.trim()):e.details=`VRoid SDK - ${strings.browsing}`;break;case"hub.vroid.com":switch(r[0]){case"":e.details=`VRoid Hub - ${strings.browsing}`;break;case"capture-application":case"apps":{const[t]=[...document.querySelectorAll("[role=nav] a")].sort(((e,t)=>+![...e.classList].every((e=>[...t.classList].includes(e))))),a=document.querySelector("header > h1").textContent;if(r[1])switch(e.details=`VRoid Hub - ${strings.viewAProduct}`,e.buttons=[{label:strings.buttonViewPage,url:n}],r[2]){case"":e.state=a;break;case"character_models":e.state=`${a} - ${t.textContent}`,applyCharacterSlideshow(e);break;case"artworks":e.state=`${a} - ${t.textContent}`,applyArtworkSlideshow(e)}else e.details=`VRoid Hub - ${strings.viewing}`,e.state=getTitle();break}case"characters":{const t=document.querySelector("canvas + div img").parentElement;e.details=`VRoid Hub - ${strings.viewAProduct}`,e.state=`${t.querySelector("a").textContent} / ${t.nextElementSibling.textContent}`,e.largeImageKey=t.querySelector("img").src,e.buttons=[{label:strings.buttonViewPage,url:n}];break}case"artworks":e.details=`VRoid Hub - ${strings.readingAPost}`,e.buttons=[{label:strings.buttonViewPage,url:n}],applyArtworkSlideshow(e);break;case"model_assets":{const t=document.querySelector("header > div[style]").parentElement;e.details=`VRoid Hub - ${strings.viewAProduct}`,e.state=t.querySelector("div:nth-of-type(2) > div > div").textContent,e.largeImageKey=getComputedStyle(t.querySelector("div[style]")).backgroundImage.match(/url\("(.*)"\)/)[1],e.buttons=[{label:strings.buttonViewPage,url:n}];break}case"models":e.details=`VRoid Hub - ${strings.viewList}`,e.state=document.querySelector("header > h1").textContent,applyCharacterSlideshow(e);break;case"tags":e.details=`VRoid Hub - ${strings.viewCategory}`,e.state=`#${r[1]} - ${("artworks"===r[2]?document.querySelector("section + div a:nth-of-type(2)"):document.querySelector("section + div a:nth-of-type(1)")).textContent}`,"artworks"===r[2]?applyArtworkSlideshow(e):applyCharacterSlideshow(e);break;case"users":{const t=document.querySelector("a > h1").textContent;e.details=`VRoid Hub - ${strings.viewAProfile}`,e.state=t,e.smallImageKey=document.querySelector("header > a > div[style]").style.backgroundImage.match(/url\("(.*)"\)/)[1],e.smallImageText=t,e.buttons=[{label:strings.buttonViewProfile,url:n}],"artworks"===r[2]?(e.state+=` - ${document.querySelector("header + div header + div a:nth-of-type(2)").textContent}`,applyArtworkSlideshow(e)):applyCharacterSlideshow(e);break}case"hearts":e.details=`VRoid Hub - ${strings.viewList}`,e.state=[...document.querySelector("header + div h1").childNodes].map((e=>"svg"===e.nodeName?"❤️":e.textContent)).join(""),"artworks"===r[1]?applyArtworkSlideshow(e):applyCharacterSlideshow(e)}break;default:switch(r[0]){case"":e.details=strings.viewHome;break;case"studio":e.details=strings.readingAbout,e.state="VRoid Studio";break;case"mobile":e.details=strings.readingAbout,e.state="VRoid Mobile";break;case"wear":r[1]?(e.details=strings.viewing,e.state=getTitle()):(e.details=strings.readingAbout,e.state="VRoid Wear");break;case"news":r[1]?(e.details=strings.readingAnArticle,e.state=document.querySelector("article h1").textContent,e.largeImageKey=document.querySelector("article img").src,e.buttons=[{label:strings.buttonReadArticle,url:n}]):(e.details=strings.readingAnArticle,e.state=document.querySelector("h1 > img").alt)}}const i=slideshow.getSlides();i.length?(slideshow.currentSlide.details||(slideshow.currentSlide=i[0].data),presence.setActivity(slideshow)):e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;