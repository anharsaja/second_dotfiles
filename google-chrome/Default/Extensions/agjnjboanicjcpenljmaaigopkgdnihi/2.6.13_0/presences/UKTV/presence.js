var __webpack_exports__={};const presence=new Presence({clientId:"1002899869599551508"});async function getStrings(){return presence.getStrings({play:"general.playing",pause:"general.paused",browse:"general.browsing"},await presence.getSetting("lang").catch((()=>"en")))}let strings,oldLang=null;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/U/UKTV/assets/logo.png"},t=document.querySelector("video"),{href:s,pathname:n}=document.location,r=document.querySelector("#search-input"),[a,l,i,c]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("covers"),presence.getSetting("buttons")]);if(oldLang===a&&strings||(oldLang=a,strings=await getStrings()),l)e.details=strings.browse;else if(r)e.details="Searching for",e.state=r.value,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png";else if(t?.duration){const n=document.querySelector('[property="og:title"]'),r=document.querySelector('[class="vod-episode__ep-num"]')?.lastChild?.textContent.replace(/,/gm,"")??n.content.replace(n.content.split(",")[0],"");e.details=document.querySelector('[class="vod-episode__title margin-bottom--xxs invert-text semi-bold"]')?.textContent??document.querySelector('[id="brand-page"]')?.textContent??n?.content.split(",")[0],e.state=r.split("-")[0].replace(/,/gm,"").replace("Series","S").replace("Episode",":E").replace(/ /gm,"").trim(),e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=t.paused?strings.pause:strings.play,[e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(t),i&&(e.largeImageKey=document.querySelector('[id="longInfo"]')?.firstElementChild?.getAttribute("src")??document.querySelector('[property="og:image"]').content??"lm"),t.paused&&(delete e.startTimestamp,delete e.endTimestamp),e.buttons=[{label:"View Show",url:s}]}else n.includes("/genre/")||n.includes("/collections/")?(e.buttons=[{label:"Browse",url:s}],e.details="Browsing",e.state=document.querySelector('[class="dropdown-item nuxt-link-exact-active nuxt-link-active"]').textContent):n.includes("/box-sets/")?e.details="Viewing boxsets":(e.buttons=[{label:"Browse Boxsets",url:s}],e.details=strings.browse,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText=strings.browse,e.buttons=[{label:"Browse",url:s}]);c||delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;