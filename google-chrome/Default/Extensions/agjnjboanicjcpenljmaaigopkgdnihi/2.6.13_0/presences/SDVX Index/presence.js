var __webpack_exports__={};let browsingTimestamp=Math.floor(Date.now()/1e3),lastPage=document.location.href;const presence=new Presence({clientId:"1214435082408820776"});function getSongDetails(t,e,r){t.details=`${document.querySelector("#songTitle").textContent} / ${document.querySelector("#artistName").textContent}`,t.state=`${document.querySelector(".currentDiff .difficulty-abbreviation1").textContent}${document.querySelector(".currentDiff .difficulty-level1").textContent} | BPM: ${document.querySelector("#bpmInfo").textContent} | Max EX: ${document.querySelector("#exInfo").textContent}`,t.largeImageKey=document.querySelector("#jacketArt").getAttribute("src"),t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/viewing.png",t.smallImageText="Viewing a chart",r&&(t.buttons=[{label:"View Chart",url:e}])}presence.on("UpdateData",(async()=>{const t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/S/SDVX%20Index/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:e,href:r}=document.location,s=await presence.getSetting("buttons"),a=e.split("/");a.shift(),e.endsWith("/")&&a.pop(),lastPage!==r&&(lastPage=r,browsingTimestamp=Math.floor(Date.now()/1e3)),"song.php"===a[0]?getSongDetails(t,r,s):(t.details="Looking for a chart",a[0].startsWith("level_sort")?t.state="Sorting by level":a[0].startsWith("date_sort")?t.state="Sorting by game version":a[0].startsWith("diff_sort")?t.state="Sorting by difficulty":a[0].startsWith("title_sort")?t.state="Sorting by title":a[0].startsWith("genre_sort")?t.state="Sorting by genre":a[0].startsWith("radar_sort")?t.state="Sorting by radar category":a[0].startsWith("search_song")&&(t.state="Searching...",t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png")),presence.setActivity(t)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;