var __webpack_exports__={};const presence=new Presence({clientId:"840169707297832970"}),data={presence:{},startedSince:~~(Date.now()/1e3)};presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/E/Everskies/assets/logo.png",smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/search.png",startTimestamp:data.startedSince};data.presence={"/community":{setPresenceData(){e.details="Browsing forums..."}},"/community/forums/":{setPresenceData(){e.details="Browsing forums:",e.state=document.querySelector("span.ng-star-inserted").textContent}},"/community/forums/([a-z]+)/([a-z0-9]+)":{setPresenceData(){e.details="Viewing forum:",e.state=document.querySelector("body > app-root > div > x-discussion-view > div > h2").textContent.trim(),e.buttons=[{label:"View Forum",url:document.URL}]}},"/chatroom":{setPresenceData(){const t=document.querySelector("div > div.current.pad-4.ng-tns-c221-371.ng-star-inserted > div.room-name.ng-tns-c221-371")?.textContent;e.details="Browsing chat rooms...",t&&(e.details="In chat room:",e.state=t)}},"/club":{setPresenceData(){e.details="Browsing clubs..."}},"/club/([a-z0-9-])":{setPresenceData(){e.details="Viewing club:",e.state=document.querySelector("span.ng-tns-c123-778").textContent,e.buttons=[{label:"View Club",url:document.URL}]}},"/users":{setPresenceData(){const t=new URLSearchParams(document.location.search);e.details="Browsing users...",document.location.search.startsWith("?")&&(e.details=t.get("friends")?"Viewing their friends":"Searching for user:",t.get("q")&&(e.state=t.get("q")))}},"/user/([a-zA-Z0-9-]+)":{setPresenceData(){e.details="Viewing user:",e.state=document.querySelector("x-user-name > div")?.textContent,e.buttons=[{label:"View User",url:document.URL}]}},"/competitions":{setPresenceData(){e.details="Browsing competitions..."}},"/shop/([a-z-]+)":{setPresenceData(){e.details="Looking at:",e.state=`Shop • ${document.querySelector("div.box-title-tab.bt.br.bl.nowrap.b5.bg5.color5.ng-star-inserted").textContent.trim()}`,e.buttons=[{label:"View Shop",url:document.URL}]}},"/games":{setPresenceData(){e.details="Browsing games..."}},"/games/":{setPresenceData(){e.details="Playing a game:",e.state=document.querySelector("div.box-title").textContent,e.buttons=[{label:"Play Game",url:document.URL}]}},"/wardrobe":{setPresenceData(){e.details="Looking at:",e.state=document.querySelector("div.box-title").textContent}},"/magazine":{setPresenceData(){e.details="Viewing their magazines"}},"/profile/":{setPresenceData(){e.details="Viewing their",e.state=`Prfile • ${document.querySelector("div.box-title").textContent}`}},"/page/([a-z-])":{setPresenceData(){e.details="Viewing page:",e.state=document.querySelector("div.box-title").textContent}}},data.settings=[{id:"timestamp",delete:!0,uses:["startTimestamp","endTimestamp"]},{id:"buttons",delete:!0,uses:["buttons"]}];for(const[e,t]of Object.entries(data.presence))document.location.pathname.match(e)&&!t.disabled&&t.setPresenceData();for(const t of data.settings)if(!await presence.getSetting(t.id).catch((()=>null))&&t.delete)for(const s of t.uses)delete e[s];e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;