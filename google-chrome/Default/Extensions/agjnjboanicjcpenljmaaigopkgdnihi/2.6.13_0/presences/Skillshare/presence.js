var __webpack_exports__={};const presence=new Presence({clientId:"642122988925485086"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused"}),browsingTimestamp=Math.floor(Date.now()/1e3);let user,title;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/S/Skillshare/assets/logo.png"};if("www.skillshare.com"===document.location.hostname)if("/"===document.location.pathname||"/home"===document.location.pathname)e.startTimestamp=browsingTimestamp,e.details="Viewing home page";else if(document.location.pathname.includes("/classes/")){let t,s,a,i,r,n;n=document.querySelector("#vjs_video_3_html5_api"),n||(n=document.querySelector(".video-player-module > div > video")),title=document.querySelector(".class-details-header-name").textContent.trim(),user=document.querySelector(".class-details-header-teacher").textContent.trim().replace(document.querySelector(".follow-button-wrapper-class-details").textContent,""),n&&(({currentTime:t,duration:s,paused:a}=n),[i,r]=presence.getTimestamps(Math.floor(t),Math.floor(s))),isNaN(s)?isNaN(s)&&(e.startTimestamp=browsingTimestamp,e.details="Viewing class:",e.state=title,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png"):(e.smallImageKey=a?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=a?(await strings).pause:(await strings).play,[e.startTimestamp,e.endTimestamp]=[i,r],e.details=title,e.state=user.replace(title.trim(),""),a&&(delete e.startTimestamp,delete e.endTimestamp))}else document.location.pathname.includes("/profile/")?(e.startTimestamp=browsingTimestamp,e.details="Viewing profile of:",e.state=document.querySelector(".full-name").textContent):document.location.pathname.includes("/workshops/")?(e.startTimestamp=browsingTimestamp,e.details="Viewing workshop:",e.state=document.querySelector(".header-text").textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png"):document.location.pathname.includes("/workshops")?(e.startTimestamp=browsingTimestamp,e.details="Browsing for workshops...",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):document.location.pathname.includes("/browse")?(e.startTimestamp=browsingTimestamp,e.details="Browsing in type:",e.state=document.querySelector(".main-header").textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):document.location.pathname.includes("/search")?(e.startTimestamp=browsingTimestamp,e.details="Searching for:",e.state=document.querySelector("#search-form > div > div > div.search-input-wrapper.clear > div.ellipsis.query-placeholder.left").textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):document.location.pathname.includes("/your-classes")?(e.startTimestamp=browsingTimestamp,e.details="Viewing their classes",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png"):document.location.pathname.includes("/my-workshops")?(e.startTimestamp=browsingTimestamp,e.details="Viewing their workshops",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png"):document.location.pathname.includes("/teach")?(e.startTimestamp=browsingTimestamp,e.details="Writing their teacher application",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/writing.png"):document.location.pathname.includes("/lists/saved-classes")?(e.startTimestamp=browsingTimestamp,e.details="Viewing their saved classes",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png"):document.location.pathname.includes("/lists/watch-history")?(e.startTimestamp=browsingTimestamp,e.details="Viewing their watch history",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png"):document.location.pathname.includes("/settings")&&(e.startTimestamp=browsingTimestamp,e.details="Changing their settings...");e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;