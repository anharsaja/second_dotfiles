var __webpack_exports__={};const presence=new Presence({clientId:"837754527217877003"}),browsingTimestamp=Math.floor(Date.now()/1e3);let articleTitle,articleDate,gameTitle,profileTitle,profileStatus;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/D/Dice%20Sweden/assets/logo.png",startTimestamp:browsingTimestamp},t=await presence.getSetting("buttons"),s=await presence.getSetting("timestamps");switch(window.location.pathname){case"/":e.details="Home";break;case"/games":e.details="Games",e.buttons=[{label:"View Games",url:"https://www.dice.se/games"}];break;case"/life-at-dice":e.details="Life At Dice",e.buttons=[{label:"Life At Dice",url:"https://www.dice.se/life-at-dice"}];break;case"/our-values":e.details="Our Values",e.buttons=[{label:"Our Values",url:"https://www.dice.se/our-values"}];break;case"/how-we-work-how-we-play":e.details="How We Work",e.state="How We Play",e.buttons=[{label:"How We Work",url:"https://www.dice.se/how-we-work-how-we-play"},{label:"How We Play",url:"https://www.dice.se/how-we-work-how-we-play#how-we-play"}];break;case"/our-crafts":e.details="Our Crafts",e.buttons=[{label:"Our Crafts",url:"https://www.dice.se/our-crafts"}];break;case"/careers":e.details="Careers",e.buttons=[{label:"View Careers",url:"https://www.dice.se/careers"}];break;case"/perks-benefits":e.details="Perks & Benefits",e.buttons=[{label:"View Perks & Benefits",url:"https://www.dice.se/perks-benefits"}];break;case"/living-in-sweden":e.details="Living In Sweden",e.buttons=[{label:"Living In Sweden",url:"https://www.dice.se/living-in-sweden"}];break;case"/latest":e.details="Latest News",e.buttons=[{label:"Latest News",url:"https://www.dice.se/latest"}];break;case"/news-article":e.details="News",e.buttons=[{label:"News",url:"https://www.dice.se/news-articles"}];break;case"/contact":e.details="Contacts",e.buttons=[{label:"View Contacts",url:"https://www.dice.se/contact"}];break;case"/students":e.details="Students",e.buttons=[{label:"Students",url:"https://www.dice.se/students"}]}window.location.pathname.includes("/news-articles/")?(articleTitle=document.querySelector(".BlogItem-title").textContent.trim(),articleDate=document.querySelector(".BlogItem-meta > time").textContent.trim(),e.details=articleTitle,e.state=articleDate,delete e.buttons,e.buttons=[{label:"View Article",url:window.location.href}]):window.location.pathname.includes("/game/")?(gameTitle=document.querySelector(".BlogItem-title").textContent.trim(),e.details=gameTitle,e.buttons=[{label:`View ${gameTitle}`,url:window.location.href}]):window.location.pathname.includes("/people/")&&(profileTitle=document.querySelector(".BlogItem-title")?.textContent.trim(),profileStatus=document.querySelector(".sqs-row > div > div:nth-child(3) > div > p").textContent.trim()??document.querySelector(".sqs-row > div > div:nth-child(2) > div > p").textContent.trim(),e.details=profileTitle,e.state=profileStatus,delete e.buttons,e.buttons=[{label:`View ${profileTitle}`,url:window.location.href}]),!t&&e.buttons&&delete e.buttons,s||delete e.startTimestamp,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;