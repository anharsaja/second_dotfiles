var __webpack_exports__={};const presence=new Presence({clientId:"1115852112224604160"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/PlayScrabble/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t,href:a}=document.location,s=t.split("/").filter(Boolean);switch(s[0]??""){case"":e.details="Browsing the homepage";break;case"play":{const t=document.querySelector("[class*='ScrabbleGame_rightGamePanel'] > div > div:nth-child(2)");if(t)document.querySelector("[src*='roundSummaryBackground']")?e.details="Viewing round summary":(e.details=`Playing ${t.textContent.replace(/\s{2}/,"")}`,e.state=`My score: ${document.querySelector(".game_player_score_block").textContent} | My time remaining: ${document.querySelector(".game_player_timer_block").textContent}`,e.smallImageKey=document.querySelector("[class*='switched_active'] [class*='Avatar'] img").src,e.smallImageText=`Current player: ${document.querySelector(".game_player_info.switched_active_text").textContent}`);else switch(e.details="Setting up a game",s[1]){case"ai":e.state="Playing against AI";break;case"friend":e.state="Playing with friends";break;case"online":e.state="Playing online"}break}case"dictionary":{const t=document.querySelector(".dictionary-input");if(t.value)if(e.details=`Checking if ${t.value} is a word`,document.querySelector("[class*='Dictionary'] [class*='IcoMoon'].sad"))e.state="It's not a word";else{const t=document.querySelector("[class*='Dictionary'] > div:nth-child(2) > div > div > div:nth-child(2) > div > div:nth-child(2) [class*='Textstyle']").textContent;e.state="It's a word",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/question.png",e.smallImageText=t.length<256?t:`${t.slice(0,253)}...`}else e.details="Viewing the dictionary";break}case"word-finder":e.details="Finding words",e.state=`Letters: ${document.querySelector("[class*='WordFinderSearch']").value||"(none)"}`;break;case"news-blog":if("category"===s[1])e.details="Viewing blog category",e.state=document.querySelector("[class*='NewsBlogHeader'] [class*='CategoryContent'] span:nth-child(2)").textContent;else if("author"===s[1])e.details="Viewing blog author",e.state=document.querySelector("[class*='NewsBlogHeader'] [class*='AuthorContent'] span:nth-child(2)").textContent;else if(s[1]){const t=document.querySelector("[class*='AuthorBlogAvatar']");e.details="Reading a blog post",e.state=document.querySelector(".individual-title").textContent,e.smallImageKey=t.src,e.smallImageText=t.nextElementSibling.textContent,e.buttons=[{label:"Read Post",url:a}]}else e.details="Viewing the blog";break;case"user":e.details="Viewing a user's profile",e.state=document.querySelector("h1").textContent,e.smallImageKey=document.querySelector("#profile-component [class*='Avatar'] img").src}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;