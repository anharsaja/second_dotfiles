var __webpack_exports__={};const presence=new Presence({clientId:"616940877042155531"});async function getStrings(){return presence.getStrings({browse:"general.browsing",writing:"general.writing",reading:"general.reading",channelReading:"discord.channelReading",channelTyping:"discord.channelTyping",dmReading:"discord.dmReading",dmTyping:"discord.dmTyping",dmGroupReading:"discord.dmGroupReading",dmGroupTyping:"discord.dmGroupTyping",friends:"discord.friends",nitro:"discord.nitro",voiceConnectedWith:"discord.voiceConnectedWith",voiceConnectedTo:"discord.voiceConnectedTo",inCall:"general.inCall",calling:"general.calling",settings:"discord.settings",serverSettings:"discord.serverSettings",invite:"discord.invite",inviteServer:"discord.inviteServer",buttonInvite:"discord.buttonInvite",browseThrough:"discord.browseThrough",download:"discord.download",why:"discord.why",safety:"discord.safety",jobs:"discord.jobs",company:"discord.company",branding:"discord.branding",inspiration:"discord.inspiration",college:"discord.college",newsroom:"discord.newsroom",partner:"discord.partner",verification:"discord.verification",streamkit:"discord.streamkit",opensource:"discord.opensource",security:"discord.security",moderation:"discord.moderation",rpc:"discord.rpc",policies:"discord.policies",portal:"discord.devs.portal",appsBrowse:"discord.devs.appsBrowse",appsEdit:"discord.devs.appsEdit",teamsBrowse:"discord.devs.teamsBrowse",teamsEdit:"discord.devs.teamsEdit",serversBrowse:"discord.devs.serversBrowse",serversEdit:"discord.devs.serversEdit",docs:"discord.devs.docs",status:"discord.status",viewing:"general.viewing",uptime:"general.uptimeHistory",incident:"general.incidentHistory",viewAnIncident:"general.viewAnIncident",helpCenter:"discord.support",viewCategory:"general.viewCategory",searchFor:"general.searchFor",searching:"general.search",readingArticle:"general.readingArticle",blog:"discord.blog",merch:"discord.merch",product:"general.viewProduct",collection:"discord.merch.collection",viewPage:"general.viewPage",shopCart:"general.shopCart"},await presence.getSetting("lang").catch((()=>"en")))}let strings,browsingTimestamp=Math.floor(Date.now()/1e3),prevUrl=document.location.href,oldLang=null;presence.on("UpdateData",(async()=>{const[e,t,s,r,n,i,a,o]=await Promise.all([presence.getSetting("browse"),presence.getSetting("timestamp"),presence.getSetting("buttons"),presence.getSetting("invite"),presence.getSetting("privacy"),presence.getSetting("call"),presence.getSetting("lang").catch((()=>"en")),presence.getSetting("logo")]);let c={largeImageKey:["https://cdn.rcd.gg/PreMiD/websites/D/Discord/assets/2.png","https://cdn.rcd.gg/PreMiD/websites/D/Discord/assets/1.png","https://cdn.rcd.gg/PreMiD/websites/D/Discord/assets/0.png"][o]||"https://cdn.rcd.gg/PreMiD/websites/D/Discord/assets/2.png"};switch(document.location.href!==prevUrl&&(prevUrl=document.location.href,browsingTimestamp=Math.floor(Date.now()/1e3)),oldLang===a&&strings||(oldLang=a,strings=await getStrings()),document.location.hostname){case"discord.com":{const t=1===Array.from(document.querySelectorAll("div[contenteditable=true]")).find((e=>Object.values(e.attributes).find((e=>e.textContent?.includes(document.querySelector("h3")?.textContent)))))?.parentElement.children.length,s=!!document.querySelector("input[name=channel_name]"),a=s?document.querySelector("input[name=channel_name]")?.value||"Undefined":"Discord"===document.querySelector("head > title")?.textContent?"":`@${document.querySelector("head > title")?.textContent}`,o=1===Array.from(document.querySelectorAll("div[contenteditable=true]")).find((e=>e.attributes[0].textContent?.includes(Array.from(document.querySelectorAll("h3")).find((e=>e.className?.includes("title")))?.textContent)))?.parentElement.children.length,l=`#${document.querySelectorAll("title")[0]?.textContent.split("| #")[1]?.split("|")[0]||"Undefined"}`,g=document.querySelectorAll("title")[0]?.textContent.split("|")[2]||"Undefined",d={"/":{details:strings.browse},"/channels/(\\d*)/(\\d*)/":{details:o?strings.channelTyping.split("{0}")[0].replace("{1}",l).replace("{2}",g):strings.channelReading.split("{0}")[0].replace("{1}",l).replace("{2}",g),state:o?strings.channelTyping.split("{0}")[1]?.replace("{1}",l).replace("{2}",g):strings.channelReading.split("{0}")[1]?.replace("{1}",l).replace("{2}",g),smallImageKey:o?"https://cdn.rcd.gg/PreMiD/resources/writing.png":"https://cdn.rcd.gg/PreMiD/resources/reading.png",smallImageText:o?strings.writing:strings.reading},"/channels/@me/":{details:strings.friends},"/channels/@me/(\\d*)/":{details:t?s?strings.dmGroupTyping.split("{0}")[0].replace("{1}",a):strings.dmTyping.split("{0}")[0].replace("{1}",a):s?"Discord"===document.querySelector("head > title")?.textContent?"":strings.dmGroupReading.split("{0}")[0].replace("{1}",a):"Discord"===document.querySelector("head > title")?.textContent?"":strings.dmReading.split("{0}")[0].replace("{1}",a),state:t?s?strings.dmGroupTyping.split("{0}")[1]?.replace("{1}",a):strings.dmTyping.split("{0}")[1]?.replace("{1}",a):s?"Discord"===document.querySelector("head > title")?.textContent?"":strings.dmGroupReading.split("{0}")[1]?.replace("{1}",a):"Discord"===document.querySelector("head > title")?.textContent?"":strings.dmReading.split("{0}")[1]?.replace("{1}",a),smallImageKey:t?"https://cdn.rcd.gg/PreMiD/resources/writing.png":"https://cdn.rcd.gg/PreMiD/resources/reading.png",smallImageText:t?strings.writing:strings.reading},"/invite/(\\w*\\d*)/":{details:r?strings.invite.split("{0}")[0].replace("{1}",document.URL.split("/")[4]).replace("{2}",document.title):strings.inviteServer.split("{0}")[0].replace("{1}",document.title),state:r?strings.invite.split("{0}")[1]?.replace("{1}",document.URL.split("/")[4]).replace("{2}",document.title):strings.inviteServer.split("{0}")[1]?.replace("{1}",document.title),smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/reading.png",buttons:r?[{label:strings.buttonInvite,url:document.URL}]:[]},"/store/":{details:strings.nitro},"/nitro/":{details:strings.nitro},"/download/":{details:strings.browseThrough,state:strings.download},"/why-discord-is-different/":{details:strings.browseThrough,state:strings.why},"/safety/":{details:strings.browseThrough,state:strings.safety},"/jobs/":{details:strings.browseThrough,state:strings.jobs},"/company/":{details:strings.browseThrough,state:strings.company},"/branding/":{details:strings.browseThrough,state:strings.branding},"/inspiration/":{details:strings.browseThrough,state:strings.inspiration},"/college/":{details:strings.browseThrough,state:strings.college},"/newsroom/":{details:strings.browseThrough,state:strings.newsroom},"/partners/":{details:strings.browseThrough,state:strings.partner},"/verification/":{details:strings.browseThrough,state:strings.verification},"/streamkit/":{details:strings.browseThrough,state:strings.streamkit},"/open-source/":{details:strings.browseThrough,state:strings.opensource},"/security/":{details:strings.browseThrough,state:strings.security},"/moderation/":{details:strings.browseThrough,state:strings.moderation},"/rich-presence/":{details:strings.browseThrough,state:strings.rpc},"/terms/":{details:strings.browseThrough,state:strings.policies},"/privacy/":{details:strings.browseThrough,state:strings.policies},"/guidelines/":{details:strings.browseThrough,state:strings.policies},"/acknowledgements/":{details:strings.browseThrough,state:strings.policies},"/licenses/":{details:strings.browseThrough,state:strings.policies},"/developers/applications/":{details:strings.portal,state:strings.appsBrowse},"/developers/applications/(\\d*)/":{details:strings.portal,state:strings.appsEdit.replace("{0}",Array.from(document.querySelectorAll("div")).find((e=>e.className?.includes("appDetails")))?.textContent),smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/writing.png"},"/developers/teams/":{details:strings.portal,state:strings.teamsBrowse},"/developers/teams/(\\d*)/":{details:strings.portal,state:strings.teamsEdit.replace("{0}",document.querySelector("div.Select-value")?.textContent),smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/writing.png"},"/developers/servers/":{details:strings.portal,state:strings.serversBrowse},"/developers/servers/(\\d*)/":{details:strings.portal,state:strings.serversEdit.replace("{0}",Array.from(document.querySelectorAll("div")).find((e=>e.className.includes("itemName")))?.textContent),smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/reading.png"},"/developers/docs/":{details:strings.portal,state:strings.docs,smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/reading.png",smallImageText:strings.reading}};if(i&&Array.from(document.querySelectorAll("div")).find((e=>e.className?.includes("rtcConnectionStatus"))))if(n)c.details=strings.inCall,c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/call.png",c.smallImageText=strings.calling;else{const e=Array.from(Array.from(document.querySelectorAll("div")).find((e=>e.className?.includes("rtcConnectionStatus")))?.parentElement.querySelector("a")?.children||[]).find((e=>e.className?.includes("channel"))),t=!!e?.parentElement?.href.includes("/@me/");if(!e)return presence.error("An error occurred while stripping data off the page. Please contact Bas950 on the PreMiD Discord support server (https://discord.premid.app/), and send him a screenshot of this error. ID: connectedTo === undefined/null");c.details=t?strings.voiceConnectedWith.split("{0}")[0].replace("{1}",e.textContent):strings.voiceConnectedTo.split("{0}")[0].replace("{1}",e.textContent.replace(` / ${e.textContent.split(" / ").pop()}`,"")).replace("{2}",e.textContent.split(" / ").pop()),c.state=t?strings.voiceConnectedWith.split("{0}")[1]?.replace("{1}",e.textContent):strings.voiceConnectedTo.split("{0}")[1]?.replace("{1}",e.textContent.replace(` / ${e.textContent.split(" / ").pop()}`,"")).replace("{2}",e.textContent.split(" / ").pop()),c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/call.png",c.smallImageText=strings.calling}else if(e)if(n)c.details=strings.browse,c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",c.smallImageText=strings.browse;else if(Array.from(document.querySelectorAll("div[aria-controls]")).find((e=>Object.values(e.attributes).find((e=>"My Account-tab"===e.textContent)))))c.details=strings.settings,c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",c.smallImageText=strings.browse;else if(Array.from(document.querySelectorAll("div[aria-controls]")).find((e=>Object.values(e.attributes).find((e=>"OVERVIEW-tab"===e.textContent))))){const e=Array.from(document.querySelectorAll("h1")).find((e=>e.className?.includes("name")))?.textContent||"Undefined";c.details=strings.serverSettings.split("{0}")[0].replace("{1}",e),c.state=strings.serverSettings.split("{0}")[1]?.replace("{1}",e),c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",c.smallImageText=strings.browse}else for(const[e,t]of Object.entries(d))location.href.replace(/\/?$/,"/").replace(`https://${document.location.hostname}`,"").replace("?","/").replace("=","/").match(e)&&(c={...c,...t},c.smallImageKey||(c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",c.smallImageText=strings.browse));break}case"discordstatus.com":{const t={"/":{details:strings.status,state:strings.browse},"/uptime/":{details:strings.status,state:`${strings.viewing} ${strings.uptime}`},"/history/":{details:strings.status,state:`${strings.viewing} ${strings.incident}`},"/incidents/":{details:strings.status,state:strings.viewAnIncident}};if(e)if(n)c.details=strings.status,c.state=strings.browse,c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",c.smallImageText=strings.browse;else for(const[e,s]of Object.entries(t))location.href.replace(/\/?$/,"/").replace(`https://${document.location.hostname}`,"").replace("?","/").replace("=","/").match(e)&&(c={...c,...s},c.smallImageKey||(c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",c.smallImageText=strings.browse));break}case"support.discord.com":{const t={"/":{details:strings.helpCenter,state:strings.browse},"/categories/":{details:strings.helpCenter,state:`${strings.viewCategory} ${document.querySelector("h1")?.textContent}`},"/search/":{details:strings.helpCenter,state:`${strings.searchFor} ${document.querySelector("#query")?.value}`,smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/search.png",smallImageText:strings.searching},"/articles/":{details:strings.helpCenter,state:`${strings.readingArticle} ${document.querySelector("h1")?.textContent.trim()}`,smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/reading.png",smallImageText:strings.reading}};if(e)if(n)c.details=strings.helpCenter,c.state=strings.browse,c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",c.smallImageText=strings.browse;else for(const[e,s]of Object.entries(t))location.href.replace(/\/?$/,"/").replace(`https://${document.location.hostname}`,"").replace("?","/").replace("=","/").match(e)&&(c={...c,...s},c.smallImageKey||(c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",c.smallImageText=strings.browse));break}case"blog.discord.com":{const t={"/":{details:strings.blog,state:"Discord Blog"!==document.querySelector("h1")?.textContent?`${strings.readingArticle} ${document.querySelector("h1").textContent}`:strings.browse},"/product-posts/":{details:strings.blog,state:`${strings.viewCategory} Product posts`},"/company-posts/":{details:strings.blog,state:`${strings.viewCategory} Company posts`},"/education-posts/":{details:strings.blog,state:`${strings.viewCategory} Education posts`},"/community-posts/":{details:strings.blog,state:`${strings.viewCategory} Community posts`},"/engineering-posts/":{details:strings.blog,state:`${strings.viewCategory} Engineering posts`}};if(e)if(n)c.details=strings.blog,c.state=strings.browse,c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",c.smallImageText=strings.browse;else for(const[e,s]of Object.entries(t))location.href.replace(/\/?$/,"/").replace(`https://${document.location.hostname}`,"").replace("?","/").replace("=","/").match(e)&&(c={...c,...s},c.smallImageKey||(c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",c.smallImageText=strings.browse));break}case"discordmerch.com":{const t={"/":{details:strings.merch,state:strings.browse},"/products/":{details:strings.merch,state:`${strings.product} ${document.querySelector("h1")?.textContent}`},"/collections/":{details:strings.merch,state:`${strings.collection} ${document.querySelector("h1")?.textContent}`},"/pages/":{details:strings.merch,state:`${strings.viewPage} ${document.querySelector("h1")?.textContent}`},"/cart/":{details:strings.merch,state:`${strings.viewing} ${strings.shopCart}`},"/search/":{details:strings.merch,state:`${strings.searchFor} ${document.querySelector("input")?.value}`,smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/search.png",smallImageText:strings.searching}};if(e)if(n)c.details=strings.status,c.state=strings.browse,c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",c.smallImageText=strings.browse;else for(const[e,s]of Object.entries(t))location.href.replace(/\/?$/,"/").replace(`https://${document.location.hostname}`,"").replace("?","/").replace("=","/").match(e)&&(c={...c,...s},c.smallImageKey||(c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",c.smallImageText=strings.browse));break}}c.buttons?.length||delete c.buttons,s||delete c.buttons,t&&(c.startTimestamp=browsingTimestamp),c.details?presence.setActivity(c):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;