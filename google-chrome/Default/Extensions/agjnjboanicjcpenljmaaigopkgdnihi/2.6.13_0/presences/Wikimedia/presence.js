var __webpack_exports__={};const presence=new Presence({clientId:"860146992284958762"}),browsingTimestamp=Math.floor(Date.now()/1e3);let currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/"),presenceData={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/logo.png",startTimestamp:browsingTimestamp};const updateCallback={_function:null,get function(){return this._function},set function(e){this._function=e},get present(){return null!==this._function}},resetData=(e={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/logo.png",startTimestamp:browsingTimestamp})=>{currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/"),presenceData={...e}},getURLParam=e=>currentURL.searchParams.get(e),prepare=async()=>{switch(currentURL.hostname){case"www.wikimedia.org":presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/11.png",presenceData.smallImageText="wikimedia.org landing page",presenceData.details="On the home page";break;case"wikimediafoundation.org":if(presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/11.png",presenceData.smallImageText="Wikimedia Foundation website",""===currentPath[0])presenceData.details="On the home page";else if("news"===currentPath[0])if(currentPath[4])presenceData.details="Reading a news article",presenceData.state=document.querySelector("h1").textContent;else if(2===document.querySelector("h1").textContent.split(": ").length){const e=document.querySelector("h1").textContent.split(": ");/^[aeiou]/i.test(e[0])?presenceData.details=`Viewing an ${e[0].toLowerCase()}`:presenceData.details=`Viewing a ${e[0].toLowerCase()}`,[,presenceData.state]=e}else presenceData.details="Viewing a page",presenceData.state="News";else presenceData.details="Viewing a page",[presenceData.state]=document.querySelector("meta[property='og:title']").content.split(" – ");break;case"diff.wikimedia.org":case"techblog.wikimedia.org":{let e;if(presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png","diff.wikimedia.org"===currentURL.hostname?e="Diff":"techblog.wikimedia.org"===currentURL.hostname&&(e="[[WM:TECHBLOG]]"),presenceData.smallImageText=e,""===currentPath[0])presenceData.details="On the home page";else if(currentPath[3])presenceData.details="Reading a news article",presenceData.state=document.querySelector("h1").textContent;else if(document.querySelector("h1")&&2===document.querySelector("h1").textContent.split(": ").length){const e=document.querySelector("h1").textContent.split(": ");/^[aeiou]/i.test(e[0])?presenceData.details=`Viewing an ${e[0].toLowerCase()}`:presenceData.details=`Viewing a ${e[0].toLowerCase()}`,[,presenceData.state]=e}else presenceData.details="Viewing a page",presenceData.state=document.querySelector("h1")?document.querySelector("h1").textContent:document.querySelector("meta[property='og:title']").content.split(" – ")[0];presenceData.state?presenceData.state+=` | ${e}`:presenceData.state=e;break}case"lists.wikimedia.org":"postorius"===currentPath[0]&&"lists"===currentPath[1]?(presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/1.png",presenceData.smallImageText="Mailing Lists",currentPath[2]?currentPath[2]&&(presenceData.details="Viewing a mailing list info",presenceData.state=`${document.querySelector("h1").textContent.replace(document.querySelector("h1 > small").textContent,"").trim()} (${document.querySelector("h1 > small").textContent.trim()})`):presenceData.details="Viewing mailing lists"):"hyperkitty"===currentPath[0]&&(currentPath[1]?"list"===currentPath[1]&&(currentPath[3]&&"latest"!==currentPath[3]?"thread"===currentPath[3]?(presenceData.details="Viewing a thread from the archive",presenceData.state=document.title.replace(/(.+) - (.+) - (.+)/,`$1 – $2 (${currentPath[2]})`)):/\d{4}/.test(currentPath[3])&&(presenceData.details="Viewing a maling list archive",presenceData.state=document.title.replace(/(.+) - (.+) - (.+)/,`$1 – $2 (${currentPath[2]})`)):(presenceData.details="Viewing a maling list archive",presenceData.state=document.title.replace(/ - (.+) - (.+)/,`$1 (${currentPath[2]})`))):presenceData.details="Viewing the maling list archives");break;case"stats.wikimedia.org":presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/0.png",presenceData.smallImageText="Wikimedia Statistics",presenceData.details="Viewing Wikimedia Statistics",updateCallback.function=()=>{presenceData.state=document.querySelector("title").textContent.split(" - ").slice(1).join(" – ")};break;case"phabricator.wikimedia.org":case"phab.wmflabs.org":if(presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/4.png",presenceData.smallImageText="Wikimedia Phabricator","phab.wmflabs.org"===currentURL.hostname&&(presenceData.smallImageText+=" (test)"),""===currentPath[0])presenceData.details="On the home page";else if(/^T\d+$/.test(currentPath[0]))presenceData.details="Viewing a task",presenceData.state=document.title.replace(/^[^\w\s\d]{1} /,"");else switch(currentPath[0]){case"maniphest":"task"===currentPath[1]&&"edit"===currentPath[2]?presenceData.details="Creating a task":(presenceData.details="Viewing tasks (Maniphest)",presenceData.state=document.querySelector("h1 .phui-header-header").textContent);break;case"project":if(currentPath[1]&&"query"!==currentPath[1])if("view"===currentPath[1])presenceData.details="Viewing a project",presenceData.state=[...document.querySelectorAll(".phui-crumbs-view.phui-crumbs-border .phui-crumb-name")].slice(1).map((e=>e.textContent.trim())).join(" > ");else{presenceData.details="Viewing a project";const e=[...document.querySelectorAll(".phui-crumbs-view.phui-crumbs-border .phui-crumb-name")];presenceData.state=e.slice(1,e.length-1).map((e=>e.textContent.trim())).join(" > ")}else presenceData.details="Viewing projects",presenceData.state=document.querySelector("h1 .phui-header-header").textContent;break;case"diffusion":presenceData.details="Viewing repositories (Diffusion)",presenceData.state=document.querySelector("h1 .phui-header-header").textContent;break;case"source":presenceData.details="Viewing a repository",presenceData.state=document.querySelector(".phui-crumbs-view.phui-crumbs-border .phui-crumb-name:nth-of-type(1)").textContent;break;case"phame":currentPath[1]?"post"===currentPath[1]?"view"===currentPath[2]?(presenceData.details="Viewing a post",presenceData.state=document.querySelector(".phame-header-title").textContent):(presenceData.details="Viewing posts",presenceData.state=document.querySelector("h1 .phui-header-header").textContent):"blog"===currentPath[1]&&("view"===currentPath[2]?(presenceData.details="Viewing a blog",presenceData.state=document.querySelector(".phame-header-title").textContent):(presenceData.details="Viewing blogs",presenceData.state=document.querySelector("h1 .phui-header-header").textContent)):presenceData.details="Viewing recent posts (Phame)";break;default:/^P\d+$/.test(currentPath[0])?(presenceData.details="Viewing a paste",presenceData.state=document.title.replace(/^[^\w\s\d]{1} /,"")):"paste"===currentPath[0]?"task"===currentPath[1]&&"edit"===currentPath[2]?presenceData.details="Creating a paste":(presenceData.details="Viewing pastes",presenceData.state=document.querySelector("h1 .phui-header-header").textContent):/^M\d+$/.test(currentPath[0])?(presenceData.details="Viewing a mock",presenceData.state=document.title.replace(/^[^\w\s\d]{1} /,"")):"pholio"===currentPath[0]?"task"===currentPath[1]&&"edit"===currentPath[2]?presenceData.details="Creating a mock":(presenceData.details="Viewing mocks (Pholio)",presenceData.state=document.querySelector("h1 .phui-header-header").textContent):/^U\d+$/.test(currentPath[0])?(presenceData.details="Viewing a short URL",presenceData.state=document.title.replace(/^[^\w\s\d]{1} /,"")):"phurl"===currentPath[0]?"task"===currentPath[1]&&"edit"===currentPath[2]?presenceData.details="Creating a short URL":(presenceData.details="Viewing short URLs (Phurl)",presenceData.state=document.querySelector("h1 .phui-header-header").textContent):(presenceData.details=`Viewing ${document.querySelector(".phui-crumbs-view.phui-crumbs-border .phui-crumb-name").textContent}`,presenceData.state=[...document.querySelectorAll(".phui-crumbs-view.phui-crumbs-border .phui-crumb-name")].slice(1).map((e=>e.textContent.trim())).join(" > "))}break;case"xtools.wmflabs.org":{presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/6.png",presenceData.smallImageText="XTools";const e=document.title.split(" - ");1===e.length?presenceData.details="On the home page":2===e.length?presenceData.details=`Viewing ${e[0]}`:e.length>=3&&(presenceData.details=`Viewing ${e[e.length-2]}`,presenceData.state=e.slice(0,-2).join(" - "));break}case"dumps.wikimedia.org":if(presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/downloading.png",presenceData.smallImageText="Wikimedia Downloads",""===currentPath[0])presenceData.details="On the home page";else{presenceData.details="Viewing a page";const e={"backup-index.html":"Database backup dumps","backups-of-old-wikis.html":"Backup dumps of wikis which no longer exist",other:"Other content","legal.html":"License information","mirrors.html":"Mirrors of database backup dumps"};presenceData.state=e[currentPath[0]]}break;case"donate.wikimedia.org":presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/2.png",presenceData.smallImageText="Donation Gateway",presenceData.details="Donating to the Wikimedia Foundation",presenceData.state="(or Wikipedia)";break;default:{const e=await presence.getPageletiable('mw"]["config"]["values');switch(currentURL.hostname){case"meta.wikimedia.org":presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/9.png";break;case"incubator.wikimedia.org":presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/3.png";break;case"wikitech.wikimedia.org":presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/10.png";break;case"www.mediawiki.org":presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/7.png";break;default:currentURL.hostname.startsWith("wikimania")?presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/5.png":"foundation.wikimedia.org"===currentURL.hostname?presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/11.png":"wikispore.wmflabs.org"===currentURL.hostname&&(presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/W/Wikimedia/assets/12.png")}const t=e.wgSiteName,a=()=>getURLParam("action")||getURLParam("veaction")||e.wgAction,i=()=>decodeURIComponent(e.wgPageName.replaceAll("_"," ")),n=document.querySelector("h1")?document.querySelector("h1").textContent:i(),s=()=>{const t={"-2":"Viewing a media","-1":"Viewing a special page",0:"Reading an article",1:"Viewing a talk page",2:"Viewing a user page",3:"Viewing a user talk page",4:"Viewing a project page",5:"Viewing a project talk page",6:"Viewing a file",7:"Viewing a file talk page",8:"Viewing an interface page",9:"Viewing an interface talk page",10:"Viewing a template",11:"Viewing a template talk page",12:"Viewing a help page",13:"Viewing a help talk page",14:"Viewing a category",15:"Viewing a category talk page",2300:"Viewing a gadget",2301:"Viewing a gadget talk page",2302:"Viewing a gadget definition page",2303:"Viewing a gadget definition talk page",Obsolete:"Viewing an obsolete page","Obsolete talk":"Viewing an obsolete talk page",Iberocoop:"Viewing an Iberocoop page","Iberocoop talk":"Viewing an Iberocoop talk page",Tool:"Viewing a tool page","Tool talk":"Viewing a tool talk page",Module:"Viewing a module page","Module talk":"Viewing a module talk page",Translations:"Viewing a translations page","Translations talk":"Viewing a translations talk page",Newsletter:"Viewing a newsletter page","Newsletter talk":"Viewing a newsletter talk page",CNBanners:"Viewing a CNBanners page","CNBanners talk":"Viewing a CNBanners talk page",Schema:"Viewing a schema page","Schema talk":"Viewing a schema talk page",Research:"Viewing a research page","Research talk":"Viewing a research talk page",Grants:"Viewing a grants page","Grants talk":"Viewing a grants talk page",Manual:"Viewing a manual page","Manual talk":"Viewing a manual talk page",Form:"Viewing a form page","Form talk":"Viewing a form talk page"},a=e.wgCanonicalNamespace.replaceAll("_"," ");return t[e.wgNamespaceNumber]||t[a]||`Viewing a/an ${a} page`};e.wgIsMainPage?presenceData.details="On the main page":document.querySelector("#wpLoginAttempt")?presenceData.details="Logging in":document.querySelector("#wpCreateaccount")?presenceData.details="Creating an account":document.querySelector(".searchresults")?(presenceData.details="Searching for a page",presenceData.state=document.querySelector("input[type=search]").value):"history"===a()?(presenceData.details="Viewing revision history",presenceData.state=i()):getURLParam("diff")?(presenceData.details="Viewing difference between revisions",presenceData.state=i()):getURLParam("oldid")?(presenceData.details="Viewing an old revision of a page",presenceData.state=i()):document.querySelector("#ca-ve-edit")||getURLParam("veaction")?(presenceData.state=n.toLowerCase()===i().toLowerCase()?`${n}`:`${n} (${i()})`,updateCallback.function=()=>{"edit"===a()||"editsource"===a()?presenceData.details="Editing a page":presenceData.details=s()}):"edit"===a()?(presenceData.details=document.querySelector("#ca-edit")?"Editing a page":"Viewing source",presenceData.state=i()):(presenceData.details=s(),presenceData.state=n.toLowerCase()===i().toLowerCase()?`${n}`:`${n} (${i()})`),presenceData.state?presenceData.state+=` | ${t}`:presenceData.state=t,presenceData.smallImageKey&&(presenceData.smallImageText=t)}}};(async()=>{if(await prepare(),updateCallback.present){const e={...presenceData};presence.on("UpdateData",(async()=>{resetData(e),updateCallback.function(),presence.setActivity(presenceData)}))}else presence.on("UpdateData",(async()=>{presence.setActivity(presenceData)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;