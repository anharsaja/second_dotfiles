var __webpack_exports__={};const presence=new Presence({clientId:"813038241451343882"}),startsTime=Math.floor(Date.now()/1e3),ShowData={title:"",ep:"",duration:0,currentTime:0,paused:!0},getStrings=async()=>presence.getStrings({play:"general.playing",paused:"general.paused",browse:"general.browsing",episode:"general.episode",searchFor:"general.searchFor",searching:"general.search",viewSeriesButton:"general.buttonViewSeries",viewEpisode:"general.buttonViewEpisode",viewSeries:"general.viewSeries",reading:"general.reading",viewPage:"general.viewPage"},await presence.getSetting("lang").catch((()=>"en")));let strings,oldLang=null;presence.on("iFrameData",(e=>{ShowData.duration=e.iframeVideo.duration,ShowData.paused=e.iframeVideo.paused,ShowData.currentTime=e.iframeVideo.currentTime})),presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/D/DramaCool/assets/logo.png",details:"Browsing",smallImageText:"Browsing",smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/reading.png",startTimestamp:startsTime,type:3},[t,a]=await Promise.all([presence.getSetting("buttons"),presence.getSetting("lang").catch((()=>"en"))]),{pathname:s,search:r,href:n}=document.location;oldLang===a&&strings||(oldLang=a,strings=await getStrings()),s.includes("/drama-detail")?(e.smallImageText=strings.reading,e.details=strings.viewSeries,e.state=document.querySelector("h1").textContent,e.buttons=[{label:strings.viewSeriesButton,url:document.URL}]):s.includes("/search")?(e.details=strings.searchFor,e.state=r.includes("movies")?"Movies":"Stars",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText=strings.searching):s.match("/([a-z0-9-]+)-episode-([0-9]+)")?(ShowData.title=document.querySelector("div.category a")?.textContent??JSON.parse(document.querySelector('[class="yoast-schema-graph"]').innerHTML.replace(/@/gm,"")).graph[3].itemListElement[1].name.replace(/Episode [0-9]*/gm,""),ShowData.duration?(ShowData.ep=(document.title.match(/Episode ?([1-9][0-9]?[0-9]?)?( & )?([1-9][0-9]?[0-9]?)/g)||document.URL.match(/episode-?([1-9][0-9]?[0-9]?)/g))[0].replace(/(episode)(-)?/i,""),e.smallImageKey=ShowData.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=ShowData.paused?strings.paused:strings.play,e.details=ShowData.title,e.state=`${strings.episode} ${ShowData.ep}`,[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(ShowData.currentTime,ShowData.duration),e.buttons=[{label:strings.viewEpisode,url:n},{label:strings.viewSeriesButton,url:document.querySelector(".category a").href}],ShowData.paused&&(delete e.startTimestamp,delete e.endTimestamp)):ShowData.title&&(e.smallImageText=strings.reading,e.details=strings.viewSeries,e.state=ShowData.title,e.buttons=[{label:strings.viewSeriesButton,url:document.URL}])):s.includes("movie-watch")?(e.details=document.querySelector("div.category a")?.textContent,e.state="Movie",e.smallImageKey=ShowData.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=ShowData.paused?strings.paused:strings.play,[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(ShowData.currentTime,ShowData.duration)):s.includes("/calendar")&&(e.details=strings.viewPage,e.state="Calendar",e.buttons=[{label:"View Calendar",url:document.URL}]),!t&&e.buttons&&delete e.buttons,presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;