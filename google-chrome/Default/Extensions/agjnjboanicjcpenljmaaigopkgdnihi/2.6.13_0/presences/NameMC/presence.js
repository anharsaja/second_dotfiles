var __webpack_exports__={};const presence=new Presence({clientId:"809067572061405246"}),browsingTimestamp=Math.floor(Date.now()/1e3);async function getStrings(){return presence.getStrings({browse:"general.browsing",names:"namemc.upcomingNames",skinsFeatured:"namemc.skinsTrending",skinsTop:"namemc.skinsTop",skinsNew:"namemc.skinsNew",skinsRandom:"namemc.skinsRandom",skinsTagged:"namemc.skinsTagged",skinsTag:"namemc.skinsTag",capes:"namemc.capes",viewCape:"namemc.viewCape",servers:"namemc.servers",viewServer:"namemc.viewServer",claim:"namemc.claim",profileEdit:"namemc.profileEdit",viewFriends:"namemc.viewFriends",viewSkins:"namemc.viewSkins",viewEmoji:"namemc.viewEmojis",viewProfile:"general.viewProfile",viewing:"general.viewing",privacy:"general.privacy",search:"general.searchFor",buttonViewServer:"namemc.buttonViewServer",buttonViewProfile:"general.buttonViewProfile",viewSkin:"namemc.viewSkin"},await presence.getSetting("lang").catch((()=>"en")))}let strings,oldLang=null;presence.on("UpdateData",(async()=>{const[e,s,i]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("buttons")]);oldLang===e&&strings||(oldLang=e,strings=await getStrings());let t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/N/NameMC/assets/logo.png",startTimestamp:browsingTimestamp};const n={"/":{details:strings.browse},"/minecraft-names/":{details:strings.names},"/minecraft-skins/":{details:strings.skinsFeatured},"/minecraft-skins/top/":{details:strings.skinsTop},"/minecraft-skins/new/":{details:strings.skinsNew},"/minecraft-skins/random/":{details:strings.skinsRandom},"/minecraft-skins/tag/":{details:strings.skinsTagged},"/minecraft-skins/tag/(\\w*)/":{details:strings.skinsTag.replace("{0}",document.querySelector("body > main > h1")?.textContent.replace(document.querySelector("body > main > h1 > small")?.textContent,"").trim())},"/capes/":{details:strings.capes},"/cape/":{details:strings.viewCape,state:`${document.querySelector("main > h1")?.textContent.split("\n")[1]}`},"/minecraft-servers/":{details:strings.servers},"/server/":{details:strings.viewServer,state:document.querySelector("body > main > div > div > h1")?.textContent,buttons:[{label:strings.buttonViewServer,url:document.URL}]},"/claim-your-profile/":{details:strings.claim},"/my-profile/":{details:strings.profileEdit.split("{0}")[0],state:strings.profileEdit.split("{0}")[1]},"/my-profile/friends/":{details:strings.viewFriends},"/my-profile/skins/":{details:strings.viewSkins},"/my-profile/emoji/":{details:strings.viewEmoji},"/profile/":{details:strings.viewProfile,state:document.querySelector("body > main > div > div > h1")?.textContent,buttons:[{label:strings.buttonViewProfile,url:document.URL}]},"/privacy/":{details:strings.viewing,state:strings.privacy},"/search":{details:strings.search,state:document.location.href.split("/search?q=")[1],smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/search.png"},"/skin/":{details:strings.viewSkin}};if(s)t.details=strings.browse;else{for(const[e,s]of Object.entries(n))document.location.href.replace(/\/?$/,"/").replace(`https://${document.location.hostname}`,"").replace("?","/").match(e)&&(t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",t.smallImageText=strings.browse,t={...t,...s});i||delete t.buttons}presence.setActivity(t)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE1BQU9KLFNBQVNTLFNBQVNDLEtBQUtMLE1BQU0sY0FBYyxHQUNsRE0sY0FBZSxrREFFbkIsU0FBVSxDQUNOYixRQUFTWCxRQUFRSCxXQUd6QixHQUFJSixFQUNBYyxFQUFhSSxRQUFVWCxRQUFRMUIsV0FDOUIsQ0FDRCxJQUFLLE1BQU9tRCxFQUFHQyxLQUFNQyxPQUFPQyxRQUFRbEIsR0FDNUJHLFNBQVNTLFNBQVNDLEtBQ2pCWCxRQUFRLE9BQVEsS0FDaEJBLFFBQVEsV0FBV0MsU0FBU1MsU0FBU08sV0FBWSxJQUNqRGpCLFFBQVEsSUFBSyxLQUNia0IsTUFBTUwsS0FDUGxCLEVBQWFpQixjQUFnQixrREFDN0JqQixFQUFhd0IsZUFBaUIvQixRQUFRMUIsT0FDdENpQyxFQUFlLElBQUtBLEtBQWlCbUIsSUFHeEN0QixVQUNNRyxFQUFhSCxPQUM1QixDQUNBeEMsU0FBU29FLFlBQVl6QixFQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcHJlc2VuY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcHJlc2VuY2UgPSBuZXcgUHJlc2VuY2Uoe1xuICAgIGNsaWVudElkOiBcIjgwOTA2NzU3MjA2MTQwNTI0NlwiLFxufSksIGJyb3dzaW5nVGltZXN0YW1wID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCk7XG5hc3luYyBmdW5jdGlvbiBnZXRTdHJpbmdzKCkge1xuICAgIHJldHVybiBwcmVzZW5jZS5nZXRTdHJpbmdzKHtcbiAgICAgICAgYnJvd3NlOiBcImdlbmVyYWwuYnJvd3NpbmdcIixcbiAgICAgICAgbmFtZXM6IFwibmFtZW1jLnVwY29taW5nTmFtZXNcIixcbiAgICAgICAgc2tpbnNGZWF0dXJlZDogXCJuYW1lbWMuc2tpbnNUcmVuZGluZ1wiLFxuICAgICAgICBza2luc1RvcDogXCJuYW1lbWMuc2tpbnNUb3BcIixcbiAgICAgICAgc2tpbnNOZXc6IFwibmFtZW1jLnNraW5zTmV3XCIsXG4gICAgICAgIHNraW5zUmFuZG9tOiBcIm5hbWVtYy5za2luc1JhbmRvbVwiLFxuICAgICAgICBza2luc1RhZ2dlZDogXCJuYW1lbWMuc2tpbnNUYWdnZWRcIixcbiAgICAgICAgc2tpbnNUYWc6IFwibmFtZW1jLnNraW5zVGFnXCIsXG4gICAgICAgIGNhcGVzOiBcIm5hbWVtYy5jYXBlc1wiLFxuICAgICAgICB2aWV3Q2FwZTogXCJuYW1lbWMudmlld0NhcGVcIixcbiAgICAgICAgc2VydmVyczogXCJuYW1lbWMuc2VydmVyc1wiLFxuICAgICAgICB2aWV3U2VydmVyOiBcIm5hbWVtYy52aWV3U2VydmVyXCIsXG4gICAgICAgIGNsYWltOiBcIm5hbWVtYy5jbGFpbVwiLFxuICAgICAgICBwcm9maWxlRWRpdDogXCJuYW1lbWMucHJvZmlsZUVkaXRcIixcbiAgICAgICAgdmlld0ZyaWVuZHM6IFwibmFtZW1jLnZpZXdGcmllbmRzXCIsXG4gICAgICAgIHZpZXdTa2luczogXCJuYW1lbWMudmlld1NraW5zXCIsXG4gICAgICAgIHZpZXdFbW9qaTogXCJuYW1lbWMudmlld0Vtb2ppc1wiLFxuICAgICAgICB2aWV3UHJvZmlsZTogXCJnZW5lcmFsLnZpZXdQcm9maWxlXCIsXG4gICAgICAgIHZpZXdpbmc6IFwiZ2VuZXJhbC52aWV3aW5nXCIsXG4gICAgICAgIHByaXZhY3k6IFwiZ2VuZXJhbC5wcml2YWN5XCIsXG4gICAgICAgIHNlYXJjaDogXCJnZW5lcmFsLnNlYXJjaEZvclwiLFxuICAgICAgICBidXR0b25WaWV3U2VydmVyOiBcIm5hbWVtYy5idXR0b25WaWV3U2VydmVyXCIsXG4gICAgICAgIGJ1dHRvblZpZXdQcm9maWxlOiBcImdlbmVyYWwuYnV0dG9uVmlld1Byb2ZpbGVcIixcbiAgICAgICAgdmlld1NraW46IFwibmFtZW1jLnZpZXdTa2luXCIsXG4gICAgfSwgYXdhaXQgcHJlc2VuY2UuZ2V0U2V0dGluZyhcImxhbmdcIikuY2F0Y2goKCkgPT4gXCJlblwiKSk7XG59XG5sZXQgc3RyaW5ncywgb2xkTGFuZyA9IG51bGw7XG5wcmVzZW5jZS5vbihcIlVwZGF0ZURhdGFcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IFtuZXdMYW5nLCBwcml2YWN5LCBidXR0b25zXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgcHJlc2VuY2UuZ2V0U2V0dGluZyhcImxhbmdcIikuY2F0Y2goKCkgPT4gXCJlblwiKSxcbiAgICAgICAgcHJlc2VuY2UuZ2V0U2V0dGluZyhcInByaXZhY3lcIiksXG4gICAgICAgIHByZXNlbmNlLmdldFNldHRpbmcoXCJidXR0b25zXCIpLFxuICAgIF0pO1xuICAgIGlmIChvbGRMYW5nICE9PSBuZXdMYW5nIHx8ICFzdHJpbmdzKSB7XG4gICAgICAgIG9sZExhbmcgPSBuZXdMYW5nO1xuICAgICAgICBzdHJpbmdzID0gYXdhaXQgZ2V0U3RyaW5ncygpO1xuICAgIH1cbiAgICBsZXQgcHJlc2VuY2VEYXRhID0ge1xuICAgICAgICBsYXJnZUltYWdlS2V5OiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvTi9OYW1lTUMvYXNzZXRzL2xvZ28ucG5nXCIsXG4gICAgICAgIHN0YXJ0VGltZXN0YW1wOiBicm93c2luZ1RpbWVzdGFtcCxcbiAgICB9O1xuICAgIGNvbnN0IHN0YXRpY3MgPSB7XG4gICAgICAgIFwiL1wiOiB7XG4gICAgICAgICAgICBkZXRhaWxzOiBzdHJpbmdzLmJyb3dzZSxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvbWluZWNyYWZ0LW5hbWVzL1wiOiB7XG4gICAgICAgICAgICBkZXRhaWxzOiBzdHJpbmdzLm5hbWVzLFxuICAgICAgICB9LFxuICAgICAgICBcIi9taW5lY3JhZnQtc2tpbnMvXCI6IHtcbiAgICAgICAgICAgIGRldGFpbHM6IHN0cmluZ3Muc2tpbnNGZWF0dXJlZCxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvbWluZWNyYWZ0LXNraW5zL3RvcC9cIjoge1xuICAgICAgICAgICAgZGV0YWlsczogc3RyaW5ncy5za2luc1RvcCxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvbWluZWNyYWZ0LXNraW5zL25ldy9cIjoge1xuICAgICAgICAgICAgZGV0YWlsczogc3RyaW5ncy5za2luc05ldyxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvbWluZWNyYWZ0LXNraW5zL3JhbmRvbS9cIjoge1xuICAgICAgICAgICAgZGV0YWlsczogc3RyaW5ncy5za2luc1JhbmRvbSxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvbWluZWNyYWZ0LXNraW5zL3RhZy9cIjoge1xuICAgICAgICAgICAgZGV0YWlsczogc3RyaW5ncy5za2luc1RhZ2dlZCxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvbWluZWNyYWZ0LXNraW5zL3RhZy8oXFxcXHcqKS9cIjoge1xuICAgICAgICAgICAgZGV0YWlsczogc3RyaW5ncy5za2luc1RhZy5yZXBsYWNlKFwiezB9XCIsIGRvY3VtZW50XG4gICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCJib2R5ID4gbWFpbiA+IGgxXCIpXG4gICAgICAgICAgICAgICAgPy50ZXh0Q29udGVudC5yZXBsYWNlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5ID4gbWFpbiA+IGgxID4gc21hbGxcIik/LnRleHRDb250ZW50LCBcIlwiKVxuICAgICAgICAgICAgICAgIC50cmltKCkpLFxuICAgICAgICB9LFxuICAgICAgICBcIi9jYXBlcy9cIjoge1xuICAgICAgICAgICAgZGV0YWlsczogc3RyaW5ncy5jYXBlcyxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvY2FwZS9cIjoge1xuICAgICAgICAgICAgZGV0YWlsczogc3RyaW5ncy52aWV3Q2FwZSxcbiAgICAgICAgICAgIHN0YXRlOiBgJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibWFpbiA+IGgxXCIpPy50ZXh0Q29udGVudC5zcGxpdChcIlxcblwiKVsxXX1gLFxuICAgICAgICB9LFxuICAgICAgICBcIi9taW5lY3JhZnQtc2VydmVycy9cIjoge1xuICAgICAgICAgICAgZGV0YWlsczogc3RyaW5ncy5zZXJ2ZXJzLFxuICAgICAgICB9LFxuICAgICAgICBcIi9zZXJ2ZXIvXCI6IHtcbiAgICAgICAgICAgIGRldGFpbHM6IHN0cmluZ3Mudmlld1NlcnZlcixcbiAgICAgICAgICAgIHN0YXRlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keSA+IG1haW4gPiBkaXYgPiBkaXYgPiBoMVwiKVxuICAgICAgICAgICAgICAgID8udGV4dENvbnRlbnQsXG4gICAgICAgICAgICBidXR0b25zOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsYWJlbDogc3RyaW5ncy5idXR0b25WaWV3U2VydmVyLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGRvY3VtZW50LlVSTCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvY2xhaW0teW91ci1wcm9maWxlL1wiOiB7XG4gICAgICAgICAgICBkZXRhaWxzOiBzdHJpbmdzLmNsYWltLFxuICAgICAgICB9LFxuICAgICAgICBcIi9teS1wcm9maWxlL1wiOiB7XG4gICAgICAgICAgICBkZXRhaWxzOiBzdHJpbmdzLnByb2ZpbGVFZGl0LnNwbGl0KFwiezB9XCIpWzBdLFxuICAgICAgICAgICAgc3RhdGU6IHN0cmluZ3MucHJvZmlsZUVkaXQuc3BsaXQoXCJ7MH1cIilbMV0sXG4gICAgICAgIH0sXG4gICAgICAgIFwiL215LXByb2ZpbGUvZnJpZW5kcy9cIjoge1xuICAgICAgICAgICAgZGV0YWlsczogc3RyaW5ncy52aWV3RnJpZW5kcyxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvbXktcHJvZmlsZS9za2lucy9cIjoge1xuICAgICAgICAgICAgZGV0YWlsczogc3RyaW5ncy52aWV3U2tpbnMsXG4gICAgICAgIH0sXG4gICAgICAgIFwiL215LXByb2ZpbGUvZW1vamkvXCI6IHtcbiAgICAgICAgICAgIGRldGFpbHM6IHN0cmluZ3Mudmlld0Vtb2ppLFxuICAgICAgICB9LFxuICAgICAgICBcIi9wcm9maWxlL1wiOiB7XG4gICAgICAgICAgICBkZXRhaWxzOiBzdHJpbmdzLnZpZXdQcm9maWxlLFxuICAgICAgICAgICAgc3RhdGU6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5ID4gbWFpbiA+IGRpdiA+IGRpdiA+IGgxXCIpXG4gICAgICAgICAgICAgICAgPy50ZXh0Q29udGVudCxcbiAgICAgICAgICAgIGJ1dHRvbnM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiBzdHJpbmdzLmJ1dHRvblZpZXdQcm9maWxlLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGRvY3VtZW50LlVSTCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvcHJpdmFjeS9cIjoge1xuICAgICAgICAgICAgZGV0YWlsczogc3RyaW5ncy52aWV3aW5nLFxuICAgICAgICAgICAgc3RhdGU6IHN0cmluZ3MucHJpdmFjeSxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvc2VhcmNoXCI6IHtcbiAgICAgICAgICAgIGRldGFpbHM6IHN0cmluZ3Muc2VhcmNoLFxuICAgICAgICAgICAgc3RhdGU6IGRvY3VtZW50LmxvY2F0aW9uLmhyZWYuc3BsaXQoXCIvc2VhcmNoP3E9XCIpWzFdLFxuICAgICAgICAgICAgc21hbGxJbWFnZUtleTogXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9zZWFyY2gucG5nXCIsXG4gICAgICAgIH0sXG4gICAgICAgIFwiL3NraW4vXCI6IHtcbiAgICAgICAgICAgIGRldGFpbHM6IHN0cmluZ3Mudmlld1NraW4sXG4gICAgICAgIH0sXG4gICAgfTtcbiAgICBpZiAocHJpdmFjeSlcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBzdHJpbmdzLmJyb3dzZTtcbiAgICBlbHNlIHtcbiAgICAgICAgZm9yIChjb25zdCBbaywgdl0gb2YgT2JqZWN0LmVudHJpZXMoc3RhdGljcykpIHtcbiAgICAgICAgICAgIGlmIChkb2N1bWVudC5sb2NhdGlvbi5ocmVmXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcLz8kLywgXCIvXCIpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoYGh0dHBzOi8vJHtkb2N1bWVudC5sb2NhdGlvbi5ob3N0bmFtZX1gLCBcIlwiKVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKFwiP1wiLCBcIi9cIilcbiAgICAgICAgICAgICAgICAubWF0Y2goaykpIHtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvcmVhZGluZy5wbmdcIjtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZVRleHQgPSBzdHJpbmdzLmJyb3dzZTtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEgPSB7IC4uLnByZXNlbmNlRGF0YSwgLi4udiB9O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghYnV0dG9ucylcbiAgICAgICAgICAgIGRlbGV0ZSBwcmVzZW5jZURhdGEuYnV0dG9ucztcbiAgICB9XG4gICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkocHJlc2VuY2VEYXRhKTtcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY0hKbGMyVnVZMlV1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SndjbVZ6Wlc1alpTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGRkJRVkVzUTBGQlF6dEpRVU0xUWl4UlFVRlJMRVZCUVVVc2IwSkJRVzlDTzBOQlF6bENMRU5CUVVNc1JVRkRSaXhwUWtGQmFVSXNSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVWQlFVVXNSMEZCUnl4SlFVRkpMRU5CUVVNc1EwRkJRenRCUVVWdVJDeExRVUZMTEZWQlFWVXNWVUZCVlR0SlFVTjRRaXhQUVVGUExGRkJRVkVzUTBGQlF5eFZRVUZWTEVOQlEzcENPMUZCUTBNc1RVRkJUU3hGUVVGRkxHdENRVUZyUWp0UlFVTXhRaXhMUVVGTExFVkJRVVVzYzBKQlFYTkNPMUZCUXpkQ0xHRkJRV0VzUlVGQlJTeHpRa0ZCYzBJN1VVRkRja01zVVVGQlVTeEZRVUZGTEdsQ1FVRnBRanRSUVVNelFpeFJRVUZSTEVWQlFVVXNhVUpCUVdsQ08xRkJRek5DTEZkQlFWY3NSVUZCUlN4dlFrRkJiMEk3VVVGRGFrTXNWMEZCVnl4RlFVRkZMRzlDUVVGdlFqdFJRVU5xUXl4UlFVRlJMRVZCUVVVc2FVSkJRV2xDTzFGQlF6TkNMRXRCUVVzc1JVRkJSU3hqUVVGak8xRkJRM0pDTEZGQlFWRXNSVUZCUlN4cFFrRkJhVUk3VVVGRE0wSXNUMEZCVHl4RlFVRkZMR2RDUVVGblFqdFJRVU42UWl4VlFVRlZMRVZCUVVVc2JVSkJRVzFDTzFGQlF5OUNMRXRCUVVzc1JVRkJSU3hqUVVGak8xRkJRM0pDTEZkQlFWY3NSVUZCUlN4dlFrRkJiMEk3VVVGRGFrTXNWMEZCVnl4RlFVRkZMRzlDUVVGdlFqdFJRVU5xUXl4VFFVRlRMRVZCUVVVc2EwSkJRV3RDTzFGQlF6ZENMRk5CUVZNc1JVRkJSU3h0UWtGQmJVSTdVVUZET1VJc1YwRkJWeXhGUVVGRkxIRkNRVUZ4UWp0UlFVTnNReXhQUVVGUExFVkJRVVVzYVVKQlFXbENPMUZCUXpGQ0xFOUJRVThzUlVGQlJTeHBRa0ZCYVVJN1VVRkRNVUlzVFVGQlRTeEZRVUZGTEcxQ1FVRnRRanRSUVVNelFpeG5Ra0ZCWjBJc1JVRkJSU3g1UWtGQmVVSTdVVUZETTBNc2FVSkJRV2xDTEVWQlFVVXNNa0pCUVRKQ08xRkJRemxETEZGQlFWRXNSVUZCUlN4cFFrRkJhVUk3UzBGRE0wSXNSVUZEUkN4TlFVRk5MRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVk1zVFVGQlRTeERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1JVRkJSU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVU16UkN4RFFVRkRPMEZCUTBnc1EwRkJRenRCUVVWRUxFbEJRVWtzVDBGQkswTXNSVUZEYkVRc1QwRkJUeXhIUVVGWExFbEJRVWtzUTBGQlF6dEJRVVY0UWl4UlFVRlJMRU5CUVVNc1JVRkJSU3hEUVVGRExGbEJRVmtzUlVGQlJTeExRVUZMTEVsQlFVa3NSVUZCUlR0SlFVTndReXhOUVVGTkxFTkJRVU1zVDBGQlR5eEZRVUZGTEU5QlFVOHNSVUZCUlN4UFFVRlBMRU5CUVVNc1IwRkJSeXhOUVVGTkxFOUJRVThzUTBGQlF5eEhRVUZITEVOQlFVTTdVVUZEY2tRc1VVRkJVU3hEUVVGRExGVkJRVlVzUTBGQlV5eE5RVUZOTEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1IwRkJSeXhGUVVGRkxFTkJRVU1zU1VGQlNTeERRVUZETzFGQlEzSkVMRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVlVzVTBGQlV5eERRVUZETzFGQlEzWkRMRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVlVzVTBGQlV5eERRVUZETzB0QlEzWkRMRU5CUVVNc1EwRkJRenRKUVVWSUxFbEJRVWtzVDBGQlR5eExRVUZMTEU5QlFVOHNTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSVHRSUVVOd1F5eFBRVUZQTEVkQlFVY3NUMEZCVHl4RFFVRkRPMUZCUTJ4Q0xFOUJRVThzUjBGQlJ5eE5RVUZOTEZWQlFWVXNSVUZCUlN4RFFVRkRPMHRCUXpkQ08wbEJSVVFzU1VGQlNTeFpRVUZaTEVkQlFXbENPMUZCUTJoRExHRkJRV0VzUlVGRFdpdzJSRUZCTmtRN1VVRkRPVVFzWTBGQll5eEZRVUZGTEdsQ1FVRnBRanRMUVVOcVF5eERRVUZETzBsQlJVWXNUVUZCVFN4UFFVRlBMRWRCUlZRN1VVRkRTQ3hIUVVGSExFVkJRVVU3V1VGRFNpeFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRMRTFCUVUwN1UwRkRka0k3VVVGRFJDeHRRa0ZCYlVJc1JVRkJSVHRaUVVOd1FpeFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRMRXRCUVVzN1UwRkRkRUk3VVVGRFJDeHRRa0ZCYlVJc1JVRkJSVHRaUVVOd1FpeFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRMR0ZCUVdFN1UwRkRPVUk3VVVGRFJDeDFRa0ZCZFVJc1JVRkJSVHRaUVVONFFpeFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRMRkZCUVZFN1UwRkRla0k3VVVGRFJDeDFRa0ZCZFVJc1JVRkJSVHRaUVVONFFpeFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRMRkZCUVZFN1UwRkRla0k3VVVGRFJDd3dRa0ZCTUVJc1JVRkJSVHRaUVVNelFpeFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRMRmRCUVZjN1UwRkROVUk3VVVGRFJDeDFRa0ZCZFVJc1JVRkJSVHRaUVVONFFpeFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRMRmRCUVZjN1UwRkROVUk3VVVGRFJDdzRRa0ZCT0VJc1JVRkJSVHRaUVVNdlFpeFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRMRkZCUVZFc1EwRkJReXhQUVVGUExFTkJRMmhETEV0QlFVc3NSVUZEVEN4UlFVRlJPMmxDUVVOT0xHRkJRV0VzUTBGQlF5eHJRa0ZCYTBJc1EwRkJRenRuUWtGRGJFTXNSVUZCUlN4WFFVRlhMRU5CUVVNc1QwRkJUeXhEUVVOd1FpeFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMREJDUVVFd1FpeERRVUZETEVWQlFVVXNWMEZCVnl4RlFVTXZSQ3hGUVVGRkxFTkJRMFk3YVVKQlEwRXNTVUZCU1N4RlFVRkZMRU5CUTFJN1UwRkRSRHRSUVVORUxGTkJRVk1zUlVGQlJUdFpRVU5XTEU5QlFVOHNSVUZCUlN4UFFVRlBMRU5CUVVNc1MwRkJTenRUUVVOMFFqdFJRVU5FTEZGQlFWRXNSVUZCUlR0WlFVTlVMRTlCUVU4c1JVRkJSU3hQUVVGUExFTkJRVU1zVVVGQlVUdFpRVU42UWl4TFFVRkxMRVZCUVVVc1IwRkRUaXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEZkQlFWY3NRMEZCUXl4RlFVRkZMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVTXZSQ3hGUVVGRk8xTkJRMFk3VVVGRFJDeHhRa0ZCY1VJc1JVRkJSVHRaUVVOMFFpeFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRMRTlCUVU4N1UwRkRlRUk3VVVGRFJDeFZRVUZWTEVWQlFVVTdXVUZEV0N4UFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRExGVkJRVlU3V1VGRE0wSXNTMEZCU3l4RlFVRkZMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zT0VKQlFUaENMRU5CUVVNN1owSkJRelZFTEVWQlFVVXNWMEZCVnp0WlFVTmtMRTlCUVU4c1JVRkJSVHRuUWtGRFVqdHZRa0ZEUXl4TFFVRkxMRVZCUVVVc1QwRkJUeXhEUVVGRExHZENRVUZuUWp0dlFrRkRMMElzUjBGQlJ5eEZRVUZGTEZGQlFWRXNRMEZCUXl4SFFVRkhPMmxDUVVOcVFqdGhRVU5FTzFOQlEwUTdVVUZEUkN4elFrRkJjMElzUlVGQlJUdFpRVU4yUWl4UFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRExFdEJRVXM3VTBGRGRFSTdVVUZEUkN4alFVRmpMRVZCUVVVN1dVRkRaaXhQUVVGUExFVkJRVVVzVDBGQlR5eERRVUZETEZkQlFWY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzFsQlF6VkRMRXRCUVVzc1JVRkJSU3hQUVVGUExFTkJRVU1zVjBGQlZ5eERRVUZETEV0QlFVc3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03VTBGRE1VTTdVVUZEUkN4elFrRkJjMElzUlVGQlJUdFpRVU4yUWl4UFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRExGZEJRVmM3VTBGRE5VSTdVVUZEUkN4dlFrRkJiMElzUlVGQlJUdFpRVU55UWl4UFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRExGTkJRVk03VTBGRE1VSTdVVUZEUkN4dlFrRkJiMElzUlVGQlJUdFpRVU55UWl4UFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRExGTkJRVk03VTBGRE1VSTdVVUZEUkN4WFFVRlhMRVZCUVVVN1dVRkRXaXhQUVVGUExFVkJRVVVzVDBGQlR5eERRVUZETEZkQlFWYzdXVUZETlVJc1MwRkJTeXhGUVVGRkxGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNPRUpCUVRoQ0xFTkJRVU03WjBKQlF6VkVMRVZCUVVVc1YwRkJWenRaUVVOa0xFOUJRVThzUlVGQlJUdG5Ra0ZEVWp0dlFrRkRReXhMUVVGTExFVkJRVVVzVDBGQlR5eERRVUZETEdsQ1FVRnBRanR2UWtGRGFFTXNSMEZCUnl4RlFVRkZMRkZCUVZFc1EwRkJReXhIUVVGSE8ybENRVU5xUWp0aFFVTkVPMU5CUTBRN1VVRkRSQ3hYUVVGWExFVkJRVVU3V1VGRFdpeFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRMRTlCUVU4N1dVRkRlRUlzUzBGQlN5eEZRVUZGTEU5QlFVOHNRMEZCUXl4UFFVRlBPMU5CUTNSQ08xRkJRMFFzVTBGQlV5eEZRVUZGTzFsQlExWXNUMEZCVHl4RlFVRkZMRTlCUVU4c1EwRkJReXhOUVVGTk8xbEJRM1pDTEV0QlFVc3NSVUZCUlN4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRM0JFTEdGQlFXRXNhMFJCUVdVN1UwRkROVUk3VVVGRFJDeFJRVUZSTEVWQlFVVTdXVUZEVkN4UFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRExGRkJRVkU3VTBGRGVrSTdTMEZEUkN4RFFVRkRPMGxCUlVZc1NVRkJTU3hQUVVGUE8xRkJRVVVzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4UFFVRlBMRU5CUVVNc1RVRkJUU3hEUVVGRE8xTkJRemxETzFGQlEwb3NTMEZCU3l4TlFVRk5MRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eEpRVUZKTEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNc1QwRkJUeXhEUVVGRExFVkJRVVU3V1VGRE4wTXNTVUZEUXl4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWs3YVVKQlEzQkNMRTlCUVU4c1EwRkJReXhOUVVGTkxFVkJRVVVzUjBGQlJ5eERRVUZETzJsQ1FVTndRaXhQUVVGUExFTkJRVU1zVjBGQlZ5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFc1JVRkJSU3hGUVVGRkxFVkJRVVVzUTBGQlF6dHBRa0ZEY0VRc1QwRkJUeXhEUVVGRExFZEJRVWNzUlVGQlJTeEhRVUZITEVOQlFVTTdhVUpCUTJwQ0xFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZEVkR0blFrRkRSQ3haUVVGWkxFTkJRVU1zWVVGQllTeHZSRUZCYVVJc1EwRkJRenRuUWtGRE5VTXNXVUZCV1N4RFFVRkRMR05CUVdNc1IwRkJSeXhQUVVGUExFTkJRVU1zVFVGQlRTeERRVUZETzJkQ1FVTTNReXhaUVVGWkxFZEJRVWNzUlVGQlJTeEhRVUZITEZsQlFWa3NSVUZCUlN4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRE8yRkJRM3BETzFOQlEwUTdVVUZEUkN4SlFVRkpMRU5CUVVNc1QwRkJUenRaUVVGRkxFOUJRVThzV1VGQldTeERRVUZETEU5QlFVOHNRMEZCUXp0TFFVTXhRenRKUVVWRUxGRkJRVkVzUTBGQlF5eFhRVUZYTEVOQlFVTXNXVUZCV1N4RFFVRkRMRU5CUVVNN1FVRkRjRU1zUTBGQlF5eERRVUZETEVOQlFVTWlmUT09Il0sIm5hbWVzIjpbInByZXNlbmNlIiwiUHJlc2VuY2UiLCJjbGllbnRJZCIsImJyb3dzaW5nVGltZXN0YW1wIiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsIm5vdyIsImFzeW5jIiwiZ2V0U3RyaW5ncyIsImJyb3dzZSIsIm5hbWVzIiwic2tpbnNGZWF0dXJlZCIsInNraW5zVG9wIiwic2tpbnNOZXciLCJza2luc1JhbmRvbSIsInNraW5zVGFnZ2VkIiwic2tpbnNUYWciLCJjYXBlcyIsInZpZXdDYXBlIiwic2VydmVycyIsInZpZXdTZXJ2ZXIiLCJjbGFpbSIsInByb2ZpbGVFZGl0Iiwidmlld0ZyaWVuZHMiLCJ2aWV3U2tpbnMiLCJ2aWV3RW1vamkiLCJ2aWV3UHJvZmlsZSIsInZpZXdpbmciLCJwcml2YWN5Iiwic2VhcmNoIiwiYnV0dG9uVmlld1NlcnZlciIsImJ1dHRvblZpZXdQcm9maWxlIiwidmlld1NraW4iLCJnZXRTZXR0aW5nIiwiY2F0Y2giLCJzdHJpbmdzIiwib2xkTGFuZyIsIm9uIiwibmV3TGFuZyIsImJ1dHRvbnMiLCJQcm9taXNlIiwiYWxsIiwicHJlc2VuY2VEYXRhIiwibGFyZ2VJbWFnZUtleSIsInN0YXJ0VGltZXN0YW1wIiwic3RhdGljcyIsImRldGFpbHMiLCJyZXBsYWNlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwidGV4dENvbnRlbnQiLCJ0cmltIiwic3RhdGUiLCJzcGxpdCIsImxhYmVsIiwidXJsIiwiVVJMIiwibG9jYXRpb24iLCJocmVmIiwic21hbGxJbWFnZUtleSIsImsiLCJ2IiwiT2JqZWN0IiwiZW50cmllcyIsImhvc3RuYW1lIiwibWF0Y2giLCJzbWFsbEltYWdlVGV4dCIsInNldEFjdGl2aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==
undefined;