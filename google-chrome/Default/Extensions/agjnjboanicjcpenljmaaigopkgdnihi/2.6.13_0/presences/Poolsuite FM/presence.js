var __webpack_exports__={};const presence=new Presence({clientId:"1174478441450573924"});function convertToSeconds(e){const[t,s]=e.split(":").map(Number);return 60*t+s}let details,state,artist;presence.on("UpdateData",(async()=>{if(details=`Channel: ${document.querySelector(".select-wrapper").lastChild.textContent}`,artist=document.querySelector(".current-track").lastChild.textContent,state="We'll be right back"===artist?"Tuning...":`${artist} - ${document.querySelector(".current-track").firstChild.nextSibling.textContent}`,"Pause"===document.querySelector(".middle").firstChild.textContent){const e=Math.floor(Date.now()/1e3),t={details,state,largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Poolsuite%20FM/assets/logo.jpg",startTimestamp:e,endTimestamp:e+(convertToSeconds(document.querySelector(".timer").lastChild.textContent)-convertToSeconds(document.querySelector(".timer").firstChild.textContent)),smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/play.png",smallImageText:"Playing"};presence.setActivity(t)}else{const e={details,state,largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Poolsuite%20FM/assets/logo.jpg",endTimestamp:0,smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/pause.png",smallImageText:"Paused"};presence.setActivity(e)}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLFNBQVcsSUFBSUMsU0FBUyxDQUMxQkMsU0FBVSx3QkFFZCxTQUFTQyxpQkFBaUJDLEdBQ3RCLE1BQU9DLEVBQVNDLEdBQVdGLEVBQVNHLE1BQU0sS0FBS0MsSUFBSUMsUUFDbkQsT0FBaUIsR0FBVkosRUFBZUMsQ0FDMUIsQ0FDQSxJQUFJSSxRQUFTQyxNQUFPQyxPQUNwQlosU0FBU2EsR0FBRyxjQUFjQyxVQVN0QixHQVJBSixRQUFVLFlBQVlLLFNBQVNDLGNBQWMsbUJBQW1CQyxVQUFVQyxjQUMxRU4sT0FBU0csU0FBU0MsY0FBYyxrQkFBa0JDLFVBQVVDLFlBRXhEUCxNQURXLHdCQUFYQyxPQUNRLFlBRUEsR0FBR0EsWUFBWUcsU0FBU0MsY0FBYyxrQkFBa0JHLFdBQVdDLFlBQ3RFRixjQUV3RCxVQUE3REgsU0FBU0MsY0FBYyxXQUFXRyxXQUFXRCxZQUF5QixDQUN0RSxNQUFNRyxFQUFVQyxLQUFLQyxNQUFNQyxLQUFLQyxNQUFRLEtBQU9DLEVBQWUsQ0FDMURoQixRQUNBQyxNQUNBZ0IsY0FBZSxzRUFDZkMsZUFBZ0JQLEVBQ2hCUSxhQUFjUixHQUNUbEIsaUJBQWlCWSxTQUFTQyxjQUFjLFVBQVVDLFVBQVVDLGFBQ3pEZixpQkFBaUJZLFNBQVNDLGNBQWMsVUFBVUcsV0FBV0QsY0FDckVZLGNBQWUsK0NBQ2ZDLGVBQWdCLFdBRXBCL0IsU0FBU2dDLFlBQVlOLEVBQ3pCLEtBQ0ssQ0FDRCxNQUFNQSxFQUFlLENBQ2pCaEIsUUFDQUMsTUFDQWdCLGNBQWUsc0VBQ2ZFLGFBQWMsRUFDZEMsY0FBZSxnREFDZkMsZUFBZ0IsVUFFcEIvQixTQUFTZ0MsWUFBWU4sRUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wcmVzZW5jZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwcmVzZW5jZSA9IG5ldyBQcmVzZW5jZSh7XG4gICAgY2xpZW50SWQ6IFwiMTE3NDQ3ODQ0MTQ1MDU3MzkyNFwiLFxufSk7XG5mdW5jdGlvbiBjb252ZXJ0VG9TZWNvbmRzKGR1cmF0aW9uKSB7XG4gICAgY29uc3QgW21pbnV0ZXMsIHNlY29uZHNdID0gZHVyYXRpb24uc3BsaXQoXCI6XCIpLm1hcChOdW1iZXIpO1xuICAgIHJldHVybiBtaW51dGVzICogNjAgKyBzZWNvbmRzO1xufVxubGV0IGRldGFpbHMsIHN0YXRlLCBhcnRpc3Q7XG5wcmVzZW5jZS5vbihcIlVwZGF0ZURhdGFcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGRldGFpbHMgPSBgQ2hhbm5lbDogJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNlbGVjdC13cmFwcGVyXCIpLmxhc3RDaGlsZC50ZXh0Q29udGVudH1gO1xuICAgIGFydGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY3VycmVudC10cmFja1wiKS5sYXN0Q2hpbGQudGV4dENvbnRlbnQ7XG4gICAgaWYgKGFydGlzdCA9PT0gXCJXZSdsbCBiZSByaWdodCBiYWNrXCIpXG4gICAgICAgIHN0YXRlID0gXCJUdW5pbmcuLi5cIjtcbiAgICBlbHNlIHtcbiAgICAgICAgc3RhdGUgPSBgJHthcnRpc3R9IC0gJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmN1cnJlbnQtdHJhY2tcIikuZmlyc3RDaGlsZC5uZXh0U2libGluZ1xuICAgICAgICAgICAgLnRleHRDb250ZW50fWA7XG4gICAgfVxuICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1pZGRsZVwiKS5maXJzdENoaWxkLnRleHRDb250ZW50ID09PSBcIlBhdXNlXCIpIHtcbiAgICAgICAgY29uc3QgZWxhcHNlZCA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApLCBwcmVzZW5jZURhdGEgPSB7XG4gICAgICAgICAgICBkZXRhaWxzLFxuICAgICAgICAgICAgc3RhdGUsXG4gICAgICAgICAgICBsYXJnZUltYWdlS2V5OiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvUC9Qb29sc3VpdGUlMjBGTS9hc3NldHMvbG9nby5qcGdcIixcbiAgICAgICAgICAgIHN0YXJ0VGltZXN0YW1wOiBlbGFwc2VkLFxuICAgICAgICAgICAgZW5kVGltZXN0YW1wOiBlbGFwc2VkICtcbiAgICAgICAgICAgICAgICAoY29udmVydFRvU2Vjb25kcyhkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRpbWVyXCIpLmxhc3RDaGlsZC50ZXh0Q29udGVudCkgLVxuICAgICAgICAgICAgICAgICAgICBjb252ZXJ0VG9TZWNvbmRzKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGltZXJcIikuZmlyc3RDaGlsZC50ZXh0Q29udGVudCkpLFxuICAgICAgICAgICAgc21hbGxJbWFnZUtleTogXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9wbGF5LnBuZ1wiLFxuICAgICAgICAgICAgc21hbGxJbWFnZVRleHQ6IFwiUGxheWluZ1wiLFxuICAgICAgICB9O1xuICAgICAgICBwcmVzZW5jZS5zZXRBY3Rpdml0eShwcmVzZW5jZURhdGEpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgcHJlc2VuY2VEYXRhID0ge1xuICAgICAgICAgICAgZGV0YWlscyxcbiAgICAgICAgICAgIHN0YXRlLFxuICAgICAgICAgICAgbGFyZ2VJbWFnZUtleTogXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL1AvUG9vbHN1aXRlJTIwRk0vYXNzZXRzL2xvZ28uanBnXCIsXG4gICAgICAgICAgICBlbmRUaW1lc3RhbXA6IDAsXG4gICAgICAgICAgICBzbWFsbEltYWdlS2V5OiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3BhdXNlLnBuZ1wiLFxuICAgICAgICAgICAgc21hbGxJbWFnZVRleHQ6IFwiUGF1c2VkXCIsXG4gICAgICAgIH07XG4gICAgICAgIHByZXNlbmNlLnNldEFjdGl2aXR5KHByZXNlbmNlRGF0YSk7XG4gICAgfVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljSEpsYzJWdVkyVXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lKd2NtVnpaVzVqWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEZGQlFWRXNRMEZCUXp0SlFVTTNRaXhSUVVGUkxFVkJRVVVzY1VKQlFYRkNPME5CUXk5Q0xFTkJRVU1zUTBGQlF6dEJRVWRJTEZOQlFWTXNaMEpCUVdkQ0xFTkJRVU1zVVVGQlowSTdTVUZEZWtNc1RVRkJUU3hEUVVGRExFOUJRVThzUlVGQlJTeFBRVUZQTEVOQlFVTXNSMEZCUnl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJRenRKUVVNelJDeFBRVUZQTEU5QlFVOHNSMEZCUnl4RlFVRkZMRWRCUVVjc1QwRkJUeXhEUVVGRE8wRkJReTlDTEVOQlFVTTdRVUZOUkN4SlFVRkpMRTlCUVdVc1JVRkJSU3hMUVVGaExFVkJRVVVzVFVGQll5eERRVUZETzBGQlEyNUVMRkZCUVZFc1EwRkJReXhGUVVGRkxFTkJRVU1zV1VGQldTeEZRVUZGTEV0QlFVc3NTVUZCU1N4RlFVRkZPMGxCUlhCRExFOUJRVThzUjBGQlJ5eFpRVU5VTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc2FVSkJRV2xDTEVOQlFVTXNRMEZCUXl4VFFVRlRMRU5CUVVNc1YwRkRja1FzUlVGQlJTeERRVUZETzBsQlEwZ3NUVUZCVFN4SFFVRkhMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1EwRkJReXhUUVVGVExFTkJRVU1zVjBGQlZ5eERRVUZETzBsQlIzaEZMRWxCUVVrc1RVRkJUU3hMUVVGTExIRkNRVUZ4UWp0UlFVRkZMRXRCUVVzc1IwRkJSeXhYUVVGWExFTkJRVU03VTBGRGNrUTdVVUZEU2l4TFFVRkxMRWRCUVVjc1IwRkJSeXhOUVVGTkxFMUJRMmhDTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNRMEZCUXl4VlFVRlZMRU5CUVVNc1YwRkJWenRoUVVNM1JDeFhRVU5JTEVWQlFVVXNRMEZCUXp0TFFVTklPMGxCUTBRc1NVRkJTU3hSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRMRlZCUVZVc1EwRkJReXhYUVVGWExFdEJRVXNzVDBGQlR5eEZRVUZGTzFGQlJYcEZMRTFCUVUwc1QwRkJUeXhIUVVGSExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1JVRkJSU3hIUVVGSExFbEJRVWtzUTBGQlF5eEZRVU0xUXl4WlFVRlpMRWRCUVdsQ08xbEJRelZDTEU5QlFVODdXVUZEVUN4TFFVRkxPMWxCUTB3c1lVRkJZU3gxUlVGQllUdFpRVU14UWl4alFVRmpMRVZCUVVVc1QwRkJUenRaUVVOMlFpeFpRVUZaTEVWQlExZ3NUMEZCVHp0blFrRkRVQ3hEUVVGRExHZENRVUZuUWl4RFFVTm9RaXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRMRk5CUVZNc1EwRkJReXhYUVVGWExFTkJRM1JFTzI5Q1FVTkJMR2RDUVVGblFpeERRVU5tTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU1zVlVGQlZTeERRVUZETEZkQlFWY3NRMEZEZGtRc1EwRkJRenRaUVVOS0xHRkJRV0VzWjBSQlFXRTdXVUZETVVJc1kwRkJZeXhGUVVGRkxGTkJRVk03VTBGRGVrSXNRMEZCUXp0UlFVTklMRkZCUVZFc1EwRkJReXhYUVVGWExFTkJRVU1zV1VGQldTeERRVUZETEVOQlFVTTdTMEZEYmtNN1UwRkJUVHRSUVVWT0xFMUJRVTBzV1VGQldTeEhRVUZwUWp0WlFVTnNReXhQUVVGUE8xbEJRMUFzUzBGQlN6dFpRVU5NTEdGQlFXRXNkVVZCUVdFN1dVRkRNVUlzV1VGQldTeEZRVUZGTEVOQlFVTTdXVUZEWml4aFFVRmhMR2xFUVVGak8xbEJRek5DTEdOQlFXTXNSVUZCUlN4UlFVRlJPMU5CUTNoQ0xFTkJRVU03VVVGRFJpeFJRVUZSTEVOQlFVTXNWMEZCVnl4RFFVRkRMRmxCUVZrc1EwRkJReXhEUVVGRE8wdEJRMjVETzBGQlEwWXNRMEZCUXl4RFFVRkRMRU5CUVVNaWZRPT0iXSwibmFtZXMiOlsicHJlc2VuY2UiLCJQcmVzZW5jZSIsImNsaWVudElkIiwiY29udmVydFRvU2Vjb25kcyIsImR1cmF0aW9uIiwibWludXRlcyIsInNlY29uZHMiLCJzcGxpdCIsIm1hcCIsIk51bWJlciIsImRldGFpbHMiLCJzdGF0ZSIsImFydGlzdCIsIm9uIiwiYXN5bmMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJsYXN0Q2hpbGQiLCJ0ZXh0Q29udGVudCIsImZpcnN0Q2hpbGQiLCJuZXh0U2libGluZyIsImVsYXBzZWQiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93IiwicHJlc2VuY2VEYXRhIiwibGFyZ2VJbWFnZUtleSIsInN0YXJ0VGltZXN0YW1wIiwiZW5kVGltZXN0YW1wIiwic21hbGxJbWFnZUtleSIsInNtYWxsSW1hZ2VUZXh0Iiwic2V0QWN0aXZpdHkiXSwic291cmNlUm9vdCI6IiJ9
undefined;