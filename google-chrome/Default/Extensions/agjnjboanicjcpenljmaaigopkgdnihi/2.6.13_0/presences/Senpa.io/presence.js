var __webpack_exports__={};const presence=new Presence({clientId:"691669470057594940"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/S/Senpa.io/assets/logo.png"};if("forum"!==document.location.host.split(".")[0]){if("/"===document.location.pathname)e.details="Home";else if(document.location.pathname.includes("/web/")){const t=JSON.parse(localStorage.getItem("senpaio:profiles"));e.details=`Playing on server : ${localStorage.getItem("senpaio:region")} ${localStorage.getItem("senpaio:server")} | ${document.querySelector("#room-stats-hud").textContent}`,e.state=`Player : ${""===t.tag?"":`[${t.tag}]`} ${""===t.list[t.selected].nick?"no nick":t.list[t.selected].nick} | ${document.querySelector("#stats-hud").textContent}`,e.startTimestamp=browsingTimestamp}else[,e.details]=document.querySelector("title").textContent.split("-"),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";e.details?(e.state||(e.state="Navigating..."),presence.setActivity(e)):presence.setActivity()}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLFNBQVcsSUFBSUMsU0FBUyxDQUMxQkMsU0FBVSx1QkFDVkMsa0JBQW9CQyxLQUFLQyxNQUFNQyxLQUFLQyxNQUFRLEtBQ2hEUCxTQUFTUSxHQUFHLGNBQWNDLFVBQ3RCLE1BQU1DLEVBQWUsQ0FDakJDLGNBQWUsaUVBRW5CLEdBQTZDLFVBQXpDQyxTQUFTQyxTQUFTQyxLQUFLQyxNQUFNLEtBQUssR0FBZ0IsQ0FDbEQsR0FBbUMsTUFBL0JILFNBQVNDLFNBQVNHLFNBQ2xCTixFQUFhTyxRQUFVLFlBQ3RCLEdBQUlMLFNBQVNDLFNBQVNHLFNBQVNFLFNBQVMsU0FBVSxDQUNuRCxNQUFNQyxFQUFVQyxLQUFLQyxNQUFNQyxhQUFhQyxRQUFRLHFCQUNoRGIsRUFBYU8sUUFBVSx1QkFBdUJLLGFBQWFDLFFBQVEscUJBQXFCRCxhQUFhQyxRQUFRLHVCQUF1QlgsU0FBU1ksY0FBYyxtQkFBbUJDLGNBQzlLZixFQUFhZ0IsTUFDVCxZQUE0QixLQUFoQlAsRUFBUVEsSUFBYSxHQUFLLElBQUlSLEVBQVFRLFVBQWtELEtBQXhDUixFQUFRUyxLQUFLVCxFQUFRVSxVQUFVQyxLQUNyRixVQUNBWCxFQUFRUyxLQUFLVCxFQUFRVSxVQUFVQyxVQUFlbEIsU0FBU1ksY0FBYyxjQUFjQyxjQUM3RmYsRUFBYXFCLGVBQWlCNUIsaUJBQ2xDLE1BRUssQ0FBRU8sRUFBYU8sU0FBV0wsU0FDdEJZLGNBQWMsU0FDZEMsWUFBWVYsTUFBTSxLQUN2QkwsRUFBYXNCLGNBQWdCLGtEQUU1QnRCLEVBQWFPLFNBR1RQLEVBQWFnQixRQUNkaEIsRUFBYWdCLE1BQVEsaUJBQ3pCMUIsU0FBU2lDLFlBQVl2QixJQUpyQlYsU0FBU2lDLGFBTWpCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcHJlc2VuY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcHJlc2VuY2UgPSBuZXcgUHJlc2VuY2Uoe1xuICAgIGNsaWVudElkOiBcIjY5MTY2OTQ3MDA1NzU5NDk0MFwiLFxufSksIGJyb3dzaW5nVGltZXN0YW1wID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCk7XG5wcmVzZW5jZS5vbihcIlVwZGF0ZURhdGFcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHByZXNlbmNlRGF0YSA9IHtcbiAgICAgICAgbGFyZ2VJbWFnZUtleTogXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL1MvU2VucGEuaW8vYXNzZXRzL2xvZ28ucG5nXCIsXG4gICAgfTtcbiAgICBpZiAoZG9jdW1lbnQubG9jYXRpb24uaG9zdC5zcGxpdChcIi5cIilbMF0gIT09IFwiZm9ydW1cIikge1xuICAgICAgICBpZiAoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUgPT09IFwiL1wiKVxuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIkhvbWVcIjtcbiAgICAgICAgZWxzZSBpZiAoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUuaW5jbHVkZXMoXCIvd2ViL1wiKSkge1xuICAgICAgICAgICAgY29uc3QgcHJvZmlsZSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJzZW5wYWlvOnByb2ZpbGVzXCIpKTtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gYFBsYXlpbmcgb24gc2VydmVyIDogJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInNlbnBhaW86cmVnaW9uXCIpfSAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKFwic2VucGFpbzpzZXJ2ZXJcIil9IHwgJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Jvb20tc3RhdHMtaHVkXCIpLnRleHRDb250ZW50fWA7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPVxuICAgICAgICAgICAgICAgIGBQbGF5ZXIgOiAke3Byb2ZpbGUudGFnID09PSBcIlwiID8gXCJcIiA6IGBbJHtwcm9maWxlLnRhZ31dYH0gJHtwcm9maWxlLmxpc3RbcHJvZmlsZS5zZWxlY3RlZF0ubmljayA9PT0gXCJcIlxuICAgICAgICAgICAgICAgICAgICA/IFwibm8gbmlja1wiXG4gICAgICAgICAgICAgICAgICAgIDogcHJvZmlsZS5saXN0W3Byb2ZpbGUuc2VsZWN0ZWRdLm5pY2t9YCArIGAgfCAke2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc3RhdHMtaHVkXCIpLnRleHRDb250ZW50fWA7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhcnRUaW1lc3RhbXAgPSBicm93c2luZ1RpbWVzdGFtcDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIFssIHByZXNlbmNlRGF0YS5kZXRhaWxzXSA9IGRvY3VtZW50XG4gICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCJ0aXRsZVwiKVxuICAgICAgICAgICAgICAgIC50ZXh0Q29udGVudC5zcGxpdChcIi1cIik7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvcmVhZGluZy5wbmdcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXByZXNlbmNlRGF0YS5kZXRhaWxzKVxuICAgICAgICAgICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkoKTtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoIXByZXNlbmNlRGF0YS5zdGF0ZSlcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBcIk5hdmlnYXRpbmcuLi5cIjtcbiAgICAgICAgICAgIHByZXNlbmNlLnNldEFjdGl2aXR5KHByZXNlbmNlRGF0YSk7XG4gICAgICAgIH1cbiAgICB9XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWNISmxjMlZ1WTJVdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUp3Y21WelpXNWpaUzUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeE5RVUZOTEZGQlFWRXNSMEZCUnl4SlFVRkpMRkZCUVZFc1EwRkJRenRKUVVNMVFpeFJRVUZSTEVWQlFVVXNiMEpCUVc5Q08wTkJRemxDTEVOQlFVTXNSVUZEUml4cFFrRkJhVUlzUjBGQlJ5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFVkJRVVVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNRMEZCUXp0QlFVVnVSQ3hSUVVGUkxFTkJRVU1zUlVGQlJTeERRVUZETEZsQlFWa3NSVUZCUlN4TFFVRkxMRWxCUVVrc1JVRkJSVHRKUVVOd1F5eE5RVUZOTEZsQlFWa3NSMEZCYVVJN1VVRkRiRU1zWVVGQllTeEZRVU5hTEN0RVFVRXJSRHRMUVVOb1JTeERRVUZETzBsQlJVWXNTVUZCU1N4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFdEJRVXNzVDBGQlR5eEZRVUZGTzFGQlEzSkVMRWxCUVVrc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEV0QlFVc3NSMEZCUnp0WlFVRkZMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzVFVGQlRTeERRVUZETzJGQlEycEZMRWxCUVVrc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRTlCUVU4c1EwRkJReXhGUVVGRk8xbEJRM1JFTEUxQlFVMHNUMEZCVHl4SFFVRkhMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zV1VGQldTeERRVUZETEU5QlFVOHNRMEZCUXl4clFrRkJhMElzUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEY2tVc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eDFRa0ZCZFVJc1dVRkJXU3hEUVVGRExFOUJRVThzUTBGRGFrVXNaMEpCUVdkQ0xFTkJRMmhDTEVsQlFVa3NXVUZCV1N4RFFVRkRMRTlCUVU4c1EwRkJReXhuUWtGQlowSXNRMEZCUXl4TlFVTXhReXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEdsQ1FVRnBRaXhEUVVGRExFTkJRVU1zVjBGRE0wTXNSVUZCUlN4RFFVRkRPMWxCUTBnc1dVRkJXU3hEUVVGRExFdEJRVXM3WjBKQlEycENMRmxCUVZrc1QwRkJUeXhEUVVGRExFZEJRVWNzUzBGQlN5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeFBRVUZQTEVOQlFVTXNSMEZCUnl4SFFVRkhMRWxCUTNaRUxFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFbEJRVWtzUzBGQlN5eEZRVUZGTzI5Q1FVTjZReXhEUVVGRExFTkJRVU1zVTBGQlV6dHZRa0ZEV0N4RFFVRkRMRU5CUVVNc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1NVRkRia01zUlVGQlJTeEhRVUZITEUxQlFVMHNVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhaUVVGWkxFTkJRVU1zUTBGQlF5eFhRVUZYTEVWQlFVVXNRMEZCUXp0WlFVTXZSQ3haUVVGWkxFTkJRVU1zWTBGQll5eEhRVUZITEdsQ1FVRnBRaXhEUVVGRE8xTkJRMmhFTzJGQlFVMDdXVUZEVGl4RFFVRkRMRVZCUVVVc1dVRkJXU3hEUVVGRExFOUJRVThzUTBGQlF5eEhRVUZITEZGQlFWRTdhVUpCUTJwRExHRkJRV0VzUTBGQlF5eFBRVUZQTEVOQlFVTTdhVUpCUTNSQ0xGZEJRVmNzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1dVRkRla0lzV1VGQldTeERRVUZETEdGQlFXRXNiMFJCUVdsQ0xFTkJRVU03VTBGRE5VTTdVVUZGUkN4SlFVRkpMRU5CUVVNc1dVRkJXU3hEUVVGRExFOUJRVTg3V1VGQlJTeFJRVUZSTEVOQlFVTXNWMEZCVnl4RlFVRkZMRU5CUVVNN1lVRkROME03V1VGRFNpeEpRVUZKTEVOQlFVTXNXVUZCV1N4RFFVRkRMRXRCUVVzN1owSkJRVVVzV1VGQldTeERRVUZETEV0QlFVc3NSMEZCUnl4bFFVRmxMRU5CUVVNN1dVRkRPVVFzVVVGQlVTeERRVUZETEZkQlFWY3NRMEZCUXl4WlFVRlpMRU5CUVVNc1EwRkJRenRUUVVOdVF6dExRVU5FTzBGQlEwWXNRMEZCUXl4RFFVRkRMRU5CUVVNaWZRPT0iXSwibmFtZXMiOlsicHJlc2VuY2UiLCJQcmVzZW5jZSIsImNsaWVudElkIiwiYnJvd3NpbmdUaW1lc3RhbXAiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93Iiwib24iLCJhc3luYyIsInByZXNlbmNlRGF0YSIsImxhcmdlSW1hZ2VLZXkiLCJkb2N1bWVudCIsImxvY2F0aW9uIiwiaG9zdCIsInNwbGl0IiwicGF0aG5hbWUiLCJkZXRhaWxzIiwiaW5jbHVkZXMiLCJwcm9maWxlIiwiSlNPTiIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInF1ZXJ5U2VsZWN0b3IiLCJ0ZXh0Q29udGVudCIsInN0YXRlIiwidGFnIiwibGlzdCIsInNlbGVjdGVkIiwibmljayIsInN0YXJ0VGltZXN0YW1wIiwic21hbGxJbWFnZUtleSIsInNldEFjdGl2aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==
undefined;