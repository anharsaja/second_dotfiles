var __webpack_exports__={};const presence=new Presence({clientId:"1028679580027977839"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{let e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/S/Sofi/assets/logo.png",details:"Viewing Homepage",smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/viewing.png",startTimestamp:browsingTimestamp};const{host:t,pathname:s,href:i}=document.location,l={"/backgrounds":{details:"Viewing Backgrounds",smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/viewing.png",buttons:[{label:"View Backgrounds",url:i}]},"/profile/background":{details:"Viewing Profile Backgrounds",smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/viewing.png",buttons:[{label:"View Profile Backgrounds",url:i}]},"/frames":{details:"Viewing Frames",smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/viewing.png",buttons:[{label:"View Frames",url:i}]},"/items":{details:"Viewing Items",smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/viewing.png",buttons:[{label:"View Items",url:i}]},"/bump":{details:"Bumping",smallImageKey:null,smallImageText:null,buttons:[{label:"Wanna Bump?",url:i}]},"/team":{details:"Viewing Team",smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/viewing.png",buttons:[{label:"View Sofi Team",url:i}]},"/event":{details:"Viewing Event",smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/viewing.png",buttons:[{label:"View Event",url:i}]}};if("sofi.gg"===t){if(s.startsWith("/glows")){const t=document.querySelector("div.flex.text-xl.lg\\:text-2xl");if(e.details="Viewing Glows",e.buttons=[{label:"View Glows",url:i}],t){const s=t.textContent?.match(/.*#[0-9]+/gi);s&&(e.state=`Of ${s[0]}`)}}else if(s.startsWith("/profile")&&!s.endsWith("/background")){const t="profile"===s,l=document.querySelector("title"),n=l?l.textContent.replace(" Profile",""):null;e.details="Viewing Profile",e.state=t?null:`Of ${n.slice(0,n.length-2)}`,e.buttons=[{label:t?"View Profile":`View ${n} Profile`,url:i}],s.includes("/edit")&&(e.details="Editing Profile",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/S/Sofi/assets/2.png",e.buttons=[{label:"Edit Profile",url:i}],delete e.state)}else if(s.startsWith("/art")){const t=document.querySelector("div.w-full.font-inter.uppercase.font-bold.text-xl.lg\\:text-3xl.lg\\:relative.text-light-400.text-center");if(e.details="Viewing Art Gallery",e.buttons=[{label:"View Art Gallery",url:"https://sofi.gg/art"}],t){const s=t.textContent;s&&(e.state=s.toUpperCase())}s.includes("/submit")&&(e.details="Submitting Art",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/S/Sofi/assets/1.png",e.buttons=[{label:"Submit Art",url:i}],delete e.state)}for(const[t,i]of Object.entries(l))s.includes(t)&&(e={...e,...i})}else if("gems.sofi.gg"===t){if(s.includes("/orders"))return;e.details="Buying Gems",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/S/Sofi/assets/0.png",e.buttons=[{label:"Buy Gems",url:i}]}const[n,r]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("buttons")]);n&&(e.details="Browsing...",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/S/Sofi/assets/3.png",delete e.smallImageText,delete e.state,delete e.buttons),r||delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;