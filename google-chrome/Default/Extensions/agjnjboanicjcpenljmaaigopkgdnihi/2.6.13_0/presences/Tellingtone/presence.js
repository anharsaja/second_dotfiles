var __webpack_exports__={};const presence=new Presence({clientId:"1006201873985961984"}),browsingTimestamp=Math.floor(Date.now()/1e3);async function getStrings(){return presence.getStrings({viewHome:"general.viewHome",paused:"general.paused",playing:"general.playing",episode:"general.episode",viewPage:"general.viewPage",buttonViewSeries:"general.buttonViewSeries",listeningTo:"general.listeningTo"},await presence.getSetting("lang").catch((()=>"en")))}let strings,oldLang=null;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/Tellingtone/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t,href:s}=document.location,n=t.split("/"),[a,i,r]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("time"),presence.getSetting("cover")]);switch(oldLang===a&&strings||(oldLang=a,strings=await getStrings()),n[1]){case"":e.details=strings.viewHome;break;case"shop":case"blog":e.details=`Viewing ${n[1]}`;break;case"series":e.details=strings.viewPage,e.state=document.querySelector("div.head > h1").textContent,e.largeImageKey=document.querySelector("div.head > img").src,e.buttons=[{label:strings.buttonViewSeries,url:s}]}if(document.querySelector("div#Player")){e.details=strings.listeningTo.replace("{0}"," ").replace("{1}",document.querySelector(".reading-media > .media-infos > .media-title").textContent),e.state=document.querySelector("div.media-episode").textContent,e.largeImageKey=document.querySelector("div.media-image > svg > image").getAttribute("xlink:href");const t=[];for(const e of document.querySelectorAll("div.desktop > div.timer"))t.push(e.textContent);[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(t[0]),presence.timestampFromFormat(t[1])),delete e.buttons,document.querySelector(".icon-pause")?(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=strings.playing):(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText=strings.paused,delete e.endTimestamp,delete e.startTimestamp)}i||(delete e.startTimestamp,delete e.endTimestamp),r||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/T/Tellingtone/assets/logo.png"),e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;