var __webpack_exports__={};const presence=new Presence({clientId:"632293282847784973"}),browsingTimestamp=Math.floor(Date.now()/1e3);async function getStrings(){return presence.getStrings({home:"general.viewHome",calendar:"google classroom.calendar",todo:"google classroom.todo",assignmentPrivate:"google classroom.assignmentPrivate",assignment:"google classroom.assignment",class:"google classroom.class",classworkPrivate:"google classroom.classworkPrivate",classwork:"google classroom.classwork",classmembersPrivate:"google classroom.classmembersPrivate",classmembers:"google classroom.classmembers",settings:"google classroom.settings"},await presence.getSetting("lang").catch((()=>"en")))}let strings=null,oldLang=null;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/G/Google%20Classroom/assets/logo.png",startTimestamp:browsingTimestamp},s=document.location.pathname.split("/"),[t,a]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy")]);switch(oldLang!==t&&(oldLang=t,strings=await getStrings()),s.shift(),"u"===s[0]&&s.splice(0,2),s[0]){case"h":e.details=strings.home;break;case"calendar":e.details=strings.calendar;break;case"a":e.details=strings.todo;break;case"c":{const t=document.querySelector('span[class="YVvGBb dDKhVc"]')?`${document.querySelector('span[id="UGb2Qe"]').textContent} - ${document.querySelector('span[class="YVvGBb dDKhVc"]').textContent}`:document.querySelector('span[id="UGb2Qe"]').textContent;s[2]&&"a"===s[2]?e.details=a?strings.assignmentPrivate:strings.assignment:e.details=strings.class,a||(e.state=t);break}case"w":{const s=document.querySelector('span[class="YVvGBb dDKhVc"]')?`${document.querySelector('span[id="UGb2Qe"]').textContent} - ${document.querySelector('span[class="YVvGBb dDKhVc"]').textContent}`:document.querySelector('span[id="UGb2Qe"]').textContent;e.details=a?strings.classworkPrivate:strings.classwork,a||(e.state=s);break}case"r":{const s=document.querySelector('span[class="YVvGBb dDKhVc"]')?`${document.querySelector('span[id="UGb2Qe"]').textContent} - ${document.querySelector('span[class="YVvGBb dDKhVc"]').textContent}`:document.querySelector('span[id="UGb2Qe"]').textContent;e.details=a?strings.classmembersPrivate:strings.classmembers,a||(e.state=s);break}case"s":e.details=strings.settings}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;