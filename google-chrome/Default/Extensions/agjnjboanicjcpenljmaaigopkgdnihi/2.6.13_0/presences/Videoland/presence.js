var __webpack_exports__={};const presence=new Presence({clientId:"941627291304329226"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/V/Videoland/assets/0.gif",startTimestamp:browsingTimestamp},{href:t}=document.location,[s,a,r]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("covers")]),o=document.querySelector("video"),n=document.querySelectorAll('[type="application/ld+json"]')?.[1]?.textContent?JSON.parse(document.querySelectorAll('[type="application/ld+json"]')?.[1]?.textContent):"";o?(delete e.startTimestamp,e.details=n.name,e.state=`S${n.partOfSeason.seasonNumber}:A${n.episodeNumber}`,e.largeImageKey=document.querySelector('[property="og:image"]').content.split("?")[0],e.smallImageKey=o.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=o.paused?"Gepauzeerd":"Aan het afspelen",o.paused||([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(o)),e.buttons=[{label:"Bekijk Video",url:t}]):t.match(/[0-9]{4}/gm)?(e.details=`Bekijkt: ${document.querySelector("meta[property='og:title']")?.content.toLowerCase()?.split("op videoland")?.[0]??document.querySelector("title")?.textContent?.split("op videoland")?.[0]}`,e.largeImageKey=document.querySelector("article").querySelector("source").getAttribute("srcset").split("?")[0],document.querySelector('[name="description"]')?.content?.includes("afleveringen")?e.buttons=[{label:"Bekijk Serie",url:t}]:e.buttons=[{label:"Bekijk Film",url:t}]):document.querySelector('[class*="is-active"]')?e.details=`Bekijkt ${document.querySelector('[class*="is-active"]')?.textContent?.toLowerCase()}`:document.querySelector("article")?e.details=`Bekijkt: ${document.querySelector("meta[property='og:title']")?.content.toLowerCase().split("on videoland")[0].split("op videoland")[0]} ${t.split("main-")?.[1].split("-")?.[0]}`:e.details="Aan het browsen",a&&!s||!e.buttons||delete e.buttons,r&&!s||"https://cdn.rcd.gg/PreMiD/websites/V/Videoland/assets/0.gif"===e.largeImageKey||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/V/Videoland/assets/0.gif"),s&&e.state&&delete e.state,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;