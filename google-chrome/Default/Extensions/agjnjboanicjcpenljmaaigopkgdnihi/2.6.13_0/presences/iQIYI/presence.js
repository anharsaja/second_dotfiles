var __webpack_exports__={};const presence=new Presence({clientId:"809748404963770398"}),getStrings=async()=>presence.getStrings({play:"general.playing",pause:"general.paused",browse:"general.browsing",episode:"general.episode",searchFor:"general.searchFor",watchVideo:"general.buttonWatchVideo",watchMovie:"general.buttonViewMovie",watchEpisode:"general.buttonViewEpisode",browsingThrough:"discord.browseThrough",viewingSettings:"discord.settings",viewingHistory:"amazon.history",viewingList:"netflix.viewList",viewAccount:"general.viewAccount",viewPage:"general.viewPage"},await presence.getSetting("lang").catch((()=>"en"))),browsingTimestamp=Math.floor(Date.now()/1e3);let strings,oldLang=null;function isInViewport(e){const t=e.getBoundingClientRect();return t.top>=0&&t.left>=0&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&t.right<=(window.innerWidth||document.documentElement.clientWidth)}presence.on("UpdateData",(async()=>{const[e,t,n,i,s]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("buttons"),presence.getSetting("searchQuery"),presence.getSetting("logo"),presence.getSetting("cover")]);oldLang===e&&strings||(oldLang=e,strings=await getStrings());const a={largeImageKey:["https://cdn.rcd.gg/PreMiD/websites/I/iQIYI/assets/1.png","https://cdn.rcd.gg/PreMiD/websites/I/iQIYI/assets/0.png"][i],details:strings.browse,smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/search.png",startTimestamp:browsingTimestamp};if("/"===document.location.pathname)a.details=strings.browsingThrough,a.state=Object.values(document.querySelectorAll(".row-title")).find(isInViewport)?.textContent||"Home page";else if(document.location.pathname.includes("/play")||document.location.pathname.includes("/intl-common/")){const e={title:(document.querySelector("h1 > a > span > span")||document.querySelector("title"))?.textContent?.trim(),ep:(document.querySelector("h1")||document.querySelector(".topice-source-list-item.item-active"))?.textContent.replace(document.querySelector("h1 a")?.textContent||"","")},n=JSON.parse(document.querySelectorAll('script[type="application/ld+json"]')[0]?.textContent||"{}")[0]?.thumbnailUrl?.[0]?.replace(/[0-9]{3}_[0-9]{3}/,"1024_1024"),i=JSON.parse(document.querySelectorAll('script[type="application/ld+json"]')[1]?.textContent||"{}")[0]?.itemListElement.map((e=>`${e.item.name.toLowerCase()} ${e.item["@id"]}`)).join(" ")??"",r=document.querySelector("video"),o=i.includes("movie"),c=i.includes("variety-show"),l=document.location.pathname.includes("/intl-common/"),g=document.querySelector(".iqp-player-g.iqp-player .iqp-tip-stream .iqp-txt-vip")?.textContent,d=document.querySelector("div.broken-line")?.nextSibling?.nextSibling?.nextSibling?.textContent?.match(/[1-9][0-9]?[0-9]?/g),p=l?e.ep.match(/([1-9][0-9]?[0-9]? ?\([1-9][0-9]?\))/g):e.ep.match(/[1-9][0-9]?[0-9]?/g),m=d&&p&&!c&&!l?parseInt(p[0],10)>parseInt(d[0],10):e.ep.toLowerCase().includes("preview");e.ep||c||!o||(e.ep="Movie"),l&&(e.ep=p?.length?`${strings.episode} ${p[0].match(/.+?(?=\()/g)[0]} ${p[0].includes("(")?`- ${p[0].match(/(\([1-9][0-9]?\))/g)[0]}`:"Variety show"}`:"Variety show",[e.title]=e.title.match(/.+?(?=\s{2})/g)||[null]),c&&!l&&(e.ep="Variety show"),c||l||o||!p?c||l||o||(e.ep="Highlight"):e.ep=`${strings.episode} ${p[0]}`,g&&!m&&(e.ep=`${e.ep} (Trial)`),r&&!Number.isNaN(Number(r.duration))?(m&&!o?e.ep=`${e.ep} preview`:r.duration<270&&!o&&!m&&!g&&(e.ep="Highlight"),a.details=e.title,a.state=e.ep,s&&n&&(a.largeImageKey=n),a.smallImageKey=r.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",a.smallImageText=r.paused?strings.pause:strings.play,[a.startTimestamp,a.endTimestamp]=presence.getTimestampsfromMedia(r),t?a.buttons=[{label:c?strings.watchVideo:o?strings.watchMovie:strings.watchEpisode,url:`https://www.iq.com/play/${document.URL.split("?")[0].split("/")[4]}`}]:delete a.buttons,r.paused&&(delete a.startTimestamp,delete a.endTimestamp)):e.title&&(a.details="Looking at:",a.state=e.title)}else if(document.location.pathname.includes("/search")){const e=document.querySelector("div.has-result")?.textContent.match(/[0-9][0-9]?[0-9]?[0-9]?/)[0];a.details=`${strings.searchFor} ${n?decodeURI(new URLSearchParams(document.location.search).get("query")):"( Hidden )"}`,a.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",a.state=e?`${e} matching ${parseInt(e,10)>1?"results":"result"}`:"No matching result"}else if(document.location.pathname.includes("/personal"))switch(new URLSearchParams(document.location.search).get("type")){case"settings":a.details=strings.viewingSettings;break;case"history":a.details=strings.viewingHistory;break;case"favorite":a.details=strings.viewingList;break;case"translation":a.details="Viewing their subtitle translation",a.state=`All: ${document.querySelector("div.trans-contributions-detail > span:nth-child(1) > i")?.textContent} • Passed: ${document.querySelector("div.trans-contributions-detail > span:nth-child(2) > i")?.textContent} • Adopted: ${document.querySelector("div.trans-contributions-detail > span:nth-child(3) > i")?.textContent}`;break;default:a.details=strings.viewAccount}else document.location.pathname.includes("/vip/")&&(a.details=strings.viewPage,a.state="VIP membership");presence.setActivity(a)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;