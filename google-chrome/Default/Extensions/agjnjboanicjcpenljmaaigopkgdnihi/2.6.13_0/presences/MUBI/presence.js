var __webpack_exports__={};const presence=new Presence({clientId:"1044942179958804552"}),browsingStamp=Math.floor(Date.now()/1e3);async function getStrings(){return presence.getStrings({play:"general.playing",paused:"general.paused",browse:"general.browsing",buttonWatchVideo:"general.buttonWatchVideo",viewCategory:"general.viewCategory",search:"general.searchFor"},await presence.getSetting("lang").catch((()=>"en")))}const unused_variable=(e,t)=>e+t;unused_variable(1,2);let strings,oldLang=null;presence.on("UpdateData",(async()=>{const e={startTimestamp:browsingStamp,largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/MUBI/assets/logo.png"},{href:t,pathname:s}=document.location,[r,n,a,i,o]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("covers"),presence.getSetting("viewState")]),c=document.querySelectorAll('input[name="query"]')[1];if(oldLang===r&&strings||(oldLang=r,strings=await getStrings()),n)return e.details=strings.browse,void presence.setActivity(e);if(c?.value||s.includes("/search/"))return e.details=`${strings.search} ${""!==c.value?c.value:t.split("=")[1]}`,e.state=`In ${document.querySelector('.css-1ws58ev.e175rd72"]')?.textContent.replace(/[0-9]*,*[.]*/gm,"")?.toLowerCase()??"All categories"}`,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",void presence.setActivity(e);switch(!0){case s.includes("showing"):case""===s:e.details="Viewing the home page";break;case s.includes("specials"):e.buttons=[{label:"Browse",url:t}],e.details=`Browsing ${document.querySelector(".css-9ziruj.e1cgaodc1")?.textContent??"specials"}`;break;case s.includes("notebook"):document.querySelector(".css-dve9fb.earvnqh7")?(e.details="Reading notebook interview about:",e.state=document.querySelector('[class="css-dve9fb earvnqh7"]')?.textContent):e.details="Reading all notebook interviews",e.buttons=[{label:"Read Notebook Interview",url:t}];break;case s.includes("/users/"):e.details=`Viewing ${document.querySelector('[data-cy="profile-name"]')?.textContent}'s Profile`,e.largeImageKey=document.querySelector('[data-cy="avatar-image-container"]')?.querySelector("img")?.getAttribute("src")??"https://cdn.rcd.gg/PreMiD/websites/M/MUBI/assets/logo.png";break;case s.includes("films"):case s.includes("shows"):{const s=document.querySelector("video"),r=document.querySelector('[itemprop="name"]')?.textContent,n=JSON.parse(document.querySelector("#__NEXT_DATA__")?.textContent)?.props?.initialProps?.pageProps?.initFilm;s?(delete e.startTimestamp,e.details=document.querySelector("__next-route-announcer__")?.textContent?.split("|")[0]??document.querySelector("title")?.textContent?.split("|")[0],s.duration&&!s.paused&&([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(s)),e.largeImageKey=document.querySelector("#__NEXT_DATA__")?.textContent?.match(/https:\/\/images[.]mubicdn[.]net\/images\/(film|show)\/[0-9]*\/cache-[0-9]*-[0-9]*\/image-w1280[.]jpg/)?.at(0)??"https://cdn.rcd.gg/PreMiD/websites/M/MUBI/assets/logo.png",e.smallImageKey=s.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=s.paused?strings.paused:strings.play,e.buttons=[{label:strings.buttonWatchVideo,url:t}]):(e.details=`${r.charAt(0)}${r.slice(1).toLowerCase()}`,e.largeImageKey=document.querySelector('[property="og:image"]')?.getAttribute("content"),e.state=o.replace("%tags%",n?.genres?.toString()?.replace(/,/gm,", ")).replace("%director%",1===n?.directors?.length?n?.directors?.[0]?.name:n?.directors?.map((e=>e?.name))?.join(", ")).replace("%locationAndDate%",1===n?.historic_countries?.length?`${n?.historic_countries}, ${n?.year}`:`${n?.historic_countries?.join(", ")}, ${n?.year}`).replace("%minutes%",`${n?.duration??document.querySelector('[itemprop="duration"]')?.textContent} minutes long`),e.buttons=[{label:"View Content",url:t}]);break}case s.includes("film"):e.buttons=[{label:"Browse",url:t}],e.details="Browsing movies";break;case s.includes("cast"):e.details="Viewing cast member",e.state=document.querySelector('[property="og:title"]')?.content,e.largeImageKey=document.querySelector('[data-testid="resp-img-src"] > img')?.getAttribute("src");break;default:{const t=document.querySelector(".css-1dccbe3.ej6uv270");t?.textContent?e.details=`Browsing ${t.textContent}`:document.querySelector(".css-1ljf7si.eugzkiw0")?.textContent?e.details=`Viewing ${document.querySelector(".css-1ljf7si.eugzkiw0")?.textContent} settings`:e.details="Browsing...";break}}i||"https://cdn.rcd.gg/PreMiD/websites/M/MUBI/assets/logo.png"===e.largeImageKey||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/M/MUBI/assets/logo.png"),!a&&e.buttons&&delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;