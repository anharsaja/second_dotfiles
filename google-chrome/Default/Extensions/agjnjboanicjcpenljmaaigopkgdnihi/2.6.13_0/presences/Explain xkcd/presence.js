var __webpack_exports__={};const presence=new Presence({clientId:"956341194131116072"}),browsingTimestamp=Math.floor(Date.now()/1e3);function getComicNumber(){return document.querySelector("table td li:nth-of-type(3)").textContent.match(/\d+(?=\s\()/)[0]}function getComicName(){return document.querySelector("table tr:nth-of-type(2)").textContent}function getTitleText(){let t=document.querySelector(".image + br + span").textContent.substring(12);return t.length>127&&(t=`${t.substring(0,124)}...`),t}presence.on("UpdateData",(()=>{const t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/E/Explain%20xkcd/assets/logo.png",startTimestamp:browsingTimestamp},e=window.location.pathname.split("/wiki/index.php/")[1]??"";if("Main_Page"===e)t.details="Viewing the main page",t.state=`Comic #${getComicNumber()}: ${getComicName()}`,t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/E/Explain%20xkcd/assets/0.png",t.smallImageText=getTitleText();else if(/^\d+:_\w+$/.test(e))t.details="Viewing a comic explanation",t.state=`Comic #${getComicNumber()}: ${getComicName()}`,t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/E/Explain%20xkcd/assets/0.png",t.smallImageText=getTitleText();else if(e.startsWith("User:"))t.details="Viewing a user page",t.state=`User: ${e.substring(5)}`;else if(e.startsWith("Special:Contributions/")||""===e&&/^\?.*title=Special%3AContributions/.test(location.search))t.details="Viewing a user's contributions",t.state=`User: ${document.querySelector("#contentSub > a").textContent}`;else if(e.startsWith("User_talk:"))t.details="Viewing a user's talk page",t.state=`User: ${e.substring(10)}`;else if(""===e&&/^\?.*action=edit/.test(location.search)){const e=document.querySelector("#firstHeading").textContent;e.startsWith("Editing")?(t.details="Editing a page",t.state=e.substring(8)):e.startsWith("Creating")?(t.details="Creating a page",t.state=e.substring(9)):(t.details="Viewing a page's source",t.state=e.substring(16))}else if(""===e&&/^\?.*action=history/.test(location.search)){const e=document.querySelector("#firstHeading").textContent;t.details="Viewing a page's history",t.state=e.substring(21,e.length-1)}else e.startsWith("Talk:")?(t.details="Viewing a talk page",t.state=document.querySelector("#firstHeading").textContent.substring(5)):e.startsWith("Category:")?(t.details="Viewing a category",t.state=document.querySelector("#firstHeading").textContent.substring(9)):""===e&&/^\?.*search=/.test(location.search)?(t.details="Searching Explain xkcd",t.state=document.querySelector("#searchText > input").value):(t.details="Viewing a page",t.state=document.querySelector("#firstHeading").textContent);t.details?presence.setActivity(t):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;