var __webpack_exports__={};const presence=new Presence({clientId:"840489095767261194"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{let e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/0-9/000webhost/assets/logo.png",startTimestamp:browsingTimestamp};const{href:t,pathname:s}=document.location,[a,i]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("buttons")]),n=document.querySelector(".current-website");switch(!0){case"/"===s:e.details="Viewing the Homepage";break;case s.includes("/forum"):switch(!0){case s.includes("/t/"):e.details="Reading forum post:",e.state=document.querySelector("head > title")?.textContent?.replace(`- ${document.querySelector(".fancy-title")?.textContent} - 000webhost forum`,""),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.buttons=[{label:"View Forum Post",url:t}];break;case s.includes("/c/"):e.details="Browsing through forum category:",e.state=document.querySelector(".category-name")?.textContent,e.buttons=[{label:"View Forum Category",url:t}];break;case s.includes("/u/"):e.details=`Viewing ${document.querySelector(".username")?.textContent}'s profile`,e.buttons=[{label:"View Profile",url:t}];break;default:e.details="Browsing through the forum"}break;default:{const t={"/cheap-web-hosting":{details:"Viewing webhosting"},"members/website/list":{details:"Viewing All Websites"},"/members/store":{details:"Viewing the store"},"/build":{details:"Managing website:"},"/domain":{details:"Managing domains for:"},"/files":{details:"Managing files for:"},"/database":{details:"Managing databases for:"},"/email":{details:"Managing emails for:"},"/settings":{details:"Managing settings for:"},"/stats":{details:"Viewing stats for:"},"/security":{details:"Managing security settings for:"},"/cron-jobs":{details:"Managing cron-jobs for:"},"/redirect":{details:"Managing redirects for:"},"/logs":{details:"Viewing logs for:"},"/backup":{details:"Managing backups for:"},"/store":{details:"Viewing the power store"}};for(const[a,i]of Object.entries(t))s.includes(a)&&(e={...e,...i});e.details||(e.details=`Managing ${document.querySelector(".dashboard-sidemenu").shadowRoot.querySelector('[class*="item--active"]')?.textContent} settings for:`)}}!n||a||e.state||(e.state=n.textContent),e.state&&a&&delete e.state,i&&!a||!e.buttons||delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;