var __webpack_exports__={};const presence=new Presence({clientId:"778092541836656712"}),modePair={Arrows:"https://cdn.rcd.gg/PreMiD/websites/B/Bonk.io/assets/0.png","Death Arrows":"https://cdn.rcd.gg/PreMiD/websites/B/Bonk.io/assets/1.png",Grapple:"https://cdn.rcd.gg/PreMiD/websites/B/Bonk.io/assets/3.png"};let gameStartTimestamp=null,ifd=null;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/B/Bonk.io/assets/logo.png"};if(ifd?.id){switch(e.state=ifd.state,ifd.id){case"guestOrAccountContainer":case"guestContainer":case"accountContainer":case"autoLoginContainer":e.details="Logging In",delete e.state;break;case"classic_mid":e.details="Main Menu";break;case"friendsContainer":e.details="Friends List";break;case"skinmanager":e.details="Skin Manager";break;case"skineditorcontainer":e.details="Editing a skin";break;case"quickPlayWindow":e.details="Quick Play Menu";break;case"roomListContainer":e.details="Viewing Room List";break;case"newbonklobby":e.details=`In a lobby - ${ifd.lastGameMode} (${ifd.playerCount} player${1===ifd.playerCount?"":"s"})`,e.smallImageKey=modePair[ifd.lastGameMode]||"https://cdn.rcd.gg/PreMiD/websites/B/Bonk.io/assets/2.png",e.smallImageText=ifd.lastGameMode;break;case"mapeditorcontainer":e.details="Editing a map";break;case"sm_connectingContainer":e.details="Connecting to a game...";break;case"gamerenderer":e.details="In Game",ifd.lastGameMode&&(e.details+=` - ${ifd.lastGameMode}`,e.smallImageKey=modePair[ifd.lastGameMode]||"https://cdn.rcd.gg/PreMiD/websites/B/Bonk.io/assets/2.png",e.smallImageText=ifd.lastGameMode)}"gamerenderer"!==ifd.id||gameStartTimestamp?"gamerenderer"!==ifd.id&&(gameStartTimestamp=null):gameStartTimestamp=Date.now(),gameStartTimestamp&&(e.startTimestamp=gameStartTimestamp)}await presence.getSetting("showName")||delete e.state,e.details?presence.setActivity(e):presence.setActivity()})),presence.on("iFrameData",(e=>{ifd=e}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;