var __webpack_exports__={};(!document.location.pathname.includes("/wiki/")||document.querySelector(".skin-oasis")||(document.querySelector(".skin-fandomdesktop")||document.querySelector(".skin-fandommobile"))&&!document.querySelector(".is-gamepedia"))&&(()=>{const e=new Presence({clientId:"644400074008297512"}),t=Math.floor(Date.now()/1e3);let a=new URL(document.location.href),i=a.pathname.replace(/^\/|\/$/g,"").split("/"),n={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/F/Fandom/assets/logo.png",startTimestamp:t};const o={_function:null,get function(){return this._function},set function(e){this._function=e},get present(){return null!==this._function}},s=e=>a.searchParams.get(e);if((()=>{if(e.info("Running..."),"www.fandom.com"===a.host)switch(i[0]){case"":n.details="On the index page";break;case"signin":n.details="Signing in";break;case"register":n.details="Registering an account";break;case"articles":n.details="Reading an article",n.state=document.querySelector(".article-header__title").textContent;break;case"topics":n.details="Viewing a topic",n.state=document.querySelector(".topic-header__title").firstElementChild.textContent;break;case"video":n.details="Watching a video",delete n.startTimestamp,o.function=()=>{n.state=document.querySelector(".video-page-featured-player__title").textContent;try{"Pause"===document.querySelector(".jw-icon-playback").getAttribute("aria-label")?[n.startTimestamp,n.endTimestamp]=e.getTimestampsfromMedia(document.querySelector(".jw-video")):delete n.endTimestamp}catch(e){delete n.endTimestamp}};break;case"curated":n.details="Viewing a curation",n.state=document.querySelector(".card__title").textContent;break;case"u":n.details="Viewing a profile page",n.state=`${document.querySelector(".profile-info-card__name").textContent} (${document.querySelector(".profile-info-card__username").textContent})`;break;default:switch(n.details="Viewing a page",i[0]){case"explore":n.state="Explore";break;case"about":n.state="About";break;case"carriers":n.state="Carriers";break;case"terms-of-use":n.state="Terms of Use";break;case"privacy-policy":n.state="Privacy Policy";break;case"mediakit":n.state="Media Kit";break;case"local-sitemap":n.state="Local Sitemap"}}else if(i.includes("wiki")){let e,t;const a=()=>s("action")||s("veaction"),r="wiki"===i[0]?"en":i[0],c=()=>decodeURIComponent("index.php"===i[0]?s("title"):"wiki"===i[0]?i.slice(1).join("/"):i.slice(2).join("/").replaceAll("_"," "));try{e=document.querySelector("h1").textContent.trim()}catch(t){e=c()}try{t=document.querySelector("meta[property='og:site_name']").content}catch(e){t=(document.querySelector(".wds-community-header__sitename")||document.querySelector(".fandom-community-header__community-name")||document.querySelector(".wds-community-bar__sitename")).textContent.trim()}const l=()=>({"-2":"Viewing a media","-1":"Viewing a special page",0:"Reading an article",1:"Viewing a talk page",2:"Viewing a user page",3:"Viewing a user talk page",4:"Viewing a project page",5:"Viewing a project talk page",6:"Viewing a file",7:"Viewing a file talk page",8:"Viewing an interface page",9:"Viewing an interface talk page",10:"Viewing a template",11:"Viewing a template talk page",12:"Viewing a help page",13:"Viewing a help talk page",14:"Viewing a category",15:"Viewing a category talk page",100:"Viewing a portal",101:"Viewing a portal talk page",110:"Viewing a forum page",111:"Viewing a forum talk page",420:"Viewing a GeoJson page",421:"Viewing a GeoJson talk page",500:"Viewing a user blog",501:"Viewing a user blog comment",502:"Viewing a blog",503:"Viewing a blog talk page",710:"Viewing a media's subtitles",711:"Viewing a media's subtitles talk page",828:"Viewing a module",829:"Viewing a module talk page",1200:"Viewing a message wall",1201:"Viewing a thread",1202:"Viewing a message wall greeting",2e3:"Viewing a forum board",2001:"Viewing a forum board thread",2002:"Viewing a forum topic"}[[...document.querySelector("body").classList].find((e=>/ns--?\d/.test(e))).slice(3)]||"Viewing a wiki page");"Home"===e?(t=document.querySelector("meta[property='og:title']").content,n.details="On the home page"):document.querySelector(".unified-search__form")?(n.details="Searching for a page",n.state=document.querySelector(".unified-search__input__query").value):"history"===a()?(n.details="Viewing revision history",n.state=c()):s("diff")?(n.details="Viewing difference between revisions",n.state=c()):s("oldid")?(n.details="Viewing an old revision of a page",n.state=c()):"Viewing a user blog"===l()?e?(n.details="Reading a user blog post",n.state=`${e} by ${document.querySelector(".page-header__blog-post-details").firstElementChild.textContent}`):(n.details=l(),n.state=c()):document.querySelector("#ca-ve-edit")||s("veaction")?(n.state=e.toLowerCase()===c().toLowerCase()?`${e}`:`${e} (${c()})`,o.function=()=>{"edit"===a()||"editsource"===a()?n.details="Editing a page":n.details=l()}):"edit"===a()?(n.details=document.querySelector("#ca-edit")?"Editing a page":"Viewing source",n.state=c()):(n.details=l(),n.state=e.toLowerCase()===c().toLowerCase()?`${e}`:`${e} (${c()})`),n.state?n.state+=` | ${t}`:n.state=t,"en"!==r&&(n.state?n.state+=` (${r})`:n.details+=` (${r})`)}else if("f"===i[0]){let e;try{e=document.querySelector("meta[property='og:site_name']").content}catch(t){e=document.querySelector(".wds-community-header__sitename").textContent}o.function=()=>{if(i[1])"p"===i[1]?(n.details="Reading a discussion post",n.state=`${document.querySelector(".post-info__title").textContent} | ${e}`):"u"===i[1]&&(n.details="Viewing a discussion user page",n.state=`${document.querySelector(".user-overview__username").textContent} | ${e}`);else{const e=document.querySelector(".category-filter__dropdown-toggle").textContent;"Categories"===e?n.details="Viewing the discussion page":(n.details="Viewing a discussion category",n.state=e)}n.state?n.state+=` | ${e}`:n.state=e}}})(),o.present){const s={...n};e.on("UpdateData",(async()=>{((e={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/F/Fandom/assets/logo.png",startTimestamp:t})=>{a=new URL(document.location.href),i=a.pathname.replace(/^\/|\/$/g,"").split("/"),n={...e}})(s),o.function(),e.setActivity(n)}))}else e.on("UpdateData",(async()=>{e.setActivity(n)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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c2VuY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaWYgKGRvY3VtZW50LmxvY2F0aW9uLnBhdGhuYW1lLmluY2x1ZGVzKFwiL3dpa2kvXCIpXG4gICAgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNraW4tb2FzaXNcIikgfHxcbiAgICAgICAgKChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNraW4tZmFuZG9tZGVza3RvcFwiKSB8fFxuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5za2luLWZhbmRvbW1vYmlsZVwiKSkgJiZcbiAgICAgICAgICAgICFkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmlzLWdhbWVwZWRpYVwiKSlcbiAgICA6IHRydWUpIHtcbiAgICAoKCkgPT4ge1xuICAgICAgICBjb25zdCBwcmVzZW5jZSA9IG5ldyBQcmVzZW5jZSh7XG4gICAgICAgICAgICBjbGllbnRJZDogXCI2NDQ0MDAwNzQwMDgyOTc1MTJcIixcbiAgICAgICAgfSksIGJyb3dzaW5nVGltZXN0YW1wID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCk7XG4gICAgICAgIGxldCBjdXJyZW50VVJMID0gbmV3IFVSTChkb2N1bWVudC5sb2NhdGlvbi5ocmVmKSwgY3VycmVudFBhdGggPSBjdXJyZW50VVJMLnBhdGhuYW1lLnJlcGxhY2UoL15cXC98XFwvJC9nLCBcIlwiKS5zcGxpdChcIi9cIiksIHByZXNlbmNlRGF0YSA9IHtcbiAgICAgICAgICAgIGRldGFpbHM6IFwiVmlld2luZyBhbiB1bnN1cHBvcnRlZCBwYWdlXCIsXG4gICAgICAgICAgICBsYXJnZUltYWdlS2V5OiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRi9GYW5kb20vYXNzZXRzL2xvZ28ucG5nXCIsXG4gICAgICAgICAgICBzdGFydFRpbWVzdGFtcDogYnJvd3NpbmdUaW1lc3RhbXAsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHVwZGF0ZUNhbGxiYWNrID0ge1xuICAgICAgICAgICAgX2Z1bmN0aW9uOiBudWxsLFxuICAgICAgICAgICAgZ2V0IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9mdW5jdGlvbjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXQgZnVuY3Rpb24ocGFyYW1ldGVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZnVuY3Rpb24gPSBwYXJhbWV0ZXI7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IHByZXNlbnQoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2Z1bmN0aW9uICE9PSBudWxsO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSwgcmVzZXREYXRhID0gKGRlZmF1bHREYXRhID0ge1xuICAgICAgICAgICAgZGV0YWlsczogXCJWaWV3aW5nIGFuIHVuc3VwcG9ydGVkIHBhZ2VcIixcbiAgICAgICAgICAgIGxhcmdlSW1hZ2VLZXk6IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9GL0ZhbmRvbS9hc3NldHMvbG9nby5wbmdcIixcbiAgICAgICAgICAgIHN0YXJ0VGltZXN0YW1wOiBicm93c2luZ1RpbWVzdGFtcCxcbiAgICAgICAgfSkgPT4ge1xuICAgICAgICAgICAgY3VycmVudFVSTCA9IG5ldyBVUkwoZG9jdW1lbnQubG9jYXRpb24uaHJlZik7XG4gICAgICAgICAgICBjdXJyZW50UGF0aCA9IGN1cnJlbnRVUkwucGF0aG5hbWUucmVwbGFjZSgvXlxcL3xcXC8kL2csIFwiXCIpLnNwbGl0KFwiL1wiKTtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YSA9IHsgLi4uZGVmYXVsdERhdGEgfTtcbiAgICAgICAgfSwgZ2V0VVJMUGFyYW0gPSAodXJsUGFyYW0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBjdXJyZW50VVJMLnNlYXJjaFBhcmFtcy5nZXQodXJsUGFyYW0pO1xuICAgICAgICB9O1xuICAgICAgICAoKCkgPT4ge1xuICAgICAgICAgICAgcHJlc2VuY2UuaW5mbyhcIlJ1bm5pbmcuLi5cIik7XG4gICAgICAgICAgICBpZiAoY3VycmVudFVSTC5ob3N0ID09PSBcInd3dy5mYW5kb20uY29tXCIpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGN1cnJlbnRQYXRoWzBdKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIk9uIHRoZSBpbmRleCBwYWdlXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwic2lnbmluXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJTaWduaW5nIGluXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwicmVnaXN0ZXJcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlJlZ2lzdGVyaW5nIGFuIGFjY291bnRcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJhcnRpY2xlc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiUmVhZGluZyBhbiBhcnRpY2xlXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFydGljbGUtaGVhZGVyX190aXRsZVwiKS50ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJ0b3BpY3NcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgYSB0b3BpY1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50b3BpYy1oZWFkZXJfX3RpdGxlXCIpLmZpcnN0RWxlbWVudENoaWxkLnRleHRDb250ZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcInZpZGVvXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJXYXRjaGluZyBhIHZpZGVvXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgcHJlc2VuY2VEYXRhLnN0YXJ0VGltZXN0YW1wO1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlQ2FsbGJhY2suZnVuY3Rpb24gPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi52aWRlby1wYWdlLWZlYXR1cmVkLXBsYXllcl9fdGl0bGVcIikudGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5qdy1pY29uLXBsYXliYWNrXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZ2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbFwiKSA9PT0gXCJQYXVzZVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbcHJlc2VuY2VEYXRhLnN0YXJ0VGltZXN0YW1wLCBwcmVzZW5jZURhdGEuZW5kVGltZXN0YW1wXSA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2UuZ2V0VGltZXN0YW1wc2Zyb21NZWRpYShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmp3LXZpZGVvXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgcHJlc2VuY2VEYXRhLmVuZFRpbWVzdGFtcDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHByZXNlbmNlRGF0YS5lbmRUaW1lc3RhbXA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJjdXJhdGVkXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIGEgY3VyYXRpb25cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKS50ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJ1XCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIGEgcHJvZmlsZSBwYWdlXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBgJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGUtaW5mby1jYXJkX19uYW1lXCIpLnRleHRDb250ZW50fSAoJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGUtaW5mby1jYXJkX191c2VybmFtZVwiKS50ZXh0Q29udGVudH0pYDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIGEgcGFnZVwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChjdXJyZW50UGF0aFswXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJleHBsb3JlXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gXCJFeHBsb3JlXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiYWJvdXRcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBcIkFib3V0XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiY2FycmllcnNcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBcIkNhcnJpZXJzXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwidGVybXMtb2YtdXNlXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gXCJUZXJtcyBvZiBVc2VcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJwcml2YWN5LXBvbGljeVwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IFwiUHJpdmFjeSBQb2xpY3lcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJtZWRpYWtpdFwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IFwiTWVkaWEgS2l0XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwibG9jYWwtc2l0ZW1hcFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBcIkxvY2FsIFNpdGVtYXBcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGN1cnJlbnRQYXRoLmluY2x1ZGVzKFwid2lraVwiKSkge1xuICAgICAgICAgICAgICAgIGxldCB0aXRsZSwgc2l0ZW5hbWU7XG4gICAgICAgICAgICAgICAgY29uc3QgYWN0aW9uUmVzdWx0ID0gKCkgPT4gZ2V0VVJMUGFyYW0oXCJhY3Rpb25cIikgfHwgZ2V0VVJMUGFyYW0oXCJ2ZWFjdGlvblwiKSwgbGFuZyA9IGN1cnJlbnRQYXRoWzBdID09PSBcIndpa2lcIiA/IFwiZW5cIiA6IGN1cnJlbnRQYXRoWzBdLCB0aXRsZUZyb21VUkwgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQoY3VycmVudFBhdGhbMF0gPT09IFwiaW5kZXgucGhwXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gZ2V0VVJMUGFyYW0oXCJ0aXRsZVwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBjdXJyZW50UGF0aFswXSA9PT0gXCJ3aWtpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGN1cnJlbnRQYXRoLnNsaWNlKDEpLmpvaW4oXCIvXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBjdXJyZW50UGF0aC5zbGljZSgyKS5qb2luKFwiL1wiKS5yZXBsYWNlQWxsKFwiX1wiLCBcIiBcIikpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiaDFcIikudGV4dENvbnRlbnQudHJpbSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICB0aXRsZSA9IHRpdGxlRnJvbVVSTCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBzaXRlbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtZXRhW3Byb3BlcnR5PSdvZzpzaXRlX25hbWUnXVwiKS5jb250ZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICBzaXRlbmFtZSA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLndkcy1jb21tdW5pdHktaGVhZGVyX19zaXRlbmFtZVwiKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mYW5kb20tY29tbXVuaXR5LWhlYWRlcl9fY29tbXVuaXR5LW5hbWVcIikgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIud2RzLWNvbW11bml0eS1iYXJfX3NpdGVuYW1lXCIpKS50ZXh0Q29udGVudC50cmltKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IG5hbWVzcGFjZURldGFpbHMgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgXCItMlwiOiBcIlZpZXdpbmcgYSBtZWRpYVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCItMVwiOiBcIlZpZXdpbmcgYSBzcGVjaWFsIHBhZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDA6IFwiUmVhZGluZyBhbiBhcnRpY2xlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAxOiBcIlZpZXdpbmcgYSB0YWxrIHBhZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDI6IFwiVmlld2luZyBhIHVzZXIgcGFnZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgMzogXCJWaWV3aW5nIGEgdXNlciB0YWxrIHBhZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDQ6IFwiVmlld2luZyBhIHByb2plY3QgcGFnZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgNTogXCJWaWV3aW5nIGEgcHJvamVjdCB0YWxrIHBhZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDY6IFwiVmlld2luZyBhIGZpbGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDc6IFwiVmlld2luZyBhIGZpbGUgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICA4OiBcIlZpZXdpbmcgYW4gaW50ZXJmYWNlIHBhZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDk6IFwiVmlld2luZyBhbiBpbnRlcmZhY2UgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAxMDogXCJWaWV3aW5nIGEgdGVtcGxhdGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDExOiBcIlZpZXdpbmcgYSB0ZW1wbGF0ZSB0YWxrIHBhZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDEyOiBcIlZpZXdpbmcgYSBoZWxwIHBhZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDEzOiBcIlZpZXdpbmcgYSBoZWxwIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgMTQ6IFwiVmlld2luZyBhIGNhdGVnb3J5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAxNTogXCJWaWV3aW5nIGEgY2F0ZWdvcnkgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAxMDA6IFwiVmlld2luZyBhIHBvcnRhbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgMTAxOiBcIlZpZXdpbmcgYSBwb3J0YWwgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAxMTA6IFwiVmlld2luZyBhIGZvcnVtIHBhZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDExMTogXCJWaWV3aW5nIGEgZm9ydW0gdGFsayBwYWdlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICA0MjA6IFwiVmlld2luZyBhIEdlb0pzb24gcGFnZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgNDIxOiBcIlZpZXdpbmcgYSBHZW9Kc29uIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgNTAwOiBcIlZpZXdpbmcgYSB1c2VyIGJsb2dcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDUwMTogXCJWaWV3aW5nIGEgdXNlciBibG9nIGNvbW1lbnRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDUwMjogXCJWaWV3aW5nIGEgYmxvZ1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgNTAzOiBcIlZpZXdpbmcgYSBibG9nIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgNzEwOiBcIlZpZXdpbmcgYSBtZWRpYSdzIHN1YnRpdGxlc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgNzExOiBcIlZpZXdpbmcgYSBtZWRpYSdzIHN1YnRpdGxlcyB0YWxrIHBhZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDgyODogXCJWaWV3aW5nIGEgbW9kdWxlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICA4Mjk6IFwiVmlld2luZyBhIG1vZHVsZSB0YWxrIHBhZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDEyMDA6IFwiVmlld2luZyBhIG1lc3NhZ2Ugd2FsbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgMTIwMTogXCJWaWV3aW5nIGEgdGhyZWFkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAxMjAyOiBcIlZpZXdpbmcgYSBtZXNzYWdlIHdhbGwgZ3JlZXRpbmdcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDIwMDA6IFwiVmlld2luZyBhIGZvcnVtIGJvYXJkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAyMDAxOiBcIlZpZXdpbmcgYSBmb3J1bSBib2FyZCB0aHJlYWRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIDIwMDI6IFwiVmlld2luZyBhIGZvcnVtIHRvcGljXCIsXG4gICAgICAgICAgICAgICAgICAgIH1bWy4uLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpLmNsYXNzTGlzdF1cbiAgICAgICAgICAgICAgICAgICAgICAgIC5maW5kKHYgPT4gL25zLS0/XFxkLy50ZXN0KHYpKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnNsaWNlKDMpXSB8fCBcIlZpZXdpbmcgYSB3aWtpIHBhZ2VcIik7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZiAodGl0bGUgPT09IFwiSG9tZVwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHNpdGVuYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIm1ldGFbcHJvcGVydHk9J29nOnRpdGxlJ11cIikuY29udGVudDtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIk9uIHRoZSBob21lIHBhZ2VcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51bmlmaWVkLXNlYXJjaF9fZm9ybVwiKSkge1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiU2VhcmNoaW5nIGZvciBhIHBhZ2VcIjtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51bmlmaWVkLXNlYXJjaF9faW5wdXRfX3F1ZXJ5XCIpLnZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChhY3Rpb25SZXN1bHQoKSA9PT0gXCJoaXN0b3J5XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgcmV2aXNpb24gaGlzdG9yeVwiO1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSB0aXRsZUZyb21VUkwoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZ2V0VVJMUGFyYW0oXCJkaWZmXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIGRpZmZlcmVuY2UgYmV0d2VlbiByZXZpc2lvbnNcIjtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gdGl0bGVGcm9tVVJMKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGdldFVSTFBhcmFtKFwib2xkaWRcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgYW4gb2xkIHJldmlzaW9uIG9mIGEgcGFnZVwiO1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSB0aXRsZUZyb21VUkwoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAobmFtZXNwYWNlRGV0YWlscygpID09PSBcIlZpZXdpbmcgYSB1c2VyIGJsb2dcIikge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGl0bGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJSZWFkaW5nIGEgdXNlciBibG9nIHBvc3RcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke3RpdGxlfSBieSAke2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGFnZS1oZWFkZXJfX2Jsb2ctcG9zdC1kZXRhaWxzXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpcnN0RWxlbWVudENoaWxkLnRleHRDb250ZW50fWA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IG5hbWVzcGFjZURldGFpbHMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IHRpdGxlRnJvbVVSTCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2EtdmUtZWRpdFwiKSB8fFxuICAgICAgICAgICAgICAgICAgICBnZXRVUkxQYXJhbShcInZlYWN0aW9uXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke3RpdGxlLnRvTG93ZXJDYXNlKCkgPT09IHRpdGxlRnJvbVVSTCgpLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgICAgICAgICAgICAgID8gYCR7dGl0bGV9YFxuICAgICAgICAgICAgICAgICAgICAgICAgOiBgJHt0aXRsZX0gKCR7dGl0bGVGcm9tVVJMKCl9KWB9YDtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlQ2FsbGJhY2suZnVuY3Rpb24gPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aW9uUmVzdWx0KCkgPT09IFwiZWRpdFwiIHx8IGFjdGlvblJlc3VsdCgpID09PSBcImVkaXRzb3VyY2VcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiRWRpdGluZyBhIHBhZ2VcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IG5hbWVzcGFjZURldGFpbHMoKTtcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoYWN0aW9uUmVzdWx0KCkgPT09IFwiZWRpdFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYS1lZGl0XCIpXG4gICAgICAgICAgICAgICAgICAgICAgICA/IFwiRWRpdGluZyBhIHBhZ2VcIlxuICAgICAgICAgICAgICAgICAgICAgICAgOiBcIlZpZXdpbmcgc291cmNlXCI7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IHRpdGxlRnJvbVVSTCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBuYW1lc3BhY2VEZXRhaWxzKCk7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke3RpdGxlLnRvTG93ZXJDYXNlKCkgPT09IHRpdGxlRnJvbVVSTCgpLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgICAgICAgICAgICAgID8gYCR7dGl0bGV9YFxuICAgICAgICAgICAgICAgICAgICAgICAgOiBgJHt0aXRsZX0gKCR7dGl0bGVGcm9tVVJMKCl9KWB9YDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHByZXNlbmNlRGF0YS5zdGF0ZSlcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlICs9IGAgfCAke3NpdGVuYW1lfWA7XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBzaXRlbmFtZTtcbiAgICAgICAgICAgICAgICBpZiAobGFuZyAhPT0gXCJlblwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwcmVzZW5jZURhdGEuc3RhdGUpXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgKz0gYCAoJHtsYW5nfSlgO1xuICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyArPSBgICgke2xhbmd9KWA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY3VycmVudFBhdGhbMF0gPT09IFwiZlwiKSB7XG4gICAgICAgICAgICAgICAgbGV0IHNpdGVuYW1lO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHNpdGVuYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIm1ldGFbcHJvcGVydHk9J29nOnNpdGVfbmFtZSddXCIpLmNvbnRlbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHNpdGVuYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi53ZHMtY29tbXVuaXR5LWhlYWRlcl9fc2l0ZW5hbWVcIikudGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHVwZGF0ZUNhbGxiYWNrLmZ1bmN0aW9uID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWN1cnJlbnRQYXRoWzFdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjYXRlZ29yeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2F0ZWdvcnktZmlsdGVyX19kcm9wZG93bi10b2dnbGVcIikudGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2F0ZWdvcnkgPT09IFwiQ2F0ZWdvcmllc1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHRoZSBkaXNjdXNzaW9uIHBhZ2VcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIGEgZGlzY3Vzc2lvbiBjYXRlZ29yeVwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGNhdGVnb3J5O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGN1cnJlbnRQYXRoWzFdID09PSBcInBcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlJlYWRpbmcgYSBkaXNjdXNzaW9uIHBvc3RcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9zdC1pbmZvX190aXRsZVwiKS50ZXh0Q29udGVudH0gfCAke3NpdGVuYW1lfWA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoY3VycmVudFBhdGhbMV0gPT09IFwidVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBhIGRpc2N1c3Npb24gdXNlciBwYWdlXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBgJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnVzZXItb3ZlcnZpZXdfX3VzZXJuYW1lXCIpLnRleHRDb250ZW50fSB8ICR7c2l0ZW5hbWV9YDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAocHJlc2VuY2VEYXRhLnN0YXRlKVxuICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlICs9IGAgfCAke3NpdGVuYW1lfWA7XG4gICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IHNpdGVuYW1lO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKCk7XG4gICAgICAgIGlmICh1cGRhdGVDYWxsYmFjay5wcmVzZW50KSB7XG4gICAgICAgICAgICBjb25zdCBkZWZhdWx0RGF0YSA9IHsgLi4ucHJlc2VuY2VEYXRhIH07XG4gICAgICAgICAgICBwcmVzZW5jZS5vbihcIlVwZGF0ZURhdGFcIiwgYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc2V0RGF0YShkZWZhdWx0RGF0YSk7XG4gICAgICAgICAgICAgICAgdXBkYXRlQ2FsbGJhY2suZnVuY3Rpb24oKTtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZS5zZXRBY3Rpdml0eShwcmVzZW5jZURhdGEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwcmVzZW5jZS5vbihcIlVwZGF0ZURhdGFcIiwgYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHByZXNlbmNlLnNldEFjdGl2aXR5KHByZXNlbmNlRGF0YSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljSEpsYzJWdVkyVXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lKd2NtVnpaVzVqWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkhRU3hKUVVORExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJReXhSUVVGUkxFTkJRVU03U1VGRE5VTXNRMEZCUXl4RFFVRkRMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zWVVGQllTeERRVUZETzFGQlEzSkRMRU5CUVVNc1EwRkJReXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEhGQ1FVRnhRaXhEUVVGRE8xbEJReTlETEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc2IwSkJRVzlDTEVOQlFVTXNRMEZCUXp0WlFVTTNReXhEUVVGRExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNaVUZCWlN4RFFVRkRMRU5CUVVNN1NVRkRNME1zUTBGQlF5eERRVUZETEVsQlFVa3NSVUZEVGp0SlFVTkVMRU5CUVVNc1IwRkJVeXhGUVVGRk8xRkJRMWdzVFVGQlRTeFJRVUZSTEVkQlFVY3NTVUZCU1N4UlFVRlJMRU5CUVVNN1dVRkROVUlzVVVGQlVTeEZRVUZGTEc5Q1FVRnZRanRUUVVNNVFpeERRVUZETEVWQlEwWXNhVUpCUVdsQ0xFZEJRVWNzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhGUVVGRkxFZEJRVWNzU1VGQlNTeERRVUZETEVOQlFVTTdVVUZEYmtRc1NVRkJTU3hWUVVGVkxFZEJRVWNzU1VGQlNTeEhRVUZITEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGREwwTXNWMEZCVnl4SFFVRkhMRlZCUVZVc1EwRkJReXhSUVVGUkxFTkJRVU1zVDBGQlR5eERRVUZETEZWQlFWVXNSVUZCUlN4RlFVRkZMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlEzQkZMRmxCUVZrc1IwRkJhVUk3V1VGRE5VSXNUMEZCVHl4RlFVRkZMRFpDUVVFMlFqdFpRVU4wUXl4aFFVRmhMQ3RFUVVGaE8xbEJRekZDTEdOQlFXTXNSVUZCUlN4cFFrRkJhVUk3VTBGRGFrTXNRMEZCUXp0UlFVTklMRTFCUVUwc1kwRkJZeXhIUVVGSE8xbEJRM0pDTEZOQlFWTXNSVUZCUlN4SlFVRnJRanRaUVVNM1FpeEpRVUZKTEZGQlFWRTdaMEpCUTFnc1QwRkJUeXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETzFsQlEzWkNMRU5CUVVNN1dVRkRSQ3hKUVVGSkxGRkJRVkVzUTBGQlF5eFRRVUZUTzJkQ1FVTnlRaXhKUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEZOQlFWTXNRMEZCUXp0WlFVTTFRaXhEUVVGRE8xbEJRMFFzU1VGQlNTeFBRVUZQTzJkQ1FVTldMRTlCUVU4c1NVRkJTU3hEUVVGRExGTkJRVk1zUzBGQlN5eEpRVUZKTEVOQlFVTTdXVUZEYUVNc1EwRkJRenRUUVVORUxFVkJTVVFzVTBGQlV5eEhRVUZITEVOQlExZ3NZMEZCTkVJN1dVRkRNMElzVDBGQlR5eEZRVUZGTERaQ1FVRTJRanRaUVVOMFF5eGhRVUZoTEN0RVFVRmhPMWxCUXpGQ0xHTkJRV01zUlVGQlJTeHBRa0ZCYVVJN1UwRkRha01zUlVGRFRTeEZRVUZGTzFsQlExUXNWVUZCVlN4SFFVRkhMRWxCUVVrc1IwRkJSeXhEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1dVRkROME1zVjBGQlZ5eEhRVUZITEZWQlFWVXNRMEZCUXl4UlFVRlJMRU5CUVVNc1QwRkJUeXhEUVVGRExGVkJRVlVzUlVGQlJTeEZRVUZGTEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU03V1VGRGNrVXNXVUZCV1N4SFFVRkhMRVZCUVVVc1IwRkJSeXhYUVVGWExFVkJRVVVzUTBGQlF6dFJRVU51UXl4RFFVRkRMRVZCUzBRc1YwRkJWeXhIUVVGSExFTkJRVU1zVVVGQlowSXNSVUZCVlN4RlFVRkZPMWxCUXpGRExFOUJRVThzVlVGQlZTeERRVUZETEZsQlFWa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU03VVVGRE9VTXNRMEZCUXl4RFFVRkRPMUZCUlVnc1EwRkJReXhIUVVGVExFVkJRVVU3V1VGRFdDeFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRmxCUVZrc1EwRkJReXhEUVVGRE8xbEJSVFZDTEVsQlFVa3NWVUZCVlN4RFFVRkRMRWxCUVVrc1MwRkJTeXhuUWtGQlowSXNSVUZCUlR0blFrRlJla01zVVVGQlVTeFhRVUZYTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVN2IwSkJRM1pDTEV0QlFVc3NSVUZCUlN4RFFVRkRMRU5CUVVNN2QwSkJRMUlzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4dFFrRkJiVUlzUTBGQlF6dDNRa0ZETTBNc1RVRkJUVHR4UWtGRFRqdHZRa0ZEUkN4TFFVRkxMRkZCUVZFc1EwRkJReXhEUVVGRE8zZENRVU5rTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1dVRkJXU3hEUVVGRE8zZENRVU53UXl4TlFVRk5PM0ZDUVVOT08yOUNRVU5FTEV0QlFVc3NWVUZCVlN4RFFVRkRMRU5CUVVNN2QwSkJRMmhDTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc2QwSkJRWGRDTEVOQlFVTTdkMEpCUTJoRUxFMUJRVTA3Y1VKQlEwNDdiMEpCUTBRc1MwRkJTeXhWUVVGVkxFTkJRVU1zUTBGQlF6dDNRa0ZEYUVJc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eHZRa0ZCYjBJc1EwRkJRenQzUWtGRE5VTXNXVUZCV1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVU14UXl4M1FrRkJkMElzUTBGRGVFSXNRMEZCUXl4WFFVRlhMRU5CUVVNN2QwSkJSV1FzVFVGQlRUdHhRa0ZEVGp0dlFrRkRSQ3hMUVVGTExGRkJRVkVzUTBGQlF5eERRVUZETzNkQ1FVTmtMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzYVVKQlFXbENMRU5CUVVNN2QwSkJRM3BETEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGRE1VTXNjMEpCUVhOQ0xFTkJRM1JDTEVOQlFVTXNhVUpCUVdsQ0xFTkJRVU1zVjBGQlZ5eERRVUZETzNkQ1FVVm9ReXhOUVVGTk8zRkNRVU5PTzI5Q1FVTkVMRXRCUVVzc1QwRkJUeXhEUVVGRExFTkJRVU03ZDBKQlEySXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhyUWtGQmEwSXNRMEZCUXp0M1FrRkRNVU1zVDBGQlR5eFpRVUZaTEVOQlFVTXNZMEZCWXl4RFFVRkRPM2RDUVVOdVF5eGpRVUZqTEVOQlFVTXNVVUZCVVN4SFFVRkhMRWRCUVZNc1JVRkJSVHMwUWtGRGNFTXNXVUZCV1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVU14UXl4dlEwRkJiME1zUTBGRGNFTXNRMEZCUXl4WFFVRlhMRU5CUVVNN05FSkJRMlFzU1VGQlNUdG5RMEZEU0N4SlFVTkRMRkZCUVZFN2NVTkJRMDRzWVVGQllTeERRVUZETEcxQ1FVRnRRaXhEUVVGRE8zRkRRVU5zUXl4WlFVRlpMRU5CUVVNc1dVRkJXU3hEUVVGRExFdEJRVXNzVDBGQlR5eEZRVU4yUXp0dlEwRkRSQ3hEUVVGRExGbEJRVmtzUTBGQlF5eGpRVUZqTEVWQlFVVXNXVUZCV1N4RFFVRkRMRmxCUVZrc1EwRkJRenQzUTBGRGRrUXNVVUZCVVN4RFFVRkRMSE5DUVVGelFpeERRVU01UWl4UlFVRlJMRU5CUVVNc1lVRkJZU3hEUVVGRExGZEJRVmNzUTBGQlF5eERRVU51UXl4RFFVRkRPMmxEUVVOSU96dHZRMEZCVFN4UFFVRlBMRmxCUVZrc1EwRkJReXhaUVVGWkxFTkJRVU03TmtKQlEzaERPelJDUVVGRExFOUJRVThzUTBGQlF5eEZRVUZGTzJkRFFVTllMRTlCUVU4c1dVRkJXU3hEUVVGRExGbEJRVmtzUTBGQlF6czJRa0ZEYWtNN2QwSkJRMFlzUTBGQlF5eERRVUZETzNkQ1FVVkdMRTFCUVUwN2NVSkJRMDQ3YjBKQlEwUXNTMEZCU3l4VFFVRlRMRU5CUVVNc1EwRkJRenQzUWtGRFppeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMRzlDUVVGdlFpeERRVUZETzNkQ1FVTTFReXhaUVVGWkxFTkJRVU1zUzBGQlN6czBRa0ZEYWtJc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGQlF5eGpRVUZqTEVOQlFVTXNRMEZCUXl4WFFVRlhMRU5CUVVNN2QwSkJSWEJFTEUxQlFVMDdjVUpCUTA0N2IwSkJRMFFzUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXp0M1FrRkRWQ3haUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEhkQ1FVRjNRaXhEUVVGRE8zZENRVU5vUkN4WlFVRlpMRU5CUVVNc1MwRkJTeXhIUVVGSExFZEJRM0JDTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc01FSkJRVEJDTEVOQlFVTXNRMEZCUXl4WFFVTndSQ3hMUVVORExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNPRUpCUVRoQ0xFTkJRVU1zUTBGQlF5eFhRVU40UkN4SFFVRkhMRU5CUVVNN2QwSkJSVW9zVFVGQlRUdHhRa0ZEVGp0dlFrRkRSQ3hQUVVGUExFTkJRVU1zUTBGQlF6dDNRa0ZEVWl4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExHZENRVUZuUWl4RFFVRkRPM2RDUVVONFF5eFJRVUZSTEZkQlFWY3NRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSVHMwUWtGRGRrSXNTMEZCU3l4VFFVRlRMRU5CUVVNc1EwRkJRenRuUTBGRFppeFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRk5CUVZNc1EwRkJRenRuUTBGREwwSXNUVUZCVFRzMlFrRkRUanMwUWtGRFJDeExRVUZMTEU5QlFVOHNRMEZCUXl4RFFVRkRPMmREUVVOaUxGbEJRVmtzUTBGQlF5eExRVUZMTEVkQlFVY3NUMEZCVHl4RFFVRkRPMmREUVVNM1FpeE5RVUZOT3paQ1FVTk9PelJDUVVORUxFdEJRVXNzVlVGQlZTeERRVUZETEVOQlFVTTdaME5CUTJoQ0xGbEJRVmtzUTBGQlF5eExRVUZMTEVkQlFVY3NWVUZCVlN4RFFVRkRPMmREUVVOb1F5eE5RVUZOT3paQ1FVTk9PelJDUVVORUxFdEJRVXNzWTBGQll5eERRVUZETEVOQlFVTTdaME5CUTNCQ0xGbEJRVmtzUTBGQlF5eExRVUZMTEVkQlFVY3NZMEZCWXl4RFFVRkRPMmREUVVOd1F5eE5RVUZOT3paQ1FVTk9PelJDUVVORUxFdEJRVXNzWjBKQlFXZENMRU5CUVVNc1EwRkJRenRuUTBGRGRFSXNXVUZCV1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhuUWtGQlowSXNRMEZCUXp0blEwRkRkRU1zVFVGQlRUczJRa0ZEVGpzMFFrRkRSQ3hMUVVGTExGVkJRVlVzUTBGQlF5eERRVUZETzJkRFFVTm9RaXhaUVVGWkxFTkJRVU1zUzBGQlN5eEhRVUZITEZkQlFWY3NRMEZCUXp0blEwRkRha01zVFVGQlRUczJRa0ZEVGpzMFFrRkRSQ3hMUVVGTExHVkJRV1U3WjBOQlEyNUNPMjlEUVVORExGbEJRVmtzUTBGQlF5eExRVUZMTEVkQlFVY3NaVUZCWlN4RFFVRkRPMmxEUVVWeVF6dG5RMEZEUkN4TlFVRk5PM2xDUVVOUU8zRkNRVU5FTzJsQ1FVTkVPMkZCUTBRN2FVSkJRVTBzU1VGQlNTeFhRVUZYTEVOQlFVTXNVVUZCVVN4RFFVRkRMRTFCUVUwc1EwRkJReXhGUVVGRk8yZENRVTE0UXl4SlFVRkpMRXRCUVdFc1JVRkJSU3hSUVVGblFpeERRVUZETzJkQ1FVTndReXhOUVVGTkxGbEJRVmtzUjBGQlJ5eEhRVUZYTEVWQlFVVXNRMEZEYUVNc1YwRkJWeXhEUVVGRExGRkJRVkVzUTBGQlF5eEpRVUZKTEZkQlFWY3NRMEZCUXl4VlFVRlZMRU5CUVVNc1JVRkRha1FzU1VGQlNTeEhRVUZITEZkQlFWY3NRMEZCUXl4RFFVRkRMRU5CUVVNc1MwRkJTeXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRExFTkJRVU1zUTBGQlF5eEZRVU40UkN4WlFVRlpMRWRCUVVjc1IwRkJWeXhGUVVGRk8yOUNRVU16UWl4UFFVRlBMR3RDUVVGclFpeERRVU40UWl4WFFVRlhMRU5CUVVNc1EwRkJReXhEUVVGRExFdEJRVXNzVjBGQlZ6dDNRa0ZETjBJc1EwRkJReXhEUVVGRExGZEJRVmNzUTBGQlF5eFBRVUZQTEVOQlFVTTdkMEpCUTNSQ0xFTkJRVU1zUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXl4RFFVRkRMRXRCUVVzc1RVRkJUVHMwUWtGRE0wSXNRMEZCUXl4RFFVRkRMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJRenMwUWtGRGFFTXNRMEZCUXl4RFFVRkRMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExGVkJRVlVzUTBGQlF5eEhRVUZITEVWQlFVVXNSMEZCUnl4RFFVRkRMRU5CUTNSRUxFTkJRVU03WjBKQlEwZ3NRMEZCUXl4RFFVRkRPMmRDUVVWSUxFbEJRVWs3YjBKQlEwZ3NTMEZCU3l4SFFVRkhMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNWMEZCVnl4RFFVRkRMRWxCUVVrc1JVRkJSU3hEUVVGRE8ybENRVU40UkR0blFrRkJReXhQUVVGUExFTkJRVU1zUlVGQlJUdHZRa0ZEV0N4TFFVRkxMRWRCUVVjc1dVRkJXU3hGUVVGRkxFTkJRVU03YVVKQlEzWkNPMmRDUVVWRUxFbEJRVWs3YjBKQlEwZ3NVVUZCVVN4SFFVTlFMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRM0pDTEN0Q1FVRXJRaXhEUVVWb1F5eERRVUZETEU5QlFVOHNRMEZCUXp0cFFrRkRWanRuUWtGQlF5eFBRVUZQTEVOQlFVTXNSVUZCUlR0dlFrRkRXQ3hSUVVGUkxFZEJRVWNzUTBGRFZpeFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMR2xEUVVGcFF5eERRVUZETzNkQ1FVTjZSQ3hSUVVGUkxFTkJRVU1zWVVGQllTeERRVU55UWl3d1EwRkJNRU1zUTBGRE1VTTdkMEpCUTBRc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGQlF5dzRRa0ZCT0VJc1EwRkJReXhEUVVOMFJDeERRVUZETEZkQlFWY3NRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRwUWtGRGNrSTdaMEpCVFVRc1RVRkJUU3huUWtGQlowSXNSMEZCUnl4SFFVRlhMRVZCUVVVN2IwSkJRM0pETEU5QlFVOHNRMEZEVGp0M1FrRkRReXhKUVVGSkxFVkJRVVVzYVVKQlFXbENPM2RDUVVOMlFpeEpRVUZKTEVWQlFVVXNkMEpCUVhkQ08zZENRVU01UWl4RFFVRkRMRVZCUVVVc2IwSkJRVzlDTzNkQ1FVTjJRaXhEUVVGRExFVkJRVVVzY1VKQlFYRkNPM2RDUVVONFFpeERRVUZETEVWQlFVVXNjVUpCUVhGQ08zZENRVU40UWl4RFFVRkRMRVZCUVVVc01FSkJRVEJDTzNkQ1FVTTNRaXhEUVVGRExFVkJRVVVzZDBKQlFYZENPM2RDUVVNelFpeERRVUZETEVWQlFVVXNOa0pCUVRaQ08zZENRVU5vUXl4RFFVRkRMRVZCUVVVc1owSkJRV2RDTzNkQ1FVTnVRaXhEUVVGRExFVkJRVVVzTUVKQlFUQkNPM2RDUVVNM1FpeERRVUZETEVWQlFVVXNNa0pCUVRKQ08zZENRVU01UWl4RFFVRkRMRVZCUVVVc1owTkJRV2RETzNkQ1FVTnVReXhGUVVGRkxFVkJRVVVzYjBKQlFXOUNPM2RDUVVONFFpeEZRVUZGTEVWQlFVVXNPRUpCUVRoQ08zZENRVU5zUXl4RlFVRkZMRVZCUVVVc2NVSkJRWEZDTzNkQ1FVTjZRaXhGUVVGRkxFVkJRVVVzTUVKQlFUQkNPM2RDUVVNNVFpeEZRVUZGTEVWQlFVVXNiMEpCUVc5Q08zZENRVU40UWl4RlFVRkZMRVZCUVVVc09FSkJRVGhDTzNkQ1FVTnNReXhIUVVGSExFVkJRVVVzYTBKQlFXdENPM2RDUVVOMlFpeEhRVUZITEVWQlFVVXNORUpCUVRSQ08zZENRVU5xUXl4SFFVRkhMRVZCUVVVc2MwSkJRWE5DTzNkQ1FVTXpRaXhIUVVGSExFVkJRVVVzTWtKQlFUSkNPM2RDUVVOb1F5eEhRVUZITEVWQlFVVXNkMEpCUVhkQ08zZENRVU0zUWl4SFFVRkhMRVZCUVVVc05rSkJRVFpDTzNkQ1FVTnNReXhIUVVGSExFVkJRVVVzY1VKQlFYRkNPM2RDUVVNeFFpeEhRVUZITEVWQlFVVXNOa0pCUVRaQ08zZENRVU5zUXl4SFFVRkhMRVZCUVVVc1owSkJRV2RDTzNkQ1FVTnlRaXhIUVVGSExFVkJRVVVzTUVKQlFUQkNPM2RDUVVNdlFpeEhRVUZITEVWQlFVVXNOa0pCUVRaQ08zZENRVU5zUXl4SFFVRkhMRVZCUVVVc2RVTkJRWFZETzNkQ1FVTTFReXhIUVVGSExFVkJRVVVzYTBKQlFXdENPM2RDUVVOMlFpeEhRVUZITEVWQlFVVXNORUpCUVRSQ08zZENRVU5xUXl4SlFVRkpMRVZCUVVVc2QwSkJRWGRDTzNkQ1FVTTVRaXhKUVVGSkxFVkJRVVVzYTBKQlFXdENPM2RDUVVONFFpeEpRVUZKTEVWQlFVVXNhVU5CUVdsRE8zZENRVU4yUXl4SlFVRkpMRVZCUVVVc2RVSkJRWFZDTzNkQ1FVTTNRaXhKUVVGSkxFVkJRVVVzT0VKQlFUaENPM2RDUVVOd1F5eEpRVUZKTEVWQlFVVXNkVUpCUVhWQ08zRkNRVU0zUWl4RFFVTkJMRU5CUVVNc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRMRk5CUVZNc1EwRkJRenQ1UWtGRE0wTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zVTBGQlV5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenQ1UWtGRE5VSXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVOV0xFbEJRVWtzY1VKQlFYRkNMRU5CUXpGQ0xFTkJRVU03WjBKQlEwZ3NRMEZCUXl4RFFVRkRPMmRDUVVWR0xFbEJRVWtzUzBGQlN5eExRVUZMTEUxQlFVMHNSVUZCUlR0dlFrRkRja0lzVVVGQlVTeEhRVU5RTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUTNKQ0xESkNRVUV5UWl4RFFVVTFRaXhEUVVGRExFOUJRVThzUTBGQlF6dHZRa0ZEVml4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExHdENRVUZyUWl4RFFVRkRPMmxDUVVNeFF6dHhRa0ZCVFN4SlFVRkpMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zZFVKQlFYVkNMRU5CUVVNc1JVRkJSVHR2UWtGRE0wUXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXh6UWtGQmMwSXNRMEZCUXp0dlFrRkRPVU1zV1VGQldTeERRVUZETEV0QlFVc3NSMEZEYWtJc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGRGNrSXNLMEpCUVN0Q0xFTkJSV2hETEVOQlFVTXNTMEZCU3l4RFFVRkRPMmxDUVVOU08zRkNRVUZOTEVsQlFVa3NXVUZCV1N4RlFVRkZMRXRCUVVzc1UwRkJVeXhGUVVGRk8yOUNRVU40UXl4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExEQkNRVUV3UWl4RFFVRkRPMjlDUVVOc1JDeFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRmxCUVZrc1JVRkJSU3hEUVVGRE8ybENRVU53UXp0eFFrRkJUU3hKUVVGSkxGZEJRVmNzUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlR0dlFrRkRMMElzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4elEwRkJjME1zUTBGQlF6dHZRa0ZET1VRc1dVRkJXU3hEUVVGRExFdEJRVXNzUjBGQlJ5eFpRVUZaTEVWQlFVVXNRMEZCUXp0cFFrRkRjRU03Y1VKQlFVMHNTVUZCU1N4WFFVRlhMRU5CUVVNc1QwRkJUeXhEUVVGRExFVkJRVVU3YjBKQlEyaERMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzYlVOQlFXMURMRU5CUVVNN2IwSkJRek5FTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1dVRkJXU3hGUVVGRkxFTkJRVU03YVVKQlEzQkRPM0ZDUVVGTkxFbEJRVWtzWjBKQlFXZENMRVZCUVVVc1MwRkJTeXh4UWtGQmNVSXNSVUZCUlR0dlFrRkRlRVFzU1VGQlNTeExRVUZMTEVWQlFVVTdkMEpCUTFZc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5d3dRa0ZCTUVJc1EwRkJRenQzUWtGRGJFUXNXVUZCV1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhIUVVGSExFdEJRVXNzVDBGRE5VSXNVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhwUTBGQmFVTXNRMEZCUXpzMlFrRkRka1FzYVVKQlFXbENMRU5CUVVNc1YwRkRja0lzUlVGQlJTeERRVUZETzNGQ1FVTklPM2xDUVVGTk8zZENRVU5PTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1owSkJRV2RDTEVWQlFVVXNRMEZCUXp0M1FrRkRNVU1zV1VGQldTeERRVUZETEV0QlFVc3NSMEZCUnl4WlFVRlpMRVZCUVVVc1EwRkJRenR4UWtGRGNFTTdhVUpCUTBRN2NVSkJRVTBzU1VGRFRpeFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMR0ZCUVdFc1EwRkJRenR2UWtGRGNrTXNWMEZCVnl4RFFVRkRMRlZCUVZVc1EwRkJReXhGUVVOMFFqdHZRa0ZEUkN4WlFVRlpMRU5CUVVNc1MwRkJTeXhIUVVGSExFZEJRM0JDTEV0QlFVc3NRMEZCUXl4WFFVRlhMRVZCUVVVc1MwRkJTeXhaUVVGWkxFVkJRVVVzUTBGQlF5eFhRVUZYTEVWQlFVVTdkMEpCUTI1RUxFTkJRVU1zUTBGQlF5eEhRVUZITEV0QlFVc3NSVUZCUlR0M1FrRkRXaXhEUVVGRExFTkJRVU1zUjBGQlJ5eExRVUZMTEV0QlFVc3NXVUZCV1N4RlFVRkZMRWRCUXk5Q0xFVkJRVVVzUTBGQlF6dHZRa0ZEU0N4alFVRmpMRU5CUVVNc1VVRkJVU3hIUVVGSExFZEJRVk1zUlVGQlJUdDNRa0ZEY0VNc1NVRkJTU3haUVVGWkxFVkJRVVVzUzBGQlN5eE5RVUZOTEVsQlFVa3NXVUZCV1N4RlFVRkZMRXRCUVVzc1dVRkJXVHMwUWtGREwwUXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhuUWtGQlowSXNRMEZCUXpzN05FSkJRM0JETEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1owSkJRV2RDTEVWQlFVVXNRMEZCUXp0dlFrRkRhRVFzUTBGQlF5eERRVUZETzJsQ1FVTkdPM0ZDUVVGTkxFbEJRVWtzV1VGQldTeEZRVUZGTEV0QlFVc3NUVUZCVFN4RlFVRkZPMjlDUVVOeVF5eFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zVlVGQlZTeERRVUZETzNkQ1FVTjRSQ3hEUVVGRExFTkJRVU1zWjBKQlFXZENPM2RDUVVOc1FpeERRVUZETEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU03YjBKQlEzQkNMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRVWNzV1VGQldTeEZRVUZGTEVOQlFVTTdhVUpCUTNCRE8zRkNRVUZOTzI5Q1FVTk9MRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzWjBKQlFXZENMRVZCUVVVc1EwRkJRenR2UWtGRE1VTXNXVUZCV1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhIUVVOd1FpeExRVUZMTEVOQlFVTXNWMEZCVnl4RlFVRkZMRXRCUVVzc1dVRkJXU3hGUVVGRkxFTkJRVU1zVjBGQlZ5eEZRVUZGTzNkQ1FVTnVSQ3hEUVVGRExFTkJRVU1zUjBGQlJ5eExRVUZMTEVWQlFVVTdkMEpCUTFvc1EwRkJReXhEUVVGRExFZEJRVWNzUzBGQlN5eExRVUZMTEZsQlFWa3NSVUZCUlN4SFFVTXZRaXhGUVVGRkxFTkJRVU03YVVKQlEwZzdaMEpCUlVRc1NVRkJTU3haUVVGWkxFTkJRVU1zUzBGQlN6dHZRa0ZCUlN4WlFVRlpMRU5CUVVNc1MwRkJTeXhKUVVGSkxFMUJRVTBzVVVGQlVTeEZRVUZGTEVOQlFVTTdPMjlDUVVNeFJDeFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRkZCUVZFc1EwRkJRenRuUWtGRmJrTXNTVUZCU1N4SlFVRkpMRXRCUVVzc1NVRkJTU3hGUVVGRk8yOUNRVU5zUWl4SlFVRkpMRmxCUVZrc1EwRkJReXhMUVVGTE8zZENRVUZGTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWxCUVVrc1MwRkJTeXhKUVVGSkxFZEJRVWNzUTBGQlF6czdkMEpCUTNSRUxGbEJRVmtzUTBGQlF5eFBRVUZQTEVsQlFVa3NTMEZCU3l4SlFVRkpMRWRCUVVjc1EwRkJRenRwUWtGRE1VTTdZVUZEUkR0cFFrRkJUU3hKUVVGSkxGZEJRVmNzUTBGQlF5eERRVUZETEVOQlFVTXNTMEZCU3l4SFFVRkhMRVZCUVVVN1owSkJVV3hETEVsQlFVa3NVVUZCWjBJc1EwRkJRenRuUWtGRmNrSXNTVUZCU1R0dlFrRkRTQ3hSUVVGUkxFZEJRMUFzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZEY2tJc0swSkJRU3RDTEVOQlJXaERMRU5CUVVNc1QwRkJUeXhEUVVGRE8ybENRVU5XTzJkQ1FVRkRMRTlCUVU4c1EwRkJReXhGUVVGRk8yOUNRVU5ZTEZGQlFWRXNSMEZCUnl4UlFVRlJMRU5CUVVNc1lVRkJZU3hEUVVOb1F5eHBRMEZCYVVNc1EwRkRha01zUTBGQlF5eFhRVUZYTEVOQlFVTTdhVUpCUTJRN1owSkJSVVFzWTBGQll5eERRVUZETEZGQlFWRXNSMEZCUnl4SFFVRlRMRVZCUVVVN2IwSkJRM0JETEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVU3ZDBKQlEzQkNMRTFCUVUwc1VVRkJVU3hIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlEzUkRMRzFEUVVGdFF5eERRVU51UXl4RFFVRkRMRmRCUVZjc1EwRkJRenQzUWtGRFpDeEpRVUZKTEZGQlFWRXNTMEZCU3l4WlFVRlpPelJDUVVNMVFpeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMRFpDUVVFMlFpeERRVUZET3paQ1FVTnFSRHMwUWtGRFNpeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMQ3RDUVVFclFpeERRVUZET3pSQ1FVTjJSQ3haUVVGWkxFTkJRVU1zUzBGQlN5eEhRVUZITEZGQlFWRXNRMEZCUXp0NVFrRkRPVUk3Y1VKQlEwUTdlVUpCUVUwc1NVRkJTU3hYUVVGWExFTkJRVU1zUTBGQlF5eERRVUZETEV0QlFVc3NSMEZCUnl4RlFVRkZPM2RDUVVOc1F5eFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMREpDUVVFeVFpeERRVUZETzNkQ1FVTnVSQ3haUVVGWkxFTkJRVU1zUzBGQlN5eEhRVUZITEVkQlEzQkNMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zYlVKQlFXMUNMRU5CUVVNc1EwRkJReXhYUVVNM1F5eE5RVUZOTEZGQlFWRXNSVUZCUlN4RFFVRkRPM0ZDUVVOcVFqdDVRa0ZCVFN4SlFVRkpMRmRCUVZjc1EwRkJReXhEUVVGRExFTkJRVU1zUzBGQlN5eEhRVUZITEVWQlFVVTdkMEpCUTJ4RExGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NaME5CUVdkRExFTkJRVU03ZDBKQlEzaEVMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRVWNzUjBGRGNFSXNVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXd3UWtGQk1FSXNRMEZCUXl4RFFVRkRMRmRCUTNCRUxFMUJRVTBzVVVGQlVTeEZRVUZGTEVOQlFVTTdjVUpCUTJwQ08yOUNRVVZFTEVsQlFVa3NXVUZCV1N4RFFVRkRMRXRCUVVzN2QwSkJRVVVzV1VGQldTeERRVUZETEV0QlFVc3NTVUZCU1N4TlFVRk5MRkZCUVZFc1JVRkJSU3hEUVVGRE96dDNRa0ZETVVRc1dVRkJXU3hEUVVGRExFdEJRVXNzUjBGQlJ5eFJRVUZSTEVOQlFVTTdaMEpCUTNCRExFTkJRVU1zUTBGQlF6dGhRVU5HTzFGQlEwWXNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJRenRSUVVWTUxFbEJRVWtzWTBGQll5eERRVUZETEU5QlFVOHNSVUZCUlR0WlFVTXpRaXhOUVVGTkxGZEJRVmNzUjBGQlJ5eEZRVUZGTEVkQlFVY3NXVUZCV1N4RlFVRkZMRU5CUVVNN1dVRkRlRU1zVVVGQlVTeERRVUZETEVWQlFVVXNRMEZCUXl4WlFVRlpMRVZCUVVVc1MwRkJTeXhKUVVGSkxFVkJRVVU3WjBKQlEzQkRMRk5CUVZNc1EwRkJReXhYUVVGWExFTkJRVU1zUTBGQlF6dG5Ra0ZEZGtJc1kwRkJZeXhEUVVGRExGRkJRVkVzUlVGQlJTeERRVUZETzJkQ1FVTXhRaXhSUVVGUkxFTkJRVU1zVjBGQlZ5eERRVUZETEZsQlFWa3NRMEZCUXl4RFFVRkRPMWxCUTNCRExFTkJRVU1zUTBGQlF5eERRVUZETzFOQlEwZzdZVUZCVFR0WlFVTk9MRkZCUVZFc1EwRkJReXhGUVVGRkxFTkJRVU1zV1VGQldTeEZRVUZGTEV0QlFVc3NTVUZCU1N4RlFVRkZPMmRDUVVOd1F5eFJRVUZSTEVOQlFVTXNWMEZCVnl4RFFVRkRMRmxCUVZrc1EwRkJReXhEUVVGRE8xbEJRM0JETEVOQlFVTXNRMEZCUXl4RFFVRkRPMU5CUTBnN1NVRkRSaXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETzBOQlEwd2lmUT09Il0sIm5hbWVzIjpbImRvY3VtZW50IiwibG9jYXRpb24iLCJwYXRobmFtZSIsImluY2x1ZGVzIiwicXVlcnlTZWxlY3RvciIsInByZXNlbmNlIiwiUHJlc2VuY2UiLCJjbGllbnRJZCIsImJyb3dzaW5nVGltZXN0YW1wIiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsIm5vdyIsImN1cnJlbnRVUkwiLCJVUkwiLCJocmVmIiwiY3VycmVudFBhdGgiLCJyZXBsYWNlIiwic3BsaXQiLCJwcmVzZW5jZURhdGEiLCJkZXRhaWxzIiwibGFyZ2VJbWFnZUtleSIsInN0YXJ0VGltZXN0YW1wIiwidXBkYXRlQ2FsbGJhY2siLCJfZnVuY3Rpb24iLCJmdW5jdGlvbiIsInRoaXMiLCJwYXJhbWV0ZXIiLCJwcmVzZW50IiwiZ2V0VVJMUGFyYW0iLCJ1cmxQYXJhbSIsInNlYXJjaFBhcmFtcyIsImdldCIsImluZm8iLCJob3N0Iiwic3RhdGUiLCJ0ZXh0Q29udGVudCIsImZpcnN0RWxlbWVudENoaWxkIiwiZ2V0QXR0cmlidXRlIiwiZW5kVGltZXN0YW1wIiwiZ2V0VGltZXN0YW1wc2Zyb21NZWRpYSIsImUiLCJ0aXRsZSIsInNpdGVuYW1lIiwiYWN0aW9uUmVzdWx0IiwibGFuZyIsInRpdGxlRnJvbVVSTCIsImRlY29kZVVSSUNvbXBvbmVudCIsInNsaWNlIiwiam9pbiIsInJlcGxhY2VBbGwiLCJ0cmltIiwiY29udGVudCIsIm5hbWVzcGFjZURldGFpbHMiLCJjbGFzc0xpc3QiLCJmaW5kIiwidiIsInRlc3QiLCJ2YWx1ZSIsInRvTG93ZXJDYXNlIiwiY2F0ZWdvcnkiLCJkZWZhdWx0RGF0YSIsIm9uIiwiYXN5bmMiLCJyZXNldERhdGEiLCJzZXRBY3Rpdml0eSJdLCJzb3VyY2VSb290IjoiIn0=
undefined;