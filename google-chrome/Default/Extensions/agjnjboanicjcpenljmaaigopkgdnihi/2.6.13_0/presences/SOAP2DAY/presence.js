var __webpack_exports__={};const presence=new Presence({clientId:"828549761376059441"}),{href}=window.location,getAction=()=>href.includes("movielist")?"movielist":href.includes("sportlist")?"sportlist":href.includes("tvlist")?"tvlist":href.includes("Tczo")?"tvshow":href.includes("Mczo")?"movie":href.includes("Sczo")?"sport":href.includes("faq")?"faq":href.includes("Eczo")?"tv":"home",getText=e=>document.querySelector(e).textContent.trim(),getStatus=()=>{const e=document.querySelector("#t3").textContent.trim();return""===e?"Loading":e},constructAction={movielist:"Searching for a movie",sportlist:"Keeping up with sports",tvlist:"Looking for a TV show",tvshow:"Perusing through some episodes",movie:"Watching a movie",sport:"Enjoying some sports",home:"Checking out the home page",faq:"Reading the FAQ",tv:"Relaxing to some TV"};presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/S/SOAP2DAY/assets/logo.png",details:constructAction[getAction()]},t=await presence.getSetting("title");if(!["movie","tv","sport"].includes(getAction()))return e.startTimestamp=Math.floor(Date.now()/1e3),void presence.setActivity(e);t&&(e.details=document.querySelector(".alert > a:nth-child(3)")?.textContent??document.querySelector(".alert").textContent.split(">>")[2].trim()),"Pause"!==getStatus()?([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(document.querySelector("video")),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png"):e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.state=`${getStatus()} | ${"[class~=player-title-bar]",document.querySelector("[class~=player-title-bar]").textContent.trim()}`.replace(`| ${e.details}`,""),presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;