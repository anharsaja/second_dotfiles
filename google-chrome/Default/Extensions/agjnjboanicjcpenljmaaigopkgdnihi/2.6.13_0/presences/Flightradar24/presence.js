var __webpack_exports__={};const presence=new Presence({clientId:"930914836773224498"}),browsingStamp=Math.floor(Date.now()/1e3);let remaining=0,leftTimestamp=0,player={total:"",elapsed:"",isPlaying:!1},video={currentTime:0,duration:0,paused:!0};var OtherAssets;!function(e){e.airborne="https://cdn.rcd.gg/PreMiD/websites/F/Flightradar24/assets/0.png",e.arriving="https://cdn.rcd.gg/PreMiD/websites/F/Flightradar24/assets/1.png",e.departing="https://cdn.rcd.gg/PreMiD/websites/F/Flightradar24/assets/2.png",e.diverting="https://cdn.rcd.gg/PreMiD/websites/F/Flightradar24/assets/3.png",e.onground="https://cdn.rcd.gg/PreMiD/websites/F/Flightradar24/assets/4.png"}(OtherAssets||(OtherAssets={})),presence.on("iFrameData",(e=>{player={total:e.total,elapsed:e.elapsed,isPlaying:e.isPlaying},video={currentTime:e.currentTime,duration:e.duration,paused:e.paused}})),presence.on("UpdateData",(async()=>{const[e,t,a,n]=await Promise.all([presence.getSetting("elapsed"),presence.getSetting("buttons"),presence.getSetting("images"),presence.getSetting("timeLeft")]),i={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/F/Flightradar24/assets/logo.png",startTimestamp:browsingStamp};switch(document.location.hostname.split(".")[0]){case"www":switch(document.location.pathname.split("/")[1]){case"data":switch(document.location.pathname.split("/")[2]){case"airports":"/data/airports"===document.location.pathname?i.details="Browsing Airports":document.querySelector("[data-testid='cnt-subpage-title']")?(i.details=`Browsing ${document.querySelector("[data-testid='cnt-subpage-title']").firstElementChild.firstChild.textContent}`,i.state=`${document.querySelector("small").textContent.split(" ")[1]} ${document.querySelector("small").textContent.split(" ")[2][0].toUpperCase()}${document.querySelector("small").textContent.split(" ")[2].slice(1)}`):document.querySelector(".airport-name")?(i.details=`Viewing ${document.querySelector(".airport-name").textContent}`,i.state=document.querySelector(".btn.active").childNodes[2]?document.querySelector(".btn.active").childNodes[2].textContent:document.querySelector(".btn.active").textContent,i.buttons=[{label:"View Airport",url:document.location.href}]):i.details="Browsing Airports";break;case"airlines":document.querySelector(".airline-name")?(i.details=`Viewing ${document.querySelector(".airline-name").textContent}`,i.state=document.querySelector(".btn.active").childNodes[2]?document.querySelector(".btn.active").childNodes[2].textContent:document.querySelector(".btn.active").textContent,i.buttons=[{label:"View Airline",url:document.location.href}]):i.details="Browsing Airlines";break;case"aircraft":document.querySelector("[data-testid='cnt-subpage-title'] > h1")?(i.details=`Viewing ${document.querySelector("[data-testid='cnt-subpage-title'] > h1 ").textContent.replace("Production lists - ","")}`,i.buttons=[{label:"View Page",url:document.location.href}]):document.querySelector("[data-testid='cnt-subpage-info'] > h1")?(i.details=`Viewing ${document.querySelector("[data-testid='cnt-subpage-info'] > h1 ").textContent.replace("Flight history for aircraft -","Aircraft")}`,a&&document.querySelector(".img-responsive")&&""!==document.querySelector(".img-responsive").src&&(i.largeImageKey=document.querySelector(".img-responsive").src),i.buttons=[{label:"View Aircraft",url:document.location.href}]):i.details="Browsing Aircraft";break;case"flights":document.querySelector("[data-testid='cnt-subpage-info'] > h1")?(i.details=`Viewing ${document.querySelector("[data-testid='cnt-subpage-info'] > h1 ").textContent.match(/(flight .+$)/g)}`,i.state=`${document.querySelector("[data-testid='cnt-subpage-info'] > h1 ").textContent.replace(/(flight .+$)/g,"").replace("Flight history for ","")}`,i.buttons=[{label:"View Page",url:document.location.href}]):i.details="Browsing Flights";break;case"pinned":document.querySelector("[data-testid='cnt-subpage-info'] > h1")?(i.details=`Viewing ${document.querySelector("[data-testid='cnt-subpage-info'] > h1 ").textContent.replace("Flight history for aircraft -","Aircraft")}`,a&&document.querySelector(".img-responsive")&&""!==document.querySelector(".img-responsive").src&&(i.largeImageKey=document.querySelector(".img-responsive").src),i.buttons=[{label:"View Aircraft",url:document.location.href}]):i.details="Browsing Pinned Flights";break;case"statistics":i.details="Viewing Statistics";break;default:i.details="Searching Data"}break;case"apps":i.details="Viewing Mobile Apps",i.state=document.querySelector("a.active").textContent;break;case"add-coverage":i.details="Viewing Add Coverage";break;case"apply-for-receiver":i.details="Viewing Apply For Receiver";break;case"share-your-data":i.details="Viewing Share Data",i.state=document.querySelector("li.active").textContent;break;case"build-your-own":i.details="Viewing Build Your Own",i.state=document.querySelector("li.active").textContent;break;case"share-statistics":i.details="Viewing Data Statistics",i.state=`${document.querySelector("a.active").textContent.split(" ")[0]} ${document.querySelector("a.active").textContent.split(" ")[1][0].toUpperCase()}${document.querySelector("a.active").textContent.split(" ")[1].slice(1)}`;break;case"premium":i.details="Viewing Subscription Plans";break;case"about":i.details="Viewing About Flightradar24";break;case"how-it-works":i.details="Viewing How It Works";break;case"glossary":i.details="Viewing Glossary";break;case"faq":i.details="Viewing FAQ";break;case"contact-us":i.details="Viewing Contact Us";break;case"privacy-policy":i.details="Viewing Privacy Policy";break;case"terms-and-conditions":i.details="Viewing Terms of Service";break;case"commercial-services":"/commercial-services/data-services"===document.location.pathname?i.details="Viewing Data Services":"/commercial-services/app-integration"===document.location.pathname&&(i.details="Viewing App Integration");break;case"blog":switch(document.location.pathname){case"/blog/":i.details="Browsing Blog Posts";break;case"/blog/newsletter/":i.details="Viewing Newsletter";break;case"/blog/avtalk-podcast/":i.details="Viewing Podcast";break;default:document.querySelector("iframe.blubrryplayer")?([i.details,i.state]=document.querySelector(".elementor-heading-title.elementor-size-default").textContent.split(":"),player.isPlaying?(i.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",i.smallImageText="Playing",[i.startTimestamp,i.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(player.total),presence.timestampFromFormat(player.elapsed))):(i.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",i.smallImageText="Paused")):document.querySelector("h1.elementor-heading-title.elementor-size-default > i.fas.fa-video")?(0!==video.duration?[i.startTimestamp,i.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(player.total),presence.timestampFromFormat(player.elapsed)):document.querySelector("video")?[i.startTimestamp,i.endTimestamp]=presence.getTimestampsfromMedia(document.querySelector("video")):(i.details="Viewing Blog Post",i.state=document.querySelector("h1.elementor-heading-title.elementor-size-default").textContent,i.buttons=[{label:"View Page",url:document.location.href}]),i.details="Watching Video",i.state=document.querySelector("h1.elementor-heading-title.elementor-size-default").textContent.replace("Video: ",""),0!==video.duration?i.buttons=[{label:"View Page",url:document.location.href},{label:"Watch Video",url:`https://www.youtube.com/watch?v=${document.querySelector("iframe.elementor-video").src.split("/")[4].split("?")[0]}`}]:document.querySelector("video")&&(i.buttons=[{label:"View Page",url:document.location.href},{label:"Watch Video",url:document.querySelector("meta[itemprop='url']").content}]),0!==video.duration?video.paused?(i.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",i.smallImageText="Paused"):(i.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",i.smallImageText="Playing"):document.querySelector("video")&&(document.querySelector("video").paused?(i.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",i.smallImageText="Paused"):(i.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",i.smallImageText="Playing"))):(i.details="Viewing Blog Post",i.state=document.querySelector("h1.elementor-heading-title.elementor-size-default").textContent,i.buttons=[{label:"View Page",url:document.location.href}])}break;default:"Multi"===document.querySelector("[data-testid='view-selector-toggle'] > span:nth-child(2)").textContent?(i.details=`Viewing ${document.querySelector("[data-testid='view-selector-toggle'] > span:nth-child(2)").textContent} Mode`,document.querySelector("[data-testid='multiselect__info-panel']")&&(i.buttons=[{label:"View Page",url:document.location.href}],1===document.querySelectorAll("[data-testid='multiselect__info-panel']").length?i.state=`Tracking ${document.querySelectorAll("[data-testid='multiselect__info-panel']").length.toString()} Flight`:document.querySelectorAll("[data-testid='multiselect__info-panel']").length>=2&&(i.state=`Tracking ${document.querySelectorAll("[data-testid='multiselect__info-panel']").length.toString()} Flights`))):"Map"===document.querySelector("[data-testid='view-selector-toggle'] > span:nth-child(2)").textContent?(i.details=`Viewing ${document.querySelector("[data-testid='view-selector-toggle'] > span:nth-child(2)").textContent} Mode`,document.querySelector("[data-testid='aircraft-panel']")?("N/A"===document.querySelector("[data-testid='aircraft-panel__header__callsign']").textContent?i.details=`Tracking ${document.querySelector("[data-testid='aircraft-panel__registration']").textContent}`:i.details=`Tracking ${document.querySelector("[data-testid='aircraft-panel__header__callsign']").textContent}`,i.smallImageKey=OtherAssets[document.querySelector("[data-testid='aircraft-panel'] [data-testid='base-tooltip__content']").textContent.toLocaleLowerCase().replaceAll(" ","")],i.smallImageText=document.querySelector("[data-testid='aircraft-panel'] [data-testid='base-tooltip__content']").textContent,document.querySelector("[data-testid='aircraft-panel__flight-time-remaining'] > span")&&(remaining!==3600*parseInt(document.querySelector("[data-testid='aircraft-panel__flight-time-remaining'] > span").textContent.slice(5).split(":")[0])+60*parseInt(document.querySelector("[data-testid='aircraft-panel__flight-time-remaining'] > span").textContent.slice(5).split(":")[1])?(remaining=3600*parseInt(document.querySelector("[data-testid='aircraft-panel__flight-time-remaining'] > span").textContent.slice(5).split(":")[0])+60*parseInt(document.querySelector("[data-testid='aircraft-panel__flight-time-remaining'] > span").textContent.slice(5).split(":")[1]),leftTimestamp=Math.floor(Date.now()/1e3)+remaining,i.endTimestamp=leftTimestamp):i.endTimestamp=leftTimestamp),a&&"https://www.jetphotos.com/addphotos/"!==document.querySelector("[data-testid='aircraft-panel__image-link']").href&&""!==document.querySelector("[data-testid='aircraft-panel__image-link']").href&&(i.largeImageKey=document.querySelector("[data-testid='aircraft-panel__image-link'] > img").src),i.buttons=[{label:"View Page",url:document.location.href}]):document.querySelector("[data-testid='airport-panel']")&&(i.details=`Tracking ${document.querySelector("[data-testid='airport-panel__header__name']").textContent}`,document.querySelector("span[class='AM']")?i.state=`${document.querySelector("span[class='AM']").textContent}am | ${document.querySelector(".pnl-component.airport-info > .time > span").textContent.split("|")[1]} | ${document.querySelector(".pnl-component.airport-info > .time > span").textContent.split("|")[2]}`:document.querySelector("span[class='PM']")&&(i.state=`${document.querySelector("span[class='PM']").textContent}pm | ${document.querySelector(".pnl-component.airport-info > .time > span").textContent.split("|")[1]} | ${document.querySelector(".pnl-component.airport-info > .time > span").textContent.split("|")[2]}`),a&&"https://www.jetphotos.com/addphotos/"!==document.querySelector("[data-testid='airport-panel__image-link']").href&&""!==document.querySelector("[data-testid='airport-panel__image-link']").href&&(i.largeImageKey=document.querySelector("[data-testid='airport-panel__image-link'] > img").src),i.buttons=[{label:"View Page",url:document.location.href}])):(i.details="Unsupported Page",i.state=document.location.pathname)}document.querySelector("[class='session-timeout-modal visible']")&&(i.details="Session Timed Out");break;case"forum":"/"===document.location.pathname?i.details=`Viewing ${document.querySelector(".ui-state-active").textContent}`:"member"===document.location.pathname.split("/")[1]?(i.details=`Viewing ${document.querySelector(".ui-state-active").textContent} Of User`,i.state=document.querySelector(".username").textContent,i.buttons=[{label:"View Profile",url:document.location.href}]):document.querySelector(".widget-tabs-nav > ul > .ui-state-active")&&document.querySelector("h1.main-title")?(i.details=`Viewing ${document.querySelector(".widget-tabs-nav > ul > .ui-state-active").textContent} Of`,i.state=document.querySelectorAll("h1.main-title")[1].textContent,i.buttons=[{label:"View Page",url:document.location.href}]):document.querySelector("h1.main-title")?(i.details=`Viewing ${document.querySelectorAll("h1.main-title")[1].textContent}`,i.buttons=[{label:"View Page",url:document.location.href}]):(i.details="Unsupported Page",i.state=document.location.pathname),"search"===document.location.pathname.split("/")[1]&&document.querySelector(".search-controls-keywords")&&(i.state=document.querySelector(".search-controls-keywords").lastChild.textContent);break;case"my":"settings"===document.location.pathname.split("/")[1]?(i.details="Viewing Settings",i.state=document.querySelector("li.active").textContent):"friends"===document.location.pathname.split("/")[1]?i.details="Viewing Friends":"add-flight"===document.location.pathname.split("/")[1]?i.details="Adding Flight To Log":"/"!==document.location.pathname?(i.details=`Viewing Profile Of ${document.querySelector("h3").textContent}`,i.state=document.querySelector("h2").textContent,i.buttons=[{label:"View Page",url:document.location.href}],a&&(i.largeImageKey=document.querySelector("img.avatar").src.replace("=64","=1024").replace("=64","=1024"))):i.details="Viewing Logbook Homepage";break;case"careers":i.details="Careers at Flightradar24","/jobs"===document.location.pathname?i.state="Browsing Jobs":document.querySelector("span.textFitted")?i.state=document.querySelector("span.textFitted").textContent:i.state=document.querySelectorAll("h2")[1].textContent;break;default:i.details="Unsupported Subdomain",i.state=document.location.hostname}e||delete i.startTimestamp,n||delete i.endTimestamp,!t&&i.buttons&&delete i.buttons,presence.setActivity(i)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;