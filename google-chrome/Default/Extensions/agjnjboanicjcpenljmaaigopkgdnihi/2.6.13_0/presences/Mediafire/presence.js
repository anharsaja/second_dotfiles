var __webpack_exports__={};const presence=new Presence({clientId:"811965557184135179"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/Mediafire/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t,href:i,hostname:n}=document.location,s=await presence.getSetting("buttons");switch(n){case"www.mediafire.com":"/"===t?e.details="Viewing the home page":document.querySelector("#content > h2")?.textContent?e.details=document.querySelector("#content > h2").textContent:t.includes("/file/")?e.details=document.querySelector("body > main > div.content > div.center > div > div.dl-info > div.sidebar > div.apps > div > div").textContent:"/software/mobile"===t?e.details="Mediafire Mobile Apps":"/about"===t?e.details=document.querySelector("#titlebar > div > h1").textContent:t.includes("/about/jobs")?e.details=document.querySelector("#jobs_pics_section > div.opener > h2").textContent:t.includes("/advertising/")?e.details=document.querySelector("#adInquiryWrap > h2").textContent:"/press"===t?e.details=document.querySelector("#content > h2.h2.mb-4").textContent:t.includes("/policies/")?e.details=document.querySelector("#content > div > div > h1 > strong").textContent:t.includes("/policy_violation/")?e.details=document.querySelector("#content > h2:nth-child(1)")?.textContent:t.includes("/help/")?e.details="Help":t.includes("/login/")?e.details="Logging in":t.includes("/upgrade/")?e.details="Upgrade Plans":t.includes("myaccount")&&(e.details=`${document.querySelector("[class~='current']").textContent.trim()} Settings`),"/"!==t&&(e.buttons=[{label:"Open Mediafire",url:i}]);break;case"app.mediafire.com":t.includes("/myfiles")?e.details="Viewing their files":t.includes("/recent")?e.details="Viewing their Recent Files":t.includes("/following")?e.details="Viewing files shared with them":t.includes("/trash")?e.details="Viewing their Trashcan":e.details="Viewing their files",e.buttons=[{label:"Open Mediafire App",url:i}];break;case"www.mediafire.zendesk.com":if(t.includes("/articles/"))e.details="Viewing Help Article About:",e.state=document.querySelector("body > main > article > header > h1").textContent;else{const t=document.querySelector("#query");t.textContent?e.details="Checking out the helpdesk":(e.details="Helpdesk searching for:",e.state=t.value,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png")}e.buttons=[{label:"Open Mediafire Helpdesk",url:i}];break;case"blog.mediafire.com":"/"===t&&(e.details="Viewing Blog Post About:",e.state=document.querySelector("#fl-post-3434 > header > h2 > a").textContent),e.buttons=[{label:"Open Mediafire Blog",url:i}]}s||delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;