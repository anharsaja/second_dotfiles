var __webpack_exports__={};const presence=new Presence({clientId:"1234257543467892826"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Podurama/assets/logo.png",startTimestamp:browsingTimestamp},[,t,s]=document.location.pathname.split("/"),a=document.querySelector(".audio-player"),r=await presence.getSetting("usetimeleft");if(a){const t=document.querySelector("audio"),[s,i]=presence.getTimestampsfromMedia(t);e.details="Listening to a Podcast",e.state=a.querySelector(".episode-title").textContent,t.paused?(delete e.startTimestamp,delete e.endTimestamp):r?[e.startTimestamp,e.endTimestamp]=[s,i]:e.startTimestamp=s,e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.largeImageKey=a?.querySelector(".episode-details")?.querySelector("img")?.src}else switch(t){case"podcast":{const t=document.querySelector("header");e.details="Viewing Podcast Page",e.state=t.querySelector("h1").textContent,e.largeImageKey=t.querySelector("img").src}break;case"episode":e.details="Viewing Podcast Page",e.state=document.querySelector(".episode-title").textContent,e.largeImageKey=document.querySelector(".main-img-loc").src;break;case"bookmarks":e.details="Browsing Bookmarks";break;case"top-charts":e.details="Browsing Trending Podcasts!",e.state=`In the '${s.replaceAll("-"," ")}' category`;break;case"favourites":e.details="Browsing Favorite Episodes!";break;case"followed-playlists":e.details="Browsing Followed Podcasts!";break;case"my-files":e.details="Browsing My Files!";break;case"subscribed-podcasts":e.details="Browsing Subcribed Podcasts!";break;case"new-episodes":e.details="Searching for New Episodes!";break;case"recently-played":e.details="Browsing Recently Played!";break;case"tags":e.details="Browsing Collections!";break;default:e.details="Browsing the Site"}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;