var __webpack_exports__={};const presence=new Presence({clientId:"733216821758525460"});let currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/");const browsingTimestamp=Math.floor(Date.now()/1e3);let presenceData={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Wikidata/assets/logo.png",startTimestamp:browsingTimestamp};const updateCallback={_function:null,get function(){return this._function},set function(e){this._function=e},get present(){return null!==this._function}},resetData=(e={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Wikidata/assets/logo.png",startTimestamp:browsingTimestamp})=>{currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/"),presenceData={...e}},getURLParam=e=>currentURL.searchParams.get(e);if((()=>{let e;const a=()=>getURLParam("action")||getURLParam("veaction"),t=()=>decodeURI(("index.php"===currentPath[1]?getURLParam("title"):currentPath.slice(1).join("/")).replaceAll("_"," "));try{e=document.querySelector(".wikibase-title")?document.querySelector(".wikibase-title-label").textContent.trim():document.querySelector("h1").textContent}catch(a){e=t()}const i=()=>({"-2":"Viewing a media","-1":"Viewing a special page",0:"Reading an article",1:"Viewing a talk page",2:"Viewing a user page",3:"Viewing a user talk page",4:"Viewing a project page",5:"Viewing a project talk page",6:"Viewing a file",7:"Viewing a file talk page",8:"Viewing an interface page",9:"Viewing an interface talk page",10:"Viewing a template",11:"Viewing a template talk page",12:"Viewing a help page",13:"Viewing a help talk page",14:"Viewing a category",15:"Viewing a category talk page",120:"Viewing a propery",121:"Viewing a propery talk page",122:"Viewing a query",123:"Viewing a query talk page",146:"Viewing a lexeme",147:"Viewing a lexeme talk page",640:"Viewing a schema",641:"Viewing a schema talk page",828:"Viewing a module",829:"Viewing a module talk page",2300:"Viewing a gadget",2301:"Viewing a gadget talk page",2302:"Viewing a gadget definition page",2303:"Viewing a gadget definition talk page",2600:"Viewing a topic"}[[...document.querySelector("body").classList].find((e=>/ns--?\d/.test(e))).slice(3)]||"Viewing a page");(document.querySelector("#n-mainpage a")||document.querySelector("#p-navigation a")||document.querySelector(".mw-wiki-logo")).href===currentURL.href?presenceData.details="On the main page":document.querySelector("#wpLoginAttempt")?presenceData.details="Logging in":document.querySelector("#wpCreateaccount")?presenceData.details="Creating an account":document.querySelector(".searchresults")?(presenceData.details="Searching for a page",presenceData.state=document.querySelector("input[type=search]").value):"history"===a()?(presenceData.details="Viewing revision history",presenceData.state=t()):getURLParam("diff")?(presenceData.details="Viewing difference between revisions",presenceData.state=t()):getURLParam("oldid")?(presenceData.details="Viewing an old revision of a page",presenceData.state=t()):document.querySelector("#ca-ve-edit")||getURLParam("veaction")?(presenceData.state=e.toLowerCase()===t().toLowerCase()?`${e}`:`${e} (${t()})`,updateCallback.function=()=>{"edit"===a()||"editsource"===a()?presenceData.details="Editing a page":presenceData.details=i()}):"edit"===a()?(presenceData.details=document.querySelector("#ca-edit")?"Editing a page":"Viewing source",presenceData.state=t()):(presenceData.details=i(),presenceData.state=e.toLowerCase()===t().toLowerCase()?`${e}`:`${e} (${t()})`)})(),updateCallback.present){const e={...presenceData};presence.on("UpdateData",(async()=>{resetData(e),updateCallback.function(),presence.setActivity(presenceData)}))}else presence.on("UpdateData",(async()=>{presence.setActivity(presenceData)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVksYUFDMURaLGFBQWFnQyxNQUFXaEIsRUFBTWtCLGdCQUFrQmhCLElBQWVnQixjQUN6RCxHQUFHbEIsSUFDSCxHQUFHQSxNQUFVRSxPQUNuQmQsZUFBZUUsU0FBVyxLQUNDLFNBQW5CVyxLQUFnRCxlQUFuQkEsSUFDN0JqQixhQUFhQyxRQUFVLGlCQUV2QkQsYUFBYUMsUUFBVTBCLEdBQWtCLEdBR3pCLFNBQW5CVixLQUNMakIsYUFBYUMsUUFBVWIsU0FBU21DLGNBQWMsWUFDeEMsaUJBQ0EsaUJBQ052QixhQUFhZ0MsTUFBUWQsTUFHckJsQixhQUFhQyxRQUFVMEIsSUFDdkIzQixhQUFhZ0MsTUFBV2hCLEVBQU1rQixnQkFBa0JoQixJQUFlZ0IsY0FDekQsR0FBR2xCLElBQ0gsR0FBR0EsTUFBVUUsT0FFMUIsRUF0R0QsR0F1R0lkLGVBQWVLLFFBQVMsQ0FDeEIsTUFBTUUsRUFBYyxJQUFLWCxjQUN6QmpCLFNBQVNvRCxHQUFHLGNBQWNDLFVBQ3RCMUIsVUFBVUMsR0FDVlAsZUFBZUUsV0FDZnZCLFNBQVNzRCxZQUFZckMsYUFBYSxHQUUxQyxNQUVJakIsU0FBU29ELEdBQUcsY0FBY0MsVUFDdEJyRCxTQUFTc0QsWUFBWXJDLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wcmVzZW5jZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwcmVzZW5jZSA9IG5ldyBQcmVzZW5jZSh7XG4gICAgY2xpZW50SWQ6IFwiNzMzMjE2ODIxNzU4NTI1NDYwXCIsXG59KTtcbmxldCBjdXJyZW50VVJMID0gbmV3IFVSTChkb2N1bWVudC5sb2NhdGlvbi5ocmVmKSwgY3VycmVudFBhdGggPSBjdXJyZW50VVJMLnBhdGhuYW1lLnJlcGxhY2UoL15cXC98XFwvJC9nLCBcIlwiKS5zcGxpdChcIi9cIik7XG5jb25zdCBicm93c2luZ1RpbWVzdGFtcCA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApO1xubGV0IHByZXNlbmNlRGF0YSA9IHtcbiAgICBkZXRhaWxzOiBcIlZpZXdpbmcgYW4gdW5zdXBwb3J0ZWQgcGFnZVwiLFxuICAgIGxhcmdlSW1hZ2VLZXk6IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9XL1dpa2lkYXRhL2Fzc2V0cy9sb2dvLnBuZ1wiLFxuICAgIHN0YXJ0VGltZXN0YW1wOiBicm93c2luZ1RpbWVzdGFtcCxcbn07XG5jb25zdCB1cGRhdGVDYWxsYmFjayA9IHtcbiAgICBfZnVuY3Rpb246IG51bGwsXG4gICAgZ2V0IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZnVuY3Rpb247XG4gICAgfSxcbiAgICBzZXQgZnVuY3Rpb24ocGFyYW1ldGVyKSB7XG4gICAgICAgIHRoaXMuX2Z1bmN0aW9uID0gcGFyYW1ldGVyO1xuICAgIH0sXG4gICAgZ2V0IHByZXNlbnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9mdW5jdGlvbiAhPT0gbnVsbDtcbiAgICB9LFxufSwgcmVzZXREYXRhID0gKGRlZmF1bHREYXRhID0ge1xuICAgIGRldGFpbHM6IFwiVmlld2luZyBhbiB1bnN1cHBvcnRlZCBwYWdlXCIsXG4gICAgbGFyZ2VJbWFnZUtleTogXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL1cvV2lraWRhdGEvYXNzZXRzL2xvZ28ucG5nXCIsXG4gICAgc3RhcnRUaW1lc3RhbXA6IGJyb3dzaW5nVGltZXN0YW1wLFxufSkgPT4ge1xuICAgIGN1cnJlbnRVUkwgPSBuZXcgVVJMKGRvY3VtZW50LmxvY2F0aW9uLmhyZWYpO1xuICAgIGN1cnJlbnRQYXRoID0gY3VycmVudFVSTC5wYXRobmFtZS5yZXBsYWNlKC9eXFwvfFxcLyQvZywgXCJcIikuc3BsaXQoXCIvXCIpO1xuICAgIHByZXNlbmNlRGF0YSA9IHsgLi4uZGVmYXVsdERhdGEgfTtcbn0sIGdldFVSTFBhcmFtID0gKHVybFBhcmFtKSA9PiB7XG4gICAgcmV0dXJuIGN1cnJlbnRVUkwuc2VhcmNoUGFyYW1zLmdldCh1cmxQYXJhbSk7XG59O1xuKCgpID0+IHtcbiAgICBsZXQgdGl0bGU7XG4gICAgY29uc3QgYWN0aW9uUmVzdWx0ID0gKCkgPT4gZ2V0VVJMUGFyYW0oXCJhY3Rpb25cIikgfHwgZ2V0VVJMUGFyYW0oXCJ2ZWFjdGlvblwiKSwgdGl0bGVGcm9tVVJMID0gKCkgPT4ge1xuICAgICAgICByZXR1cm4gZGVjb2RlVVJJKChjdXJyZW50UGF0aFsxXSA9PT0gXCJpbmRleC5waHBcIlxuICAgICAgICAgICAgPyBnZXRVUkxQYXJhbShcInRpdGxlXCIpXG4gICAgICAgICAgICA6IGN1cnJlbnRQYXRoLnNsaWNlKDEpLmpvaW4oXCIvXCIpKS5yZXBsYWNlQWxsKFwiX1wiLCBcIiBcIikpO1xuICAgIH07XG4gICAgdHJ5IHtcbiAgICAgICAgdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLndpa2liYXNlLXRpdGxlXCIpXG4gICAgICAgICAgICA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIud2lraWJhc2UtdGl0bGUtbGFiZWxcIikudGV4dENvbnRlbnQudHJpbSgpXG4gICAgICAgICAgICA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoMVwiKS50ZXh0Q29udGVudDtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgdGl0bGUgPSB0aXRsZUZyb21VUkwoKTtcbiAgICB9XG4gICAgY29uc3QgbmFtZXNwYWNlRGV0YWlscyA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZGV0YWlscyA9IHtcbiAgICAgICAgICAgIFwiLTJcIjogXCJWaWV3aW5nIGEgbWVkaWFcIixcbiAgICAgICAgICAgIFwiLTFcIjogXCJWaWV3aW5nIGEgc3BlY2lhbCBwYWdlXCIsXG4gICAgICAgICAgICAwOiBcIlJlYWRpbmcgYW4gYXJ0aWNsZVwiLFxuICAgICAgICAgICAgMTogXCJWaWV3aW5nIGEgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICAyOiBcIlZpZXdpbmcgYSB1c2VyIHBhZ2VcIixcbiAgICAgICAgICAgIDM6IFwiVmlld2luZyBhIHVzZXIgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICA0OiBcIlZpZXdpbmcgYSBwcm9qZWN0IHBhZ2VcIixcbiAgICAgICAgICAgIDU6IFwiVmlld2luZyBhIHByb2plY3QgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICA2OiBcIlZpZXdpbmcgYSBmaWxlXCIsXG4gICAgICAgICAgICA3OiBcIlZpZXdpbmcgYSBmaWxlIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgODogXCJWaWV3aW5nIGFuIGludGVyZmFjZSBwYWdlXCIsXG4gICAgICAgICAgICA5OiBcIlZpZXdpbmcgYW4gaW50ZXJmYWNlIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgMTA6IFwiVmlld2luZyBhIHRlbXBsYXRlXCIsXG4gICAgICAgICAgICAxMTogXCJWaWV3aW5nIGEgdGVtcGxhdGUgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICAxMjogXCJWaWV3aW5nIGEgaGVscCBwYWdlXCIsXG4gICAgICAgICAgICAxMzogXCJWaWV3aW5nIGEgaGVscCB0YWxrIHBhZ2VcIixcbiAgICAgICAgICAgIDE0OiBcIlZpZXdpbmcgYSBjYXRlZ29yeVwiLFxuICAgICAgICAgICAgMTU6IFwiVmlld2luZyBhIGNhdGVnb3J5IHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgMTIwOiBcIlZpZXdpbmcgYSBwcm9wZXJ5XCIsXG4gICAgICAgICAgICAxMjE6IFwiVmlld2luZyBhIHByb3BlcnkgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICAxMjI6IFwiVmlld2luZyBhIHF1ZXJ5XCIsXG4gICAgICAgICAgICAxMjM6IFwiVmlld2luZyBhIHF1ZXJ5IHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgMTQ2OiBcIlZpZXdpbmcgYSBsZXhlbWVcIixcbiAgICAgICAgICAgIDE0NzogXCJWaWV3aW5nIGEgbGV4ZW1lIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgNjQwOiBcIlZpZXdpbmcgYSBzY2hlbWFcIixcbiAgICAgICAgICAgIDY0MTogXCJWaWV3aW5nIGEgc2NoZW1hIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgODI4OiBcIlZpZXdpbmcgYSBtb2R1bGVcIixcbiAgICAgICAgICAgIDgyOTogXCJWaWV3aW5nIGEgbW9kdWxlIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgMjMwMDogXCJWaWV3aW5nIGEgZ2FkZ2V0XCIsXG4gICAgICAgICAgICAyMzAxOiBcIlZpZXdpbmcgYSBnYWRnZXQgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICAyMzAyOiBcIlZpZXdpbmcgYSBnYWRnZXQgZGVmaW5pdGlvbiBwYWdlXCIsXG4gICAgICAgICAgICAyMzAzOiBcIlZpZXdpbmcgYSBnYWRnZXQgZGVmaW5pdGlvbiB0YWxrIHBhZ2VcIixcbiAgICAgICAgICAgIDI2MDA6IFwiVmlld2luZyBhIHRvcGljXCIsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAoZGV0YWlsc1tbLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHlcIikuY2xhc3NMaXN0XVxuICAgICAgICAgICAgLmZpbmQodiA9PiAvbnMtLT9cXGQvLnRlc3QodikpXG4gICAgICAgICAgICAuc2xpY2UoMyldIHx8IFwiVmlld2luZyBhIHBhZ2VcIik7XG4gICAgfTtcbiAgICBpZiAoKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbi1tYWlucGFnZSBhXCIpIHx8XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcC1uYXZpZ2F0aW9uIGFcIikgfHxcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tdy13aWtpLWxvZ29cIikpLmhyZWYgPT09IGN1cnJlbnRVUkwuaHJlZilcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIk9uIHRoZSBtYWluIHBhZ2VcIjtcbiAgICBlbHNlIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3dwTG9naW5BdHRlbXB0XCIpKVxuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiTG9nZ2luZyBpblwiO1xuICAgIGVsc2UgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjd3BDcmVhdGVhY2NvdW50XCIpKVxuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiQ3JlYXRpbmcgYW4gYWNjb3VudFwiO1xuICAgIGVsc2UgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2VhcmNocmVzdWx0c1wiKSkge1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiU2VhcmNoaW5nIGZvciBhIHBhZ2VcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImlucHV0W3R5cGU9c2VhcmNoXVwiKS52YWx1ZTtcbiAgICB9XG4gICAgZWxzZSBpZiAoYWN0aW9uUmVzdWx0KCkgPT09IFwiaGlzdG9yeVwiKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHJldmlzaW9uIGhpc3RvcnlcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gdGl0bGVGcm9tVVJMKCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGdldFVSTFBhcmFtKFwiZGlmZlwiKSkge1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBkaWZmZXJlbmNlIGJldHdlZW4gcmV2aXNpb25zXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IHRpdGxlRnJvbVVSTCgpO1xuICAgIH1cbiAgICBlbHNlIGlmIChnZXRVUkxQYXJhbShcIm9sZGlkXCIpKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIGFuIG9sZCByZXZpc2lvbiBvZiBhIHBhZ2VcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gdGl0bGVGcm9tVVJMKCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2EtdmUtZWRpdFwiKSB8fCBnZXRVUkxQYXJhbShcInZlYWN0aW9uXCIpKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke3RpdGxlLnRvTG93ZXJDYXNlKCkgPT09IHRpdGxlRnJvbVVSTCgpLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgID8gYCR7dGl0bGV9YFxuICAgICAgICAgICAgOiBgJHt0aXRsZX0gKCR7dGl0bGVGcm9tVVJMKCl9KWB9YDtcbiAgICAgICAgdXBkYXRlQ2FsbGJhY2suZnVuY3Rpb24gPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoYWN0aW9uUmVzdWx0KCkgPT09IFwiZWRpdFwiIHx8IGFjdGlvblJlc3VsdCgpID09PSBcImVkaXRzb3VyY2VcIilcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiRWRpdGluZyBhIHBhZ2VcIjtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IG5hbWVzcGFjZURldGFpbHMoKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAoYWN0aW9uUmVzdWx0KCkgPT09IFwiZWRpdFwiKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYS1lZGl0XCIpXG4gICAgICAgICAgICA/IFwiRWRpdGluZyBhIHBhZ2VcIlxuICAgICAgICAgICAgOiBcIlZpZXdpbmcgc291cmNlXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IHRpdGxlRnJvbVVSTCgpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBuYW1lc3BhY2VEZXRhaWxzKCk7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke3RpdGxlLnRvTG93ZXJDYXNlKCkgPT09IHRpdGxlRnJvbVVSTCgpLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgID8gYCR7dGl0bGV9YFxuICAgICAgICAgICAgOiBgJHt0aXRsZX0gKCR7dGl0bGVGcm9tVVJMKCl9KWB9YDtcbiAgICB9XG59KSgpO1xuaWYgKHVwZGF0ZUNhbGxiYWNrLnByZXNlbnQpIHtcbiAgICBjb25zdCBkZWZhdWx0RGF0YSA9IHsgLi4ucHJlc2VuY2VEYXRhIH07XG4gICAgcHJlc2VuY2Uub24oXCJVcGRhdGVEYXRhXCIsIGFzeW5jICgpID0+IHtcbiAgICAgICAgcmVzZXREYXRhKGRlZmF1bHREYXRhKTtcbiAgICAgICAgdXBkYXRlQ2FsbGJhY2suZnVuY3Rpb24oKTtcbiAgICAgICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkocHJlc2VuY2VEYXRhKTtcbiAgICB9KTtcbn1cbmVsc2Uge1xuICAgIHByZXNlbmNlLm9uKFwiVXBkYXRlRGF0YVwiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIHByZXNlbmNlLnNldEFjdGl2aXR5KHByZXNlbmNlRGF0YSk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljSEpsYzJWdVkyVXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lKd2NtVnpaVzVqWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEZGQlFWRXNRMEZCUXp0SlFVTTNRaXhSUVVGUkxFVkJRVVVzYjBKQlFXOUNPME5CUXpsQ0xFTkJRVU1zUTBGQlF6dEJRVVZJTEVsQlFVa3NWVUZCVlN4SFFVRkhMRWxCUVVrc1IwRkJSeXhEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRVZCUXk5RExGZEJRVmNzUjBGQlJ5eFZRVUZWTEVOQlFVTXNVVUZCVVN4RFFVRkRMRTlCUVU4c1EwRkJReXhWUVVGVkxFVkJRVVVzUlVGQlJTeERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRE8wRkJRM1JGTEUxQlFVMHNhVUpCUVdsQ0xFZEJRVWNzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhGUVVGRkxFZEJRVWNzU1VGQlNTeERRVUZETEVOQlFVTTdRVUZEZUVRc1NVRkJTU3haUVVGWkxFZEJRV2xDTzBsQlEyaERMRTlCUVU4c1JVRkJSU3cyUWtGQk5rSTdTVUZEZEVNc1lVRkJZU3hGUVVOYUxDdEVRVUVyUkR0SlFVTm9SU3hqUVVGakxFVkJRVVVzYVVKQlFXbENPME5CUTJwRExFTkJRVU03UVVGRFJpeE5RVUZOTEdOQlFXTXNSMEZCUnp0SlFVTnlRaXhUUVVGVExFVkJRVVVzU1VGQmEwSTdTVUZETjBJc1NVRkJTU3hSUVVGUk8xRkJRMWdzVDBGQlR5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRPMGxCUTNaQ0xFTkJRVU03U1VGRFJDeEpRVUZKTEZGQlFWRXNRMEZCUXl4VFFVRlRPMUZCUTNKQ0xFbEJRVWtzUTBGQlF5eFRRVUZUTEVkQlFVY3NVMEZCVXl4RFFVRkRPMGxCUXpWQ0xFTkJRVU03U1VGRFJDeEpRVUZKTEU5QlFVODdVVUZEVml4UFFVRlBMRWxCUVVrc1EwRkJReXhUUVVGVExFdEJRVXNzU1VGQlNTeERRVUZETzBsQlEyaERMRU5CUVVNN1EwRkRSQ3hGUVVsRUxGTkJRVk1zUjBGQlJ5eERRVU5ZTEdOQlFUUkNPMGxCUXpOQ0xFOUJRVThzUlVGQlJTdzJRa0ZCTmtJN1NVRkRkRU1zWVVGQllTeEZRVU5hTEN0RVFVRXJSRHRKUVVOb1JTeGpRVUZqTEVWQlFVVXNhVUpCUVdsQ08wTkJRMnBETEVWQlEwMHNSVUZCUlR0SlFVTlVMRlZCUVZVc1IwRkJSeXhKUVVGSkxFZEJRVWNzUTBGQlF5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8wbEJRemRETEZkQlFWY3NSMEZCUnl4VlFVRlZMRU5CUVVNc1VVRkJVU3hEUVVGRExFOUJRVThzUTBGQlF5eFZRVUZWTEVWQlFVVXNSVUZCUlN4RFFVRkRMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzBsQlEzSkZMRmxCUVZrc1IwRkJSeXhGUVVGRkxFZEJRVWNzVjBGQlZ5eEZRVUZGTEVOQlFVTTdRVUZEYmtNc1EwRkJReXhGUVV0RUxGZEJRVmNzUjBGQlJ5eERRVUZETEZGQlFXZENMRVZCUVZVc1JVRkJSVHRKUVVNeFF5eFBRVUZQTEZWQlFWVXNRMEZCUXl4WlFVRlpMRU5CUVVNc1IwRkJSeXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETzBGQlF6bERMRU5CUVVNc1EwRkJRenRCUVVWSUxFTkJRVU1zUjBGQlV5eEZRVUZGTzBsQlExZ3NTVUZCU1N4TFFVRmhMRU5CUVVNN1NVRkRiRUlzVFVGQlRTeFpRVUZaTEVkQlFVY3NSMEZCVnl4RlFVRkZMRU5CUTJoRExGZEJRVmNzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4WFFVRlhMRU5CUVVNc1ZVRkJWU3hEUVVGRExFVkJRMnBFTEZsQlFWa3NSMEZCUnl4SFFVRlhMRVZCUVVVN1VVRkRNMElzVDBGQlR5eFRRVUZUTEVOQlEyWXNRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJReXhEUVVGRExFdEJRVXNzVjBGQlZ6dFpRVU01UWl4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRExFOUJRVThzUTBGQlF6dFpRVU4wUWl4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRMmhETEVOQlFVTXNWVUZCVlN4RFFVRkRMRWRCUVVjc1JVRkJSU3hIUVVGSExFTkJRVU1zUTBGRGRFSXNRMEZCUXp0SlFVTklMRU5CUVVNc1EwRkJRenRKUVVWSUxFbEJRVWs3VVVGRFNDeExRVUZMTEVkQlFVY3NVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhwUWtGQmFVSXNRMEZCUXp0WlFVTm9SQ3hEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4MVFrRkJkVUlzUTBGQlF5eERRVUZETEZkQlFWY3NRMEZCUXl4SlFVRkpMRVZCUVVVN1dVRkRjRVVzUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zVjBGQlZ5eERRVUZETzB0QlF6VkRPMGxCUVVNc1QwRkJUeXhEUVVGRExFVkJRVVU3VVVGRFdDeExRVUZMTEVkQlFVY3NXVUZCV1N4RlFVRkZMRU5CUVVNN1MwRkRka0k3U1VGTlJDeE5RVUZOTEdkQ1FVRm5RaXhIUVVGSExFZEJRVmNzUlVGQlJUdFJRVU55UXl4TlFVRk5MRTlCUVU4c1IwRkJaME03V1VGRE5VTXNTVUZCU1N4RlFVRkZMR2xDUVVGcFFqdFpRVU4yUWl4SlFVRkpMRVZCUVVVc2QwSkJRWGRDTzFsQlF6bENMRU5CUVVNc1JVRkJSU3h2UWtGQmIwSTdXVUZEZGtJc1EwRkJReXhGUVVGRkxIRkNRVUZ4UWp0WlFVTjRRaXhEUVVGRExFVkJRVVVzY1VKQlFYRkNPMWxCUTNoQ0xFTkJRVU1zUlVGQlJTd3dRa0ZCTUVJN1dVRkROMElzUTBGQlF5eEZRVUZGTEhkQ1FVRjNRanRaUVVNelFpeERRVUZETEVWQlFVVXNOa0pCUVRaQ08xbEJRMmhETEVOQlFVTXNSVUZCUlN4blFrRkJaMEk3V1VGRGJrSXNRMEZCUXl4RlFVRkZMREJDUVVFd1FqdFpRVU0zUWl4RFFVRkRMRVZCUVVVc01rSkJRVEpDTzFsQlF6bENMRU5CUVVNc1JVRkJSU3huUTBGQlowTTdXVUZEYmtNc1JVRkJSU3hGUVVGRkxHOUNRVUZ2UWp0WlFVTjRRaXhGUVVGRkxFVkJRVVVzT0VKQlFUaENPMWxCUTJ4RExFVkJRVVVzUlVGQlJTeHhRa0ZCY1VJN1dVRkRla0lzUlVGQlJTeEZRVUZGTERCQ1FVRXdRanRaUVVNNVFpeEZRVUZGTEVWQlFVVXNiMEpCUVc5Q08xbEJRM2hDTEVWQlFVVXNSVUZCUlN3NFFrRkJPRUk3V1VGRGJFTXNSMEZCUnl4RlFVRkZMRzFDUVVGdFFqdFpRVU40UWl4SFFVRkhMRVZCUVVVc05rSkJRVFpDTzFsQlEyeERMRWRCUVVjc1JVRkJSU3hwUWtGQmFVSTdXVUZEZEVJc1IwRkJSeXhGUVVGRkxESkNRVUV5UWp0WlFVTm9ReXhIUVVGSExFVkJRVVVzYTBKQlFXdENPMWxCUTNaQ0xFZEJRVWNzUlVGQlJTdzBRa0ZCTkVJN1dVRkRha01zUjBGQlJ5eEZRVUZGTEd0Q1FVRnJRanRaUVVOMlFpeEhRVUZITEVWQlFVVXNORUpCUVRSQ08xbEJRMnBETEVkQlFVY3NSVUZCUlN4clFrRkJhMEk3V1VGRGRrSXNSMEZCUnl4RlFVRkZMRFJDUVVFMFFqdFpRVU5xUXl4SlFVRkpMRVZCUVVVc2EwSkJRV3RDTzFsQlEzaENMRWxCUVVrc1JVRkJSU3cwUWtGQk5FSTdXVUZEYkVNc1NVRkJTU3hGUVVGRkxHdERRVUZyUXp0WlFVTjRReXhKUVVGSkxFVkJRVVVzZFVOQlFYVkRPMWxCUXpkRExFbEJRVWtzUlVGQlJTeHBRa0ZCYVVJN1UwRkRka0lzUTBGQlF6dFJRVU5HTEU5QlFVOHNRMEZEVGl4UFFVRlBMRU5CUTA0c1EwRkJReXhIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1UwRkJVeXhEUVVGRE8yRkJRek5ETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1lVRkROVUlzUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVTldMRWxCUVVrc1owSkJRV2RDTEVOQlEzSkNMRU5CUVVNN1NVRkRTQ3hEUVVGRExFTkJRVU03U1VGRlJpeEpRVU5ETEVOQlEwTXNVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJiMElzWlVGQlpTeERRVUZETzFGQlF6RkVMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVzlDTEdsQ1FVRnBRaXhEUVVGRE8xRkJRelZFTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVc5Q0xHVkJRV1VzUTBGQlF5eERRVU14UkN4RFFVRkRMRWxCUVVrc1MwRkJTeXhWUVVGVkxFTkJRVU1zU1VGQlNUdFJRVVV4UWl4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExHdENRVUZyUWl4RFFVRkRPMU5CUTNSRExFbEJRVWtzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4cFFrRkJhVUlzUTBGQlF6dFJRVU5xUkN4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExGbEJRVmtzUTBGQlF6dFRRVU5vUXl4SlFVRkpMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zYTBKQlFXdENMRU5CUVVNN1VVRkRiRVFzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4eFFrRkJjVUlzUTBGQlF6dFRRVU42UXl4SlFVRkpMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1JVRkJSVHRSUVVOc1JDeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMSE5DUVVGelFpeERRVUZETzFGQlF6bERMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRMnBDTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc2IwSkJRVzlDTEVOQlF6TkRMRU5CUVVNc1MwRkJTeXhEUVVGRE8wdEJRMUk3VTBGQlRTeEpRVUZKTEZsQlFWa3NSVUZCUlN4TFFVRkxMRk5CUVZNc1JVRkJSVHRSUVVONFF5eFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMREJDUVVFd1FpeERRVUZETzFGQlEyeEVMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRVWNzV1VGQldTeEZRVUZGTEVOQlFVTTdTMEZEY0VNN1UwRkJUU3hKUVVGSkxGZEJRVmNzUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlR0UlFVTXZRaXhaUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEhORFFVRnpReXhEUVVGRE8xRkJRemxFTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1dVRkJXU3hGUVVGRkxFTkJRVU03UzBGRGNFTTdVMEZCVFN4SlFVRkpMRmRCUVZjc1EwRkJReXhQUVVGUExFTkJRVU1zUlVGQlJUdFJRVU5vUXl4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExHMURRVUZ0UXl4RFFVRkRPMUZCUXpORUxGbEJRVmtzUTBGQlF5eExRVUZMTEVkQlFVY3NXVUZCV1N4RlFVRkZMRU5CUVVNN1MwRkRjRU03VTBGQlRTeEpRVUZKTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1lVRkJZU3hEUVVGRExFbEJRVWtzVjBGQlZ5eERRVUZETEZWQlFWVXNRMEZCUXl4RlFVRkZPMUZCUXpWRkxGbEJRVmtzUTBGQlF5eExRVUZMTEVkQlFVY3NSMEZEY0VJc1MwRkJTeXhEUVVGRExGZEJRVmNzUlVGQlJTeExRVUZMTEZsQlFWa3NSVUZCUlN4RFFVRkRMRmRCUVZjc1JVRkJSVHRaUVVOdVJDeERRVUZETEVOQlFVTXNSMEZCUnl4TFFVRkxMRVZCUVVVN1dVRkRXaXhEUVVGRExFTkJRVU1zUjBGQlJ5eExRVUZMTEV0QlFVc3NXVUZCV1N4RlFVRkZMRWRCUXk5Q0xFVkJRVVVzUTBGQlF6dFJRVU5JTEdOQlFXTXNRMEZCUXl4UlFVRlJMRWRCUVVjc1IwRkJVeXhGUVVGRk8xbEJRM0JETEVsQlFVa3NXVUZCV1N4RlFVRkZMRXRCUVVzc1RVRkJUU3hKUVVGSkxGbEJRVmtzUlVGQlJTeExRVUZMTEZsQlFWazdaMEpCUXk5RUxGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NaMEpCUVdkQ0xFTkJRVU03TzJkQ1FVTndReXhaUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEdkQ1FVRm5RaXhGUVVGRkxFTkJRVU03VVVGRGFFUXNRMEZCUXl4RFFVRkRPMHRCUTBZN1UwRkJUU3hKUVVGSkxGbEJRVmtzUlVGQlJTeExRVUZMTEUxQlFVMHNSVUZCUlR0UlFVTnlReXhaUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1ZVRkJWU3hEUVVGRE8xbEJRM2hFTEVOQlFVTXNRMEZCUXl4blFrRkJaMEk3V1VGRGJFSXNRMEZCUXl4RFFVRkRMR2RDUVVGblFpeERRVUZETzFGQlEzQkNMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRVWNzV1VGQldTeEZRVUZGTEVOQlFVTTdTMEZEY0VNN1UwRkJUVHRSUVVOT0xGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NaMEpCUVdkQ0xFVkJRVVVzUTBGQlF6dFJRVU14UXl4WlFVRlpMRU5CUVVNc1MwRkJTeXhIUVVGSExFZEJRM0JDTEV0QlFVc3NRMEZCUXl4WFFVRlhMRVZCUVVVc1MwRkJTeXhaUVVGWkxFVkJRVVVzUTBGQlF5eFhRVUZYTEVWQlFVVTdXVUZEYmtRc1EwRkJReXhEUVVGRExFZEJRVWNzUzBGQlN5eEZRVUZGTzFsQlExb3NRMEZCUXl4RFFVRkRMRWRCUVVjc1MwRkJTeXhMUVVGTExGbEJRVmtzUlVGQlJTeEhRVU12UWl4RlFVRkZMRU5CUVVNN1MwRkRTRHRCUVVOR0xFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTTdRVUZGVEN4SlFVRkpMR05CUVdNc1EwRkJReXhQUVVGUExFVkJRVVU3U1VGRE0wSXNUVUZCVFN4WFFVRlhMRWRCUVVjc1JVRkJSU3hIUVVGSExGbEJRVmtzUlVGQlJTeERRVUZETzBsQlEzaERMRkZCUVZFc1EwRkJReXhGUVVGRkxFTkJRVU1zV1VGQldTeEZRVUZGTEV0QlFVc3NTVUZCU1N4RlFVRkZPMUZCUTNCRExGTkJRVk1zUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXp0UlFVTjJRaXhqUVVGakxFTkJRVU1zVVVGQlVTeEZRVUZGTEVOQlFVTTdVVUZETVVJc1VVRkJVU3hEUVVGRExGZEJRVmNzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXp0SlFVTndReXhEUVVGRExFTkJRVU1zUTBGQlF6dERRVU5JTzB0QlFVMDdTVUZEVGl4UlFVRlJMRU5CUVVNc1JVRkJSU3hEUVVGRExGbEJRVmtzUlVGQlJTeExRVUZMTEVsQlFVa3NSVUZCUlR0UlFVTndReXhSUVVGUkxFTkJRVU1zVjBGQlZ5eERRVUZETEZsQlFWa3NRMEZCUXl4RFFVRkRPMGxCUTNCRExFTkJRVU1zUTBGQlF5eERRVUZETzBOQlEwZ2lmUT09Il0sIm5hbWVzIjpbInByZXNlbmNlIiwiUHJlc2VuY2UiLCJjbGllbnRJZCIsImN1cnJlbnRVUkwiLCJVUkwiLCJkb2N1bWVudCIsImxvY2F0aW9uIiwiaHJlZiIsImN1cnJlbnRQYXRoIiwicGF0aG5hbWUiLCJyZXBsYWNlIiwic3BsaXQiLCJicm93c2luZ1RpbWVzdGFtcCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJwcmVzZW5jZURhdGEiLCJkZXRhaWxzIiwibGFyZ2VJbWFnZUtleSIsInN0YXJ0VGltZXN0YW1wIiwidXBkYXRlQ2FsbGJhY2siLCJfZnVuY3Rpb24iLCJmdW5jdGlvbiIsInRoaXMiLCJwYXJhbWV0ZXIiLCJwcmVzZW50IiwicmVzZXREYXRhIiwiZGVmYXVsdERhdGEiLCJnZXRVUkxQYXJhbSIsInVybFBhcmFtIiwic2VhcmNoUGFyYW1zIiwiZ2V0IiwidGl0bGUiLCJhY3Rpb25SZXN1bHQiLCJ0aXRsZUZyb21VUkwiLCJkZWNvZGVVUkkiLCJzbGljZSIsImpvaW4iLCJyZXBsYWNlQWxsIiwicXVlcnlTZWxlY3RvciIsInRleHRDb250ZW50IiwidHJpbSIsImUiLCJuYW1lc3BhY2VEZXRhaWxzIiwiY2xhc3NMaXN0IiwiZmluZCIsInYiLCJ0ZXN0Iiwic3RhdGUiLCJ2YWx1ZSIsInRvTG93ZXJDYXNlIiwib24iLCJhc3luYyIsInNldEFjdGl2aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==
undefined;