var __webpack_exports__={};const presence=new Presence({clientId:"661889916635971616"});presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Pocket%20Casts/assets/logo.png"};if(document.querySelector(".controls").ariaLabel.includes("Playing")){e.details=document.querySelector("div.episode").textContent,e.state=document.querySelector(".player_podcast_title").textContent;const t=document.querySelector(".TimeTextstyled__TimeTextWrapper-sc-1yzkn0m-0.lmVDeu.current-time").textContent.split(":").map(Number);e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",3===t.length?e.startTimestamp=Date.now()-1e3*(3600*t[0]+60*t[1]+t[2]):e.startTimestamp=Date.now()-1e3*(60*t[0]+t[1])}else document.querySelector(".controls").ariaLabel.includes("Paused")&&(e.details=document.querySelector("div.episode").textContent,e.state=document.querySelector(".player_podcast_title").textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",delete e.startTimestamp);if(document.querySelector(".controls").ariaLabel.includes("Paused"))if("/podcasts"===document.location.pathname)e.details="Viewing subscriptions";else if(document.location.pathname.startsWith("/podcasts/")||document.location.pathname.startsWith("/discover/podcast/"))e.details="Viewing podcast",e.state=document.querySelector("*[class*='PodcastTitle-sc']").textContent;else if("/discover"===document.location.pathname)e.details="Viewing discover page";else if(document.location.pathname.startsWith("/discover/list/"))e.details="Viewing discover page",e.state=document.querySelectorAll("h1")[0].textContent;else switch(document.location.pathname){case"/new-releases":e.details="Viewing new releases";break;case"/in-progress":e.details="Viewing in-progress episodes";break;case"/starred":e.details="Viewing starred episodes";break;case"/profile":e.details="Viewing profile";break;case"/uploaded-files":e.details="Viewing uploaded files";break;case"/history":e.details="Viewing listening history";break;case"/stats":e.details="Viewing listening stats",e.state=`Listened for ${document.querySelectorAll(".styled__TimeListened-sc-1nd51k4-2")[0].textContent}`;break;default:document.location.pathname.startsWith("/settings/")&&(e.details="Changing settings")}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;