var __webpack_exports__={};const presence=new Presence({clientId:"808762696023146578"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused"});presence.on("UpdateData",(async()=>{const e=document.querySelector(".vp-video-wrapper .vp-video video"),t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/V/Vimeo/assets/logo.png"};if("/"===document.location.pathname)t.details="Browsing...";else if(e&&!isNaN(e.duration)){const s=document.querySelector("._1fHNK").textContent,a=document.querySelector(".js-user_link").textContent;[t.startTimestamp,t.endTimestamp]=presence.getTimestamps(Math.floor(e.currentTime),Math.floor(e.duration)),t.details=s,t.state=a,t.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/V/Vimeo/assets/logo.png",t.smallImageKey=e.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",t.smallImageText=e.paused?(await strings).pause:(await strings).play,e.paused&&(delete t.startTimestamp,delete t.endTimestamp),s&&a&&presence.setActivity(t,!e.paused)}else t.details="Browsing...",presence.setActivity(t)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLFNBQVcsSUFBSUMsU0FBUyxDQUMxQkMsU0FBVSx1QkFDVkMsUUFBVUgsU0FBU0ksV0FBVyxDQUM5QkMsS0FBTSxrQkFDTkMsTUFBTyxtQkFFWE4sU0FBU08sR0FBRyxjQUFjQyxVQUN0QixNQUFNQyxFQUFRQyxTQUFTQyxjQUFjLHFDQUFzQ0MsRUFBZSxDQUN0RkMsY0FBZSw4REFFbkIsR0FBbUMsTUFBL0JILFNBQVNJLFNBQVNDLFNBQ2xCSCxFQUFhSSxRQUFVLG1CQUN0QixHQUFJUCxJQUFVUSxNQUFNUixFQUFNUyxVQUFXLENBQ3RDLE1BQU1DLEVBQVFULFNBQVNDLGNBQWMsV0FBV1MsWUFBYUMsRUFBV1gsU0FBU0MsY0FBYyxpQkFBaUJTLGFBQy9HUixFQUFhVSxlQUFnQlYsRUFBYVcsY0FDdkN2QixTQUFTd0IsY0FBY0MsS0FBS0MsTUFBTWpCLEVBQU1rQixhQUFjRixLQUFLQyxNQUFNakIsRUFBTVMsV0FDM0VOLEVBQWFJLFFBQVVHLEVBQ3ZCUCxFQUFhZ0IsTUFBUVAsRUFDckJULEVBQWFDLGNBQ1QsNkRBQ0pELEVBQWFpQixjQUFnQnBCLEVBQU1xQixPQUFTLGdEQUFrRCwrQ0FDOUZsQixFQUFhbUIsZUFBaUJ0QixFQUFNcUIsY0FDdkIzQixTQUFTRyxhQUNUSCxTQUFTRSxLQUNsQkksRUFBTXFCLGdCQUNDbEIsRUFBYVUsc0JBQ2JWLEVBQWFXLGNBRXBCSixHQUFTRSxHQUNUckIsU0FBU2dDLFlBQVlwQixHQUFlSCxFQUFNcUIsT0FDbEQsTUFFSWxCLEVBQWFJLFFBQVUsY0FDdkJoQixTQUFTZ0MsWUFBWXBCLEVBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcHJlc2VuY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcHJlc2VuY2UgPSBuZXcgUHJlc2VuY2Uoe1xuICAgIGNsaWVudElkOiBcIjgwODc2MjY5NjAyMzE0NjU3OFwiLFxufSksIHN0cmluZ3MgPSBwcmVzZW5jZS5nZXRTdHJpbmdzKHtcbiAgICBwbGF5OiBcImdlbmVyYWwucGxheWluZ1wiLFxuICAgIHBhdXNlOiBcImdlbmVyYWwucGF1c2VkXCIsXG59KTtcbnByZXNlbmNlLm9uKFwiVXBkYXRlRGF0YVwiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgdmlkZW8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnZwLXZpZGVvLXdyYXBwZXIgLnZwLXZpZGVvIHZpZGVvXCIpLCBwcmVzZW5jZURhdGEgPSB7XG4gICAgICAgIGxhcmdlSW1hZ2VLZXk6IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9WL1ZpbWVvL2Fzc2V0cy9sb2dvLnBuZ1wiLFxuICAgIH07XG4gICAgaWYgKGRvY3VtZW50LmxvY2F0aW9uLnBhdGhuYW1lID09PSBcIi9cIilcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIkJyb3dzaW5nLi4uXCI7XG4gICAgZWxzZSBpZiAodmlkZW8gJiYgIWlzTmFOKHZpZGVvLmR1cmF0aW9uKSkge1xuICAgICAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuXzFmSE5LXCIpLnRleHRDb250ZW50LCB1cGxvYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuanMtdXNlcl9saW5rXCIpLnRleHRDb250ZW50O1xuICAgICAgICBbcHJlc2VuY2VEYXRhLnN0YXJ0VGltZXN0YW1wLCBwcmVzZW5jZURhdGEuZW5kVGltZXN0YW1wXSA9XG4gICAgICAgICAgICBwcmVzZW5jZS5nZXRUaW1lc3RhbXBzKE1hdGguZmxvb3IodmlkZW8uY3VycmVudFRpbWUpLCBNYXRoLmZsb29yKHZpZGVvLmR1cmF0aW9uKSk7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gdGl0bGU7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IHVwbG9hZGVyO1xuICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9XG4gICAgICAgICAgICBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvVi9WaW1lby9hc3NldHMvbG9nby5wbmdcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSB2aWRlby5wYXVzZWQgPyBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3BhdXNlLnBuZ1wiIDogXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9wbGF5LnBuZ1wiO1xuICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZVRleHQgPSB2aWRlby5wYXVzZWRcbiAgICAgICAgICAgID8gKGF3YWl0IHN0cmluZ3MpLnBhdXNlXG4gICAgICAgICAgICA6IChhd2FpdCBzdHJpbmdzKS5wbGF5O1xuICAgICAgICBpZiAodmlkZW8ucGF1c2VkKSB7XG4gICAgICAgICAgICBkZWxldGUgcHJlc2VuY2VEYXRhLnN0YXJ0VGltZXN0YW1wO1xuICAgICAgICAgICAgZGVsZXRlIHByZXNlbmNlRGF0YS5lbmRUaW1lc3RhbXA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRpdGxlICYmIHVwbG9hZGVyKVxuICAgICAgICAgICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkocHJlc2VuY2VEYXRhLCAhdmlkZW8ucGF1c2VkKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJCcm93c2luZy4uLlwiO1xuICAgICAgICBwcmVzZW5jZS5zZXRBY3Rpdml0eShwcmVzZW5jZURhdGEpO1xuICAgIH1cbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY0hKbGMyVnVZMlV1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SndjbVZ6Wlc1alpTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGRkJRVkVzUTBGQlF6dEpRVU0xUWl4UlFVRlJMRVZCUVVVc2IwSkJRVzlDTzBOQlF6bENMRU5CUVVNc1JVRkRSaXhQUVVGUExFZEJRVWNzVVVGQlVTeERRVUZETEZWQlFWVXNRMEZCUXp0SlFVTTNRaXhKUVVGSkxFVkJRVVVzYVVKQlFXbENPMGxCUTNaQ0xFdEJRVXNzUlVGQlJTeG5Ra0ZCWjBJN1EwRkRka0lzUTBGQlF5eERRVUZETzBGQlJVb3NVVUZCVVN4RFFVRkRMRVZCUVVVc1EwRkJReXhaUVVGWkxFVkJRVVVzUzBGQlN5eEpRVUZKTEVWQlFVVTdTVUZEY0VNc1RVRkJUU3hMUVVGTExFZEJRWEZDTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUTNCRUxHMURRVUZ0UXl4RFFVTnVReXhGUVVORUxGbEJRVmtzUjBGQmFVSTdVVUZETlVJc1lVRkJZU3hGUVVOYUxEUkVRVUUwUkR0TFFVTTNSQ3hEUVVGRE8wbEJSVWdzU1VGQlNTeFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFc1MwRkJTeXhIUVVGSE8xRkJRVVVzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4aFFVRmhMRU5CUVVNN1UwRkRlRVVzU1VGQlNTeExRVUZMTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkVzUTBGQlF5eEZRVUZGTzFGQlEzcERMRTFCUVUwc1MwRkJTeXhIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNc1YwRkJWeXhGUVVNeFJDeFJRVUZSTEVkQlFVY3NVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhsUVVGbExFTkJRVU1zUTBGQlF5eFhRVUZYTEVOQlFVTTdVVUZEYUVVc1EwRkJReXhaUVVGWkxFTkJRVU1zWTBGQll5eEZRVUZGTEZsQlFWa3NRMEZCUXl4WlFVRlpMRU5CUVVNN1dVRkRka1FzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZEY2tJc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNWMEZCVnl4RFFVRkRMRVZCUXpkQ0xFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVNeFFpeERRVUZETzFGQlEwZ3NXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhMUVVGTExFTkJRVU03VVVGRE4wSXNXVUZCV1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhSUVVGUkxFTkJRVU03VVVGRE9VSXNXVUZCV1N4RFFVRkRMR0ZCUVdFN1dVRkRla0lzTkVSQlFUUkVMRU5CUVVNN1VVRkRPVVFzV1VGQldTeERRVUZETEdGQlFXRXNSMEZCUnl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zYVVSQlFXTXNRMEZCUXl3clEwRkJXU3hEUVVGRE8xRkJRM1pGTEZsQlFWa3NRMEZCUXl4alFVRmpMRWRCUVVjc1MwRkJTeXhEUVVGRExFMUJRVTA3V1VGRGVrTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1RVRkJUU3hQUVVGUExFTkJRVU1zUTBGQlF5eExRVUZMTzFsQlEzWkNMRU5CUVVNc1EwRkJReXhEUVVGRExFMUJRVTBzVDBGQlR5eERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRPMUZCUlhoQ0xFbEJRVWtzUzBGQlN5eERRVUZETEUxQlFVMHNSVUZCUlR0WlFVTnFRaXhQUVVGUExGbEJRVmtzUTBGQlF5eGpRVUZqTEVOQlFVTTdXVUZEYmtNc1QwRkJUeXhaUVVGWkxFTkJRVU1zV1VGQldTeERRVUZETzFOQlEycERPMUZCUlVRc1NVRkJTU3hMUVVGTExFbEJRVWtzVVVGQlVUdFpRVUZGTEZGQlFWRXNRMEZCUXl4WFFVRlhMRU5CUVVNc1dVRkJXU3hGUVVGRkxFTkJRVU1zUzBGQlN5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRPMHRCUTNwRk8xTkJRVTA3VVVGRFRpeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMR0ZCUVdFc1EwRkJRenRSUVVWeVF5eFJRVUZSTEVOQlFVTXNWMEZCVnl4RFFVRkRMRmxCUVZrc1EwRkJReXhEUVVGRE8wdEJRMjVETzBGQlEwWXNRMEZCUXl4RFFVRkRMRU5CUVVNaWZRPT0iXSwibmFtZXMiOlsicHJlc2VuY2UiLCJQcmVzZW5jZSIsImNsaWVudElkIiwic3RyaW5ncyIsImdldFN0cmluZ3MiLCJwbGF5IiwicGF1c2UiLCJvbiIsImFzeW5jIiwidmlkZW8iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwcmVzZW5jZURhdGEiLCJsYXJnZUltYWdlS2V5IiwibG9jYXRpb24iLCJwYXRobmFtZSIsImRldGFpbHMiLCJpc05hTiIsImR1cmF0aW9uIiwidGl0bGUiLCJ0ZXh0Q29udGVudCIsInVwbG9hZGVyIiwic3RhcnRUaW1lc3RhbXAiLCJlbmRUaW1lc3RhbXAiLCJnZXRUaW1lc3RhbXBzIiwiTWF0aCIsImZsb29yIiwiY3VycmVudFRpbWUiLCJzdGF0ZSIsInNtYWxsSW1hZ2VLZXkiLCJwYXVzZWQiLCJzbWFsbEltYWdlVGV4dCIsInNldEFjdGl2aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==
undefined;