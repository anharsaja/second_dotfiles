var __webpack_exports__={};const presence=new Presence({clientId:"887996093189742612"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{let e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/WebProfiles/assets/logo.png"};const{pathname:t,href:s}=document.location,[n,i]=await Promise.all([presence.getSetting("timestamp"),presence.getSetting("buttons")]),a={"/about/team":{details:"Viewing page...",state:"Team"},"/about/partners":{details:"Viewing page...",state:"Partners"},"/discover":{details:"Viewing page...",state:"Discover"},"/@me/settings":{details:"Editing my profile..."},"/login":{details:"Logging in..."},"/register":{details:"Registering..."}};for(const[s,n]of Object.entries(a))t.includes(s)&&(e={...e,...n});"/"===t?e.details="Viewing home page":t.includes("/u/")?(e.details=`Viewing user: ${document.querySelector("p.text-5xl.text-white")?.textContent??"Unknown"}`,e.state=`${document.querySelector("p.mt-3")?.textContent} - ❤️ ${document.querySelector("#likes-count")?.textContent||0}`,e.buttons=[{label:"View Profile",url:s}]):t.includes("/search")?(e.details="Searching for...",e.state=s.split("/search/")[1]??"Unknown",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):"/@me"===t&&(e.details="Viewing my profile",e.buttons=[{label:"View profile",url:`https://webprofiles.me/u/${document.querySelector("a.text-5xl")?.textContent}`}]),i||delete e.buttons,n&&(e.startTimestamp=browsingTimestamp),presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLFNBQVcsSUFBSUMsU0FBUyxDQUMxQkMsU0FBVSx1QkFDVkMsa0JBQW9CQyxLQUFLQyxNQUFNQyxLQUFLQyxNQUFRLEtBQ2hEUCxTQUFTUSxHQUFHLGNBQWNDLFVBQ3RCLElBQUlDLEVBQWUsQ0FDZkMsY0FBZSxvRUFFbkIsTUFBTSxTQUFFQyxFQUFRLEtBQUVDLEdBQVNDLFNBQVNDLFVBQVdDLEVBQWVDLFNBQXFCQyxRQUFRQyxJQUFJLENBQzNGbkIsU0FBU29CLFdBQVcsYUFDcEJwQixTQUFTb0IsV0FBVyxhQUNwQkMsRUFBUSxDQUNSLGNBQWUsQ0FBRUMsUUFBUyxrQkFBbUJDLE1BQU8sUUFDcEQsa0JBQW1CLENBQUVELFFBQVMsa0JBQW1CQyxNQUFPLFlBQ3hELFlBQWEsQ0FBRUQsUUFBUyxrQkFBbUJDLE1BQU8sWUFDbEQsZ0JBQWlCLENBQUVELFFBQVMseUJBQzVCLFNBQVUsQ0FBRUEsUUFBUyxpQkFDckIsWUFBYSxDQUFFQSxRQUFTLG1CQUU1QixJQUFLLE1BQU9FLEVBQU1DLEtBQVNDLE9BQU9DLFFBQVFOLEdBQ2xDVCxFQUFTZ0IsU0FBU0osS0FDbEJkLEVBQWUsSUFBS0EsS0FBaUJlLElBQzVCLE1BQWJiLEVBQ0FGLEVBQWFZLFFBQVUsb0JBQ2xCVixFQUFTZ0IsU0FBUyxRQUN2QmxCLEVBQWFZLFFBQVUsaUJBQWlCUixTQUFTZSxjQUFjLDBCQUEwQkMsYUFBZSxZQUN4R3BCLEVBQWFhLE1BQVEsR0FBR1QsU0FBU2UsY0FBYyxXQUFXQyxvQkFBb0JoQixTQUFTZSxjQUFjLGlCQUFpQkMsYUFBZSxJQUNySXBCLEVBQWFxQixRQUFVLENBQ25CLENBQ0lDLE1BQU8sZUFDUEMsSUFBS3BCLEtBSVJELEVBQVNnQixTQUFTLFlBQ3ZCbEIsRUFBYVksUUFBVSxtQkFDdkJaLEVBQWFhLE1BQVFWLEVBQUtxQixNQUFNLFlBQVksSUFBTSxVQUNsRHhCLEVBQWF5QixjQUFnQixrREFFWCxTQUFidkIsSUFDTEYsRUFBYVksUUFBVSxxQkFDdkJaLEVBQWFxQixRQUFVLENBQ25CLENBQ0lDLE1BQU8sZUFDUEMsSUFBSyw0QkFBNEJuQixTQUFTZSxjQUFjLGVBQWVDLGlCQUk5RWIsVUFDTVAsRUFBYXFCLFFBQ3BCZixJQUNBTixFQUFhMEIsZUFBaUJqQyxtQkFDbENILFNBQVNxQyxZQUFZM0IsRUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3ByZXNlbmNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHByZXNlbmNlID0gbmV3IFByZXNlbmNlKHtcbiAgICBjbGllbnRJZDogXCI4ODc5OTYwOTMxODk3NDI2MTJcIixcbn0pLCBicm93c2luZ1RpbWVzdGFtcCA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApO1xucHJlc2VuY2Uub24oXCJVcGRhdGVEYXRhXCIsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgcHJlc2VuY2VEYXRhID0ge1xuICAgICAgICBsYXJnZUltYWdlS2V5OiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvVy9XZWJQcm9maWxlcy9hc3NldHMvbG9nby5wbmdcIixcbiAgICB9O1xuICAgIGNvbnN0IHsgcGF0aG5hbWUsIGhyZWYgfSA9IGRvY3VtZW50LmxvY2F0aW9uLCBbc2hvd1RpbWVzdGFtcCwgc2hvd0J1dHRvbnNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICBwcmVzZW5jZS5nZXRTZXR0aW5nKFwidGltZXN0YW1wXCIpLFxuICAgICAgICBwcmVzZW5jZS5nZXRTZXR0aW5nKFwiYnV0dG9uc1wiKSxcbiAgICBdKSwgcGFnZXMgPSB7XG4gICAgICAgIFwiL2Fib3V0L3RlYW1cIjogeyBkZXRhaWxzOiBcIlZpZXdpbmcgcGFnZS4uLlwiLCBzdGF0ZTogXCJUZWFtXCIgfSxcbiAgICAgICAgXCIvYWJvdXQvcGFydG5lcnNcIjogeyBkZXRhaWxzOiBcIlZpZXdpbmcgcGFnZS4uLlwiLCBzdGF0ZTogXCJQYXJ0bmVyc1wiIH0sXG4gICAgICAgIFwiL2Rpc2NvdmVyXCI6IHsgZGV0YWlsczogXCJWaWV3aW5nIHBhZ2UuLi5cIiwgc3RhdGU6IFwiRGlzY292ZXJcIiB9LFxuICAgICAgICBcIi9AbWUvc2V0dGluZ3NcIjogeyBkZXRhaWxzOiBcIkVkaXRpbmcgbXkgcHJvZmlsZS4uLlwiIH0sXG4gICAgICAgIFwiL2xvZ2luXCI6IHsgZGV0YWlsczogXCJMb2dnaW5nIGluLi4uXCIgfSxcbiAgICAgICAgXCIvcmVnaXN0ZXJcIjogeyBkZXRhaWxzOiBcIlJlZ2lzdGVyaW5nLi4uXCIgfSxcbiAgICB9O1xuICAgIGZvciAoY29uc3QgW3BhdGgsIGRhdGFdIG9mIE9iamVjdC5lbnRyaWVzKHBhZ2VzKSlcbiAgICAgICAgaWYgKHBhdGhuYW1lLmluY2x1ZGVzKHBhdGgpKVxuICAgICAgICAgICAgcHJlc2VuY2VEYXRhID0geyAuLi5wcmVzZW5jZURhdGEsIC4uLmRhdGEgfTtcbiAgICBpZiAocGF0aG5hbWUgPT09IFwiL1wiKVxuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBob21lIHBhZ2VcIjtcbiAgICBlbHNlIGlmIChwYXRobmFtZS5pbmNsdWRlcyhcIi91L1wiKSkge1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IGBWaWV3aW5nIHVzZXI6ICR7ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInAudGV4dC01eGwudGV4dC13aGl0ZVwiKT8udGV4dENvbnRlbnQgPz8gXCJVbmtub3duXCJ9YDtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gYCR7ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInAubXQtM1wiKT8udGV4dENvbnRlbnR9IC0g4p2k77iPICR7ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNsaWtlcy1jb3VudFwiKT8udGV4dENvbnRlbnQgfHwgMH1gO1xuICAgICAgICBwcmVzZW5jZURhdGEuYnV0dG9ucyA9IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJWaWV3IFByb2ZpbGVcIixcbiAgICAgICAgICAgICAgICB1cmw6IGhyZWYsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdO1xuICAgIH1cbiAgICBlbHNlIGlmIChwYXRobmFtZS5pbmNsdWRlcyhcIi9zZWFyY2hcIikpIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlNlYXJjaGluZyBmb3IuLi5cIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gaHJlZi5zcGxpdChcIi9zZWFyY2gvXCIpWzFdID8/IFwiVW5rbm93blwiO1xuICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvc2VhcmNoLnBuZ1wiO1xuICAgIH1cbiAgICBlbHNlIGlmIChwYXRobmFtZSA9PT0gXCIvQG1lXCIpIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgbXkgcHJvZmlsZVwiO1xuICAgICAgICBwcmVzZW5jZURhdGEuYnV0dG9ucyA9IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJWaWV3IHByb2ZpbGVcIixcbiAgICAgICAgICAgICAgICB1cmw6IGBodHRwczovL3dlYnByb2ZpbGVzLm1lL3UvJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYS50ZXh0LTV4bFwiKT8udGV4dENvbnRlbnR9YCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF07XG4gICAgfVxuICAgIGlmICghc2hvd0J1dHRvbnMpXG4gICAgICAgIGRlbGV0ZSBwcmVzZW5jZURhdGEuYnV0dG9ucztcbiAgICBpZiAoc2hvd1RpbWVzdGFtcClcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXJ0VGltZXN0YW1wID0gYnJvd3NpbmdUaW1lc3RhbXA7XG4gICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkocHJlc2VuY2VEYXRhKTtcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY0hKbGMyVnVZMlV1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SndjbVZ6Wlc1alpTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGRkJRVkVzUTBGQlF6dEpRVU0xUWl4UlFVRlJMRVZCUVVVc2IwSkJRVzlDTzBOQlF6bENMRU5CUVVNc1JVRkRSaXhwUWtGQmFVSXNSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVWQlFVVXNSMEZCUnl4SlFVRkpMRU5CUVVNc1EwRkJRenRCUVVWdVJDeFJRVUZSTEVOQlFVTXNSVUZCUlN4RFFVRkRMRmxCUVZrc1JVRkJSU3hMUVVGTExFbEJRVWtzUlVGQlJUdEpRVU53UXl4SlFVRkpMRmxCUVZrc1IwRkJhVUk3VVVGRGFFTXNZVUZCWVN4RlFVTmFMR3RGUVVGclJUdExRVU51UlN4RFFVRkRPMGxCUlVZc1RVRkJUU3hGUVVGRkxGRkJRVkVzUlVGQlJTeEpRVUZKTEVWQlFVVXNSMEZCUnl4UlFVRlJMRU5CUVVNc1VVRkJVU3hGUVVNelF5eERRVUZETEdGQlFXRXNSVUZCUlN4WFFVRlhMRU5CUVVNc1IwRkJSeXhOUVVGTkxFOUJRVThzUTBGQlF5eEhRVUZITEVOQlFVTTdVVUZEYUVRc1VVRkJVU3hEUVVGRExGVkJRVlVzUTBGQlZTeFhRVUZYTEVOQlFVTTdVVUZEZWtNc1VVRkJVU3hEUVVGRExGVkJRVlVzUTBGQlZTeFRRVUZUTEVOQlFVTTdTMEZEZGtNc1EwRkJReXhGUVVOR0xFdEJRVXNzUjBGQmFVTTdVVUZEY2tNc1lVRkJZU3hGUVVGRkxFVkJRVVVzVDBGQlR5eEZRVUZGTEdsQ1FVRnBRaXhGUVVGRkxFdEJRVXNzUlVGQlJTeE5RVUZOTEVWQlFVVTdVVUZETlVRc2FVSkJRV2xDTEVWQlFVVXNSVUZCUlN4UFFVRlBMRVZCUVVVc2FVSkJRV2xDTEVWQlFVVXNTMEZCU3l4RlFVRkZMRlZCUVZVc1JVRkJSVHRSUVVOd1JTeFhRVUZYTEVWQlFVVXNSVUZCUlN4UFFVRlBMRVZCUVVVc2FVSkJRV2xDTEVWQlFVVXNTMEZCU3l4RlFVRkZMRlZCUVZVc1JVRkJSVHRSUVVNNVJDeGxRVUZsTEVWQlFVVXNSVUZCUlN4UFFVRlBMRVZCUVVVc2RVSkJRWFZDTEVWQlFVVTdVVUZEY2tRc1VVRkJVU3hGUVVGRkxFVkJRVVVzVDBGQlR5eEZRVUZGTEdWQlFXVXNSVUZCUlR0UlFVTjBReXhYUVVGWExFVkJRVVVzUlVGQlJTeFBRVUZQTEVWQlFVVXNaMEpCUVdkQ0xFVkJRVVU3UzBGRE1VTXNRMEZCUXp0SlFVVklMRXRCUVVzc1RVRkJUU3hEUVVGRExFbEJRVWtzUlVGQlJTeEpRVUZKTEVOQlFVTXNTVUZCU1N4TlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRExFdEJRVXNzUTBGQlF6dFJRVU12UXl4SlFVRkpMRkZCUVZFc1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETzFsQlFVVXNXVUZCV1N4SFFVRkhMRVZCUVVVc1IwRkJSeXhaUVVGWkxFVkJRVVVzUjBGQlJ5eEpRVUZKTEVWQlFVVXNRMEZCUXp0SlFVVXhSU3hKUVVGSkxGRkJRVkVzUzBGQlN5eEhRVUZITzFGQlFVVXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXh0UWtGQmJVSXNRMEZCUXp0VFFVTTFSQ3hKUVVGSkxGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUVVVN1VVRkRiRU1zV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4cFFrRkRkRUlzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4MVFrRkJkVUlzUTBGQlF5eEZRVUZGTEZkQlFWY3NTVUZCU1N4VFFVTnFSU3hGUVVGRkxFTkJRVU03VVVGRFNDeFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRWRCUTNCQ0xGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNVVUZCVVN4RFFVRkRMRVZCUVVVc1YwRkRia01zVTBGQlV5eFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMR05CUVdNc1EwRkJReXhGUVVGRkxGZEJRVmNzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXp0UlFVTndSU3haUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITzFsQlEzUkNPMmRDUVVORExFdEJRVXNzUlVGQlJTeGpRVUZqTzJkQ1FVTnlRaXhIUVVGSExFVkJRVVVzU1VGQlNUdGhRVU5VTzFOQlEwUXNRMEZCUXp0TFFVTkdPMU5CUVUwc1NVRkJTU3hSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXl4RlFVRkZPMUZCUTNoRExGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NhMEpCUVd0Q0xFTkJRVU03VVVGRE1VTXNXVUZCV1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhKUVVGSkxGTkJRVk1zUTBGQlF6dFJRVU0xUkN4WlFVRlpMRU5CUVVNc1lVRkJZU3h0UkVGQlowSXNRMEZCUXp0TFFVTXpRenRUUVVGTkxFbEJRVWtzVVVGQlVTeExRVUZMTEUxQlFVMHNSVUZCUlR0UlFVTXZRaXhaUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEc5Q1FVRnZRaXhEUVVGRE8xRkJRelZETEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjN1dVRkRkRUk3WjBKQlEwTXNTMEZCU3l4RlFVRkZMR05CUVdNN1owSkJRM0pDTEVkQlFVY3NSVUZCUlN3MFFrRkRTaXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEZsQlFWa3NRMEZCUXl4RlFVRkZMRmRCUTNaRExFVkJRVVU3WVVGRFJqdFRRVU5FTEVOQlFVTTdTMEZEUmp0SlFVVkVMRWxCUVVrc1EwRkJReXhYUVVGWE8xRkJRVVVzVDBGQlR5eFpRVUZaTEVOQlFVTXNUMEZCVHl4RFFVRkRPMGxCUXpsRExFbEJRVWtzWVVGQllUdFJRVUZGTEZsQlFWa3NRMEZCUXl4alFVRmpMRWRCUVVjc2FVSkJRV2xDTEVOQlFVTTdTVUZGYmtVc1VVRkJVU3hEUVVGRExGZEJRVmNzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXp0QlFVTndReXhEUVVGRExFTkJRVU1zUTBGQlF5SjkiXSwibmFtZXMiOlsicHJlc2VuY2UiLCJQcmVzZW5jZSIsImNsaWVudElkIiwiYnJvd3NpbmdUaW1lc3RhbXAiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93Iiwib24iLCJhc3luYyIsInByZXNlbmNlRGF0YSIsImxhcmdlSW1hZ2VLZXkiLCJwYXRobmFtZSIsImhyZWYiLCJkb2N1bWVudCIsImxvY2F0aW9uIiwic2hvd1RpbWVzdGFtcCIsInNob3dCdXR0b25zIiwiUHJvbWlzZSIsImFsbCIsImdldFNldHRpbmciLCJwYWdlcyIsImRldGFpbHMiLCJzdGF0ZSIsInBhdGgiLCJkYXRhIiwiT2JqZWN0IiwiZW50cmllcyIsImluY2x1ZGVzIiwicXVlcnlTZWxlY3RvciIsInRleHRDb250ZW50IiwiYnV0dG9ucyIsImxhYmVsIiwidXJsIiwic3BsaXQiLCJzbWFsbEltYWdlS2V5Iiwic3RhcnRUaW1lc3RhbXAiLCJzZXRBY3Rpdml0eSJdLCJzb3VyY2VSb290IjoiIn0=
undefined;