var __webpack_exports__={};const presence=new Presence({clientId:"843058220398542878"});presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/S/SiriusXM/assets/logo.jpg"};switch(document.location.pathname){case"/home/foryou":e.details="Viewing SiriusXM Home";break;case"/home/music":e.details="Viewing Music Home";break;case"/home/sports":e.details="Viewing Sports Home";break;case"/home/news":e.details="Viewing News Home";break;case"/home/entertainment":e.details="Viewing Talk Home";break;case"/home/howard":e.details="Viewing Howard Stern Home";break;case"/favorites/channels":e.details="Viewing Favorite Channels";break;case"/favorites/shows":e.details="Viewing Favorite Shows";break;case"/favorites/episodes":e.details="Viewing Favorite Episodes";break;case"/recently-played":e.details="Viewing Recently Played Stations";break;case"/query":e.details="Searching SiriusXM";break;default:document.location.pathname.includes("/query")?(e.details="Viewing: ",e.state=document.querySelector('[name="searchText"]').value):document.location.pathname.includes("/category-listing")?(e.details="Viewing Category: ",e.state=document.querySelector("span.sxm-breadcrumb__text").textContent):e.details="Unknown page"}if(document.querySelector(".sxm-player-controls.no-select")){const t={channel:document.querySelector(".channel-name")?.textContent,track:document.querySelector(".track-name")?.textContent??"Loading",artist:document.querySelector(".artist-name")?.textContent??"Loading"};t.track===t.artist?e.details=t.track:t.channel?e.details=`${t.track} - ${t.artist}`:e.details=t.track,t.channel?e.state=t.channel:e.state=t.artist}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;