var __webpack_exports__={};const presence=new Presence({clientId:"630236276829716483"}),browsingTimestamp=Math.floor(Date.now()/1e3);async function getStrings(){return presence.getStrings({play:"general.playing",pause:"general.paused",browsing:"general.browsing",watchingMovie:"general.watchingMovie",watchingSeries:"general.watchingSeries",watchEpisode:"general.buttonViewEpisode",watchVideo:"general.buttonWatchVideo",searchFor:"general.searchFor",searchSomething:"general.searchSomething"},await presence.getSetting("lang").catch((()=>"en")))}let strings,title,subtitle,oldLang=null;presence.on("UpdateData",(async()=>{const[e,t,s,i]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("time"),presence.getSetting("buttons")]),{hostname:n,href:a,pathname:r}=document.location,l={startTimestamp:browsingTimestamp,type:3};switch(oldLang===e&&strings||(oldLang=e,strings=await getStrings()),!0){case/(www\.)?disneyplus\.com/.test(n):switch(l.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/Disney+/assets/logo.png",!0){case r.includes("play"):if(t)l.details="Watching content";else{l.startTimestamp&&delete l.startTimestamp,l.details=document.querySelector(".title-field.body-copy")?.textContent,l.state=document.querySelector(".subtitle-field")?.textContent;const e=!!document.querySelector("[aria-label='Play']"),t=document.querySelector(".time-remaining-label")?.textContent;l.smallImageKey=e?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",l.smallImageText=e?strings.pause:strings.play,!e&&t&&(l.endTimestamp=Date.now()/1e3+presence.timestampFromFormat(t))}l.buttons=[{label:"Watch Content",url:a}];break;case r.includes("entity"):{null!==document.querySelector("#episodes_control")?(l.details=t?"Viewing a series":"Viewing series",l.buttons=[{label:"View Series",url:a}]):(l.details=t?"Viewing a movie":"Viewing movie",l.buttons=[{label:"View Movie",url:a}]);const e=document.querySelector('[data-testid="details-title-treatment"] img, .explore-ui-main-content-container img');e?l.state=e.getAttribute("alt"):document.title.includes("|")?l.state=document.title.split("|")[0].trim():l.state=document.title;break}case r.includes("search"):{const e=document.querySelector('input[type="search"]');e?.value?(l.details=t?strings.searchSomething:strings.searchFor,l.state=e.value,l.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):l.details=strings.browsing;break}case r.includes("home"):l.details=strings.browsing;break;case r.includes("watchlist"):l.details=t?strings.browsing:"Browsing their watchlist";break;case r.includes("series"):{l.details=t?strings.browsing:"Browsing series";const e=document.querySelector('[id="explore-ui-main-content-container"] div div [aria-selected="true"]')?.textContent?.toLowerCase();null!==e&&(l.state=`Sorted by ${e}`);break}case r.includes("movies"):{l.details=t?strings.browsing:"Browsing movies";const e=document.querySelector('[id="explore-ui-main-content-container"] div div [aria-selected="true"]')?.textContent?.toLowerCase();null!==e&&(l.state=`Sorted by ${e}`);break}case r.includes("page"):l.details=t?"Browsing videos":`Viewing ${document.title?.match(/(pixar)|(marvel)|(star wars)|(national geographic)|(star)|(disney)/im)[0]?.toLowerCase()} content`;break;default:t?l.details="No information":document.title.includes("|")?l.details=`Page: ${document.title.split("|")[0].trim()}`:l.details=`Page: ${document.title}`}break;case/(www\.)?hotstar\.com/.test(n):{const e=document.querySelector("video");l.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/Disney+/assets/0.png",e&&!isNaN(e.duration)&&([l.startTimestamp,l.endTimestamp]=presence.getTimestampsfromMedia(e),title=document.querySelector("h1.ON_IMAGE.BUTTON1_MEDIUM")?.textContent,subtitle=document.querySelector("p.ON_IMAGE_ALT2.BUTTON3_MEDIUM")?.textContent,title||presence.error("Unable to get the title"),t?l.state=subtitle?strings.watchingSeries:strings.watchingMovie:(l.details=title,l.state=subtitle||"Movie"),l.smallImageKey=e.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",l.smallImageText=e.paused?strings.pause:strings.play,!e.paused&&s||(delete l.startTimestamp,delete l.endTimestamp),!t&&i&&(l.buttons=[{label:strings.watchVideo,url:a}]),title&&presence.setActivity(l,!e.paused));break}}!l.startTimestamp&&!l.endTimestamp||s||(delete l.startTimestamp,delete l.endTimestamp),t&&l.state&&delete l.state,i&&!t||!l.buttons||delete l.buttons,l.details?presence.setActivity(l):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;