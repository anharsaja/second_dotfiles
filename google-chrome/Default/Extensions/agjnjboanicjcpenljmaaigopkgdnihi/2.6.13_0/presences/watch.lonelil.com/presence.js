var __webpack_exports__={};const presence=new Presence({clientId:"1147910465134002276"}),getStrings=async()=>presence.getStrings({play:"general.playing",pause:"general.paused",viewAMovie:"general.viewAMovie",viewAShow:"general.viewAShow",viewAnime:"general.viewAnime",watchingMovie:"general.watchingMovie",watchingShow:"general.watchingShow",watchingLive:"general.watchingLive",viewingHomePage:"general.viewHome",loading:"kahoot.loadingPage",browsing:"general.browsing",buttonWatchMovie:"general.buttonWatchMovie",buttonWatchEpisode:"general.buttonViewEpisode",buttonWatchStream:"general.buttonWatchStream",buttonViewMovie:"general.buttonViewMovie",buttonViewShow:"general.buttonViewShow"},await presence.getSetting("lang").catch((()=>"en")));let strings,since=Math.floor(Date.now()/1e3),lastType="",oldLang=null;presence.on("UpdateData",(async()=>{if(document.querySelector("#state")){const e=JSON.parse(document.querySelector("#state").getAttribute("data-state"));e.type!==lastType&&(lastType=e.type,since=Math.floor(Date.now()/1e3));const t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/watch.lonelil.com/assets/logo.png",smallImageText:"watch.lonelil.com",smallImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/watch.lonelil.com/assets/logo.png",startTimestamp:since},a=await presence.getSetting("lang").catch((()=>"en"));let i={};switch(oldLang===a&&strings||(oldLang=a,strings=await getStrings()),!0){case e.type.startsWith("home"):i=e.type.includes("-")?{...t,details:`${strings.browsing.slice(0,-3)} ${e.shownType}`,largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/watch.lonelil.com/assets/0.png"}:{...t,details:strings.viewingHomePage,largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/watch.lonelil.com/assets/0.png"};break;case e.type.startsWith("details"):i={...t,details:"anime"===e.item.type?strings.viewAnime.replace(":",""):"movie"===e.item.type?strings.viewAMovie:strings.viewAShow,state:e.item.title,largeImageKey:e.item.poster,smallImageText:e.item.shownType,buttons:[{label:"movie"===e.item.type?strings.buttonViewMovie:strings.buttonViewShow,url:`https://watch.lonelil.com/${e.item.type}/${e.item.id}`}]};break;case e.type.startsWith("watch"):if(i={details:e.item.details||("movie"===e.item.type?strings.watchingMovie:"tv"===e.item.type?strings.watchingLive:strings.watchingShow),state:e.item.title,largeImageKey:e.item.poster,smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/play.png",smallImageText:strings.play,buttons:[{label:"movie"===e.item.type?strings.buttonWatchMovie:"tv"===e.item.type?strings.buttonWatchStream:strings.buttonWatchEpisode,url:`https://watch.lonelil.com/watch/${e.item.type}/${e.item.id}`}]},e.paused)i.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",i.smallImageText=strings.pause;else{const e=document.querySelector('.jw-text-elapsed[role="timer"]')?.textContent,t=document.querySelector('.jw-text-duration[role="timer"]')?.textContent;e&&t&&([i.startTimestamp,i.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(e),presence.timestampFromFormat(t)))}break;case"loading"===e.type:delete t.smallImageKey,i={...t,details:strings.loading};break;case e.type.startsWith("other"):delete t.smallImageKey,i={...t,details:e.title};break;default:presence.clearActivity()}presence.setActivity(i)}else presence.clearActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;