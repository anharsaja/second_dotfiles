var __webpack_exports__={};const presence=new Presence({clientId:"858408468854997052"}),browsingTimestamp=Math.floor(Date.now()/1e3),assets={users:"https://cdn.rcd.gg/PreMiD/websites/S/SteamDB/assets/1.png",game:"https://cdn.rcd.gg/PreMiD/websites/S/SteamDB/assets/2.png",dlc:"https://cdn.rcd.gg/PreMiD/websites/S/SteamDB/assets/3.png",tool:"https://cdn.rcd.gg/PreMiD/websites/S/SteamDB/assets/4.png",config:"https://cdn.rcd.gg/PreMiD/websites/S/SteamDB/assets/5.png",unknown:"https://cdn.rcd.gg/PreMiD/websites/S/SteamDB/assets/6.png",music:"https://cdn.rcd.gg/PreMiD/websites/S/SteamDB/assets/7.png",application:"https://cdn.rcd.gg/PreMiD/websites/S/SteamDB/assets/8.png",video:"https://cdn.rcd.gg/PreMiD/websites/S/SteamDB/assets/9.png"};presence.on("UpdateData",(async()=>{let e,t,s;const[a,n,i]=await Promise.all([presence.getSetting("time"),presence.getSetting("accountValue"),presence.getSetting("buttons")]),o=document.querySelector("#js-tag-select"),l=document.querySelector("#inputCategory"),r=document.querySelector("#inputType2")||document.querySelector("#inputType"),c=document.querySelector("#inputKeyName")||document.querySelector("#inputKeyName2"),d=document.querySelector("#inputOperator2")||document.querySelector("#inputOperator"),u=document.querySelector("a.tabnav-tab.selected"),g=document.querySelector("#js-category-select"),p=document.querySelectorAll('[aria-label="Search"],[type="search"],input.ais-SearchBox-input'),b=document.querySelectorAll("h1.header-title,h1.header-title span,h1.header-title.flex-grow"),m=document.querySelectorAll("h2.header-title,h2.header-subtitle"),{pathname:w,href:h,hostname:S}=document.location,y={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/S/SteamDB/assets/logo.png",startTimestamp:browsingTimestamp};for(const t of p)t?.value&&!e&&(e=t);for(const e of b)e?.textContent&&!t&&(t=e);for(const e of m)e?.textContent&&!s&&(s=e);switch(S){case"steamdb.info":if(e?.value)return y.details="Searching for",y.state=e.value,y.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/S/SteamDB/assets/0.png",presence.setActivity(y);switch(w.split("/")[1]){case"graph":y.details="Viewing Steam Charts","0"!==o.value&&(y.state=`Filter: ${o.options[o.selectedIndex].textContent}`),"0"!==g.value&&(y.state=`Filter: ${g.options[g.selectedIndex].textContent}`);break;case"changelist":y.details=t?.textContent,y.state=s?.textContent,y.buttons=[{label:"View Page",url:h}];break;case"calculator":"/calculator/"===w?(y.details="Viewing Calculator",y.state="Selecting User"):(y.details="Viewing Calculator",0===n?y.state=`${document.querySelector(".player-name")?.textContent} (${Array.from(document.querySelector(".number-price").childNodes).find((e=>"#text"===e.nodeName)).textContent})`:1===n&&(y.state=`${document.querySelector(".player-name")?.textContent} (${Array.from(document.querySelector(".number-price-lowest").childNodes).find((e=>"#text"===e.nodeName)).textContent})`),y.buttons=[{label:"View Page",url:h}]);break;case"app":{const e=document.querySelector("tbody").children.item(1).children.item(1).textContent;y.state=document.querySelector("h1").lastChild.textContent,y.smallImageKey=assets[e.toLowerCase()],y.smallImageText=e,y.buttons=[{label:"View Page",url:h}],u?y.details=`Viewing App ${u.childNodes[1].textContent}`:w.includes("/patchnotes/")&&(y.details="Viewing App Patchnotes");break}case"apps":y.details="Browsing Applications",y.state=s?.textContent;break;case"sub":y.state=document.querySelector("h1").lastChild.textContent,y.buttons=[{label:"View Page",url:h}],y.details=`Viewing Sub ${u.childNodes[1].textContent}`;break;case"subs":y.details="Browsing Packages",y.state=s?.textContent;break;case"bundle":y.details="Viewing Bundle",y.state=document.querySelector("h1").lastChild.textContent,y.buttons=[{label:"View Page",url:h}];break;case"bundles":y.details="Browsing Bundles",y.state=`Page ${document.querySelector("a.paginate_button.active").textContent}/${document.querySelectorAll("a.paginate_button").item(7).textContent}`;break;case"blog":"/blog/"===w?y.details="Browsing Blog":w.includes("/tag/")?(y.details="Browsing Blog Tag",y.state=t?.textContent):(y.details="Viewing Blog Post",y.state=document.querySelector("#blog-post-title").textContent),y.buttons=[{label:"View Page",url:h}];break;case"faq":y.details="Viewing FAQ";break;case"donate":y.details="Viewing How To Help";break;case"extension":y.details="Viewing Extension";break;case"history":w.includes("/subs/")?y.details="Viewing Global Package History":y.details="Viewing Global App History";break;case"pricechanges":h.includes("subs")?y.details="Viewing App Price Changes":y.details="Viewing Package Price Changes";break;case"tags":y.details="Browsing Game Tags";break;case"tag":y.details=`Browsing Tag: ${t?.textContent.split("»")[1]}`;break;case"tech":if("/tech/"===w)y.details="Browsing Technologies";else{y.buttons=[{label:"View Page",url:h}];const e=t.textContent.split("»")[2];switch(w.split("/")[2]){case"Engine":y.details=`Browsing Engine ${e}`;break;case"SDK":y.details=`Browsing SDK ${e}`;break;case"Emulator":y.details=`Browsing Emulator ${e}`;break;case"Container":y.details=`Browsing Container ${e}`;break;case"AntiCheat":y.details=`Browsing AntiCheat ${e}`}}break;case"patchnotes":"/patchnotes/"===w?y.details="Browsing Patch Notes":(y.details="Viewing Patchnote",y.state=" "!==s?.textContent?`${t.firstElementChild.textContent} ${s?.textContent}`:t.textContent,y.buttons=[{label:"View Page",url:h}]);break;case"discord":y.details="Viewing Discord Info";break;case"watching":y.buttons=[{label:"View Page",url:h}],y.details="Your watch list"!==t?.textContent?`Viewing ${t?.textContent}`:"Viewing their own watch list";break;case"freepackages":y.details="Viewing Free Packages";break;case"user":y.details="Viewing Settings";break;case"badges":y.details="Browsing Profile Badges";break;case"badge":y.details="Viewing Badge",w.includes("/foil/")?y.state=`${t.childNodes.item(4).textContent} (Foil)`:y.state=t.childNodes.item(4).textContent,y.buttons=[{label:"View Page",url:h}];break;case"signout":y.details="Signing Out";break;case"depot":y.buttons=[{label:"View Page",url:h}],y.state=document.querySelector("h1").lastChild.textContent,y.details=`Viewing Depot ${u.childNodes[1].textContent}`;break;case"upcoming":"0"!==o.value&&(y.state=`Filter: ${o.options[o.selectedIndex].textContent}`),w.includes("/free/")?y.details="Viewing Free Promotions":w.includes("/mostfollowed/")?y.details="Browsing Most Followed Upcoming Games":y.details="Browsing Upcoming Games";break;case"calendar":y.details="Viewing Release Calendar",y.state=document.querySelector("h2.header-title.hide-small").textContent;break;case"stats":switch(w.split("/")[2]){case"mostfollowed":y.details="Browsing Most Followed Games","0"!==g.value&&(y.state=`Filter: ${g.options[g.selectedIndex].textContent}`);break;case"mostwished":y.details="Browsing Most Wishlisted Games";break;case"gameratings":h.includes("?all_types")?y.details="Browsing Top Rated Apps":"/stats/gameratings/"===w?y.details="Browsing Top Rated Games":document.querySelector("button.btn")&&(y.details=`Browsing Top Rated Games ${document.querySelector("button.btn").textContent}`);break;case"toplevels":y.details="Viewing Top Users By Level";break;case"releases":y.details="Viewing Game Release Summary","0"!==o.value&&(y.state=`Filter: ${o.options[o.selectedIndex].textContent}`)}break;case"topsellers":y.details="Weekly Top Sellers",document.querySelector("button.btn")&&(y.state=`${document.querySelector("button.btn").textContent} ${document.querySelector("h2.flex-grow").textContent.split(" ")[8]}`,y.buttons=[{label:"View Page",url:h}]);break;case"sales":w.includes("/history/")?(y.details="Viewing Upcoming & previous sales",y.state=`Next Sale: ${document.querySelector(".sale-name").textContent}`):y.details="Browsing Sales";break;case"servers":w.includes("/maps/")?y.details="Viewing Valve MM Maps":y.details="Viewing Valve MM Servers";break;case"search":switch(y.details=`Searching ${u.textContent}`,u.textContent){case"Apps":y.state=`${document.querySelector("#inputQuery-app").value} Type: ${r.options[r.selectedIndex].textContent} Category: ${l.options[l.selectedIndex].textContent}`;break;case"App Keys":y.state=`${r.options[r.selectedIndex].textContent} ${c.options[c.selectedIndex].textContent} ${d.options[d.selectedIndex].textContent} ${document.querySelector("#inputKeyValue").value} Raw: ${document.querySelector("input[name='display_value']").checked}`;break;case"Package Keys":y.state=`${c.options[c.selectedIndex].textContent} ${d.options[d.selectedIndex].textContent} ${document.querySelector("#inputKeyValue2").value}`;break;case"Patch Notes":y.state=`${document.querySelector("#patchnotes_query")?.value?"Search: ":""}${document.querySelector("#patchnotes_query")?.value} AppID: ${document.querySelector("#patchnotes_appid")?.value||"All"}`}break;case"tokendumper":y.details="Viewing Token Dumper",y.state=`${document.querySelector("#stats").textContent.split(" ")[0]} Users Contributed`;break;case"keys":y.details="Viewing Contribute Keys";break;case"":y.details="Viewing Homepage";break;default:y.details="Unsupported Page"}break;case"steamstat.us":y.details="Viewing Steam Status",y.state=`${document.querySelector("#online").textContent} users online`}a||delete y.startTimestamp,!i&&y.buttons&&delete y.buttons,presence.setActivity(y)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;