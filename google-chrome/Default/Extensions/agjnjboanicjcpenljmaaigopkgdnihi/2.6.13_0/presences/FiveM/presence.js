var __webpack_exports__={};const presence=new Presence({clientId:"730897382937591848"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/F/FiveM/assets/logo.png",startTimestamp:browsingTimestamp},{href:t,hostname:s,pathname:a}=document.location,[r,c,i]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("covers")]);let l;if(r)return e.details="Browsing",void presence.setActivity(e);switch(s.replace("www.","")){case"fivem.net":"/"===a?e.details="Viewing home Page":a.includes("terms")&&(e.details="Reading terms",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png");break;case"docs.fivem.net":l=document.querySelector('[name="search"]'),l?.value?(e.details="Searchin for",e.state=l.value,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):a.startsWith("/docs/")&&(e.details="Reading documentation about",e.state=document.querySelector('[class="docContent"]')?.firstChild?.textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.buttons=[{label:"Read Docs",url:t}]);break;case"forum.cfx.re":if(l=document.querySelector('[id="search-term"]'),l?.value)return e.details="Searchin for",e.state=l.value,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",void presence.setActivity(e);switch(a.split("/")[1]){case"":e.details="Viewing the forum home Page";break;case"categories":case"c":e.details="Viewing forum category",e.state=document.querySelector('[class="category-name"]')?.textContent,e.buttons=[{label:"View Forum Category",url:t}];break;case"tag":e.details="Viewing posts with tag",e.state=document.querySelector('[class="name"]')?.textContent,e.buttons=[{label:"View Posts",url:t}];break;case"t":e.details="Reading post",e.state=document.querySelector('[class="fancy-title"]')?.textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.buttons=[{label:"Reading Post",url:t}];break;case"u":e.details="Viewing user",e.largeImageKey=`https://${s}/${document.querySelector('[class="user-profile-avatar"]')?.firstElementChild.getAttribute("src")}`,e.state=document.querySelector('[class="username"]').textContent.split("\n")[1].trim(),e.buttons=[{label:"View Profile",url:t}];break;case"latest":e.details="Exploring the latest posts";break;case"top":e.details="Exploring the top posts";break;case"badges":e.details="Exploring all badges";break;case"g":e.details="Exploring all groups"}break;case"servers.fivem.net":l=document.querySelector('[id="searchBox"]'),l?.value?(e.details="Searchin for",e.state=l.value,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):a.startsWith("/servers/detail/")?(e.largeImageKey=document.querySelector('[class="icon"]').firstElementChild.getAttribute("src"),e.details="Viewing server",e.state=document.querySelector('[class="title"]').textContent,e.buttons=[{label:"View Server",url:t}]):(e.details=`Exploring ${document.querySelector('[class="nav-item subnav-item active"]')?.textContent??"all servers"}`,e.state=`Sorted by ${document.querySelector('[class="sort-by active"]')?.textContent}`,e.buttons=[{label:"View All Server",url:t}])}i||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/F/FiveM/assets/logo.png"),c||delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;