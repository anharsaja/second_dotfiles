var __webpack_exports__={};const presence=new Presence({clientId:"1107321415243415574"}),browsingTimestamp=Math.floor(Date.now()/1e3);function checkPositionAccountAvatar(){return document.querySelectorAll(".autosuggest-textarea__textarea").length<1?1:2}presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/Mastodon/assets/logo.png"},[t,a]=await Promise.all([presence.getSetting("time"),presence.getSetting("privacy")]),{pathname:s,hostname:i}=document.location;switch(t&&(e.startTimestamp=browsingTimestamp),s){case"/home":e.details="On the homepage";break;case"/notifications":e.details="Checking notifications";break;case"/public/local":e.details="Looking in local timeline";break;case"/public":e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/M/Mastodon/assets/0.png",e.details="Looking in fediverse";break;case"/bookmarks":case"/favourites":case"/lists":e.details=`Looking at their ${s.split("/")[1]}`;break;case"/search":e.details=a?"Searching up something":`Searching ${document.querySelector(".search__input").getAttribute("value")}`;break;case"/relationships":e.details="Viewing their followers";break;case"/about":e.smallImageKey=document.querySelectorAll(".account__avatar")[checkPositionAccountAvatar()].querySelector("img").getAttribute("src"),e.largeImageKey=document.querySelector(".about__header__hero img").getAttribute("src"),e.smallImageText=`About ${i}`,e.details=`About ${i}`;break;case"/directory":e.details="On the directory";break;case"/privacy-policy":e.details="Reading Privacy and Policy";break;case"/follow_requests":e.details="Looking at their follow requests"}s.startsWith("/explore")?(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText="Explore",e.details="On the explore"):s.startsWith("/@")?(a||(e.smallImageKey=document.querySelectorAll(".account__avatar")[checkPositionAccountAvatar()].querySelector("img").getAttribute("src"),e.smallImageText=`${document.location}`),e.details=`Viewing ${a?"a":`${s.split(/[@,/]+/)[1]}'s`} profile`):s.startsWith("/settings")?e.details="Viewing their settings":s.startsWith("/tags")&&(e.details=a?"Searching for: tags":`Searching ${s.split("/")[2]} tag`),presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;