var __webpack_exports__={};const presence=new Presence({clientId:"821106305241972746"}),timebrowsed=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e=document.location.pathname.split("/").filter((e=>e)),t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/C/Codewars/assets/logo.png",startTimestamp:timebrowsed,details:"Browsing..."},a=await presence.getSetting("statsdisplay");switch(e[0]){case"dashboard":t.details="Viewing Dashboard",a&&(t.state=`${document.querySelector(".ml-10px").textContent} Honor`);break;case"topics":e[1]?(t.details="Viewing Topic",t.state=`Topic: ${e[1]}`):t.details="Viewing Forum";break;case"kumite":t.details="Viewing kumite";break;case"subscription":t.details="Viewing Codewars Red";break;default:if("users"===e[0]&&"leaderboard"===e[1])t.details="Viewing Leaderboard";else if("kata"===e[0])if(e[2]&&e[2].startsWith("my-languages")){const e=document.querySelectorAll('[name="q"]')[0].getAttribute("value")||"All Katas";let a=document.querySelector('[Label="Difficulty"]').getAttribute("value");a=a?a.split(",").map((e=>`${e.replace(/-/g,"").trim()} kyu`)).join(", "):"Any kyu",t.details="Searching Katas",t.state=`${e} | ${a}`}else t.details=`Solving Kata | ${document.querySelector(".w-full>div>div>div>span").textContent}`,t.state=document.querySelector(".items-center > h4").textContent;else if("users"===e[0]&&"edit"===e[1])t.details="Editing Account";else if("trainer"===e[0]&&"setup"===e[1])t.details="Editing Trainer Setup",t.state=`${Array.from(document.querySelectorAll(".icon-list > li > .is-active")).length} Languages selected`;else if("users"===e[0]&&"leaderboard"!==e[1]&&"edit"!==e[1]){const i=Array.from(document.querySelectorAll("img")).map((e=>e.src));i.find((e=>e.includes("avatar")&&e!==i.find((e=>e.includes("avatar")))))?(t.details="Viewing profile of",a&&(t.state=`${e[1]} | \n\t\t\t\t\t${Array.from(document.querySelector(".stat-box").children).find((e=>e.textContent.startsWith("Clan:"))).textContent.slice("Clan:".length)}`)):(t.details="Viewing own profile",a&&(t.state=`${document.querySelector(".ml-10px").textContent} Honor | ${document.querySelector(".small-hex").textContent}`))}}t.details?presence.setActivity(t):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;