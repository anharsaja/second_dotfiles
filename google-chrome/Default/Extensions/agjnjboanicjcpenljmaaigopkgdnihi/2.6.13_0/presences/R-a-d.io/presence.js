var __webpack_exports__={};const presence=new Presence({clientId:"1073136952905318401"}),playStatus=()=>{let e;const t=document.querySelector("#stream-play").textContent;return e="Play Stream"===t?"Stopped":"Stop Stream"===t?"Playing":t,e},currentSong=()=>document.querySelector("#np").textContent;presence.on("UpdateData",(async()=>{const{pathname:e}=document.location,t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/R/R-a-d.io/assets/logo.png"};if(e.includes("/news"))t.details="Reading news",3===e.split("/").length&&(t.state=document.querySelector('[class="panel-title"] > a').textContent);else if(e.includes("/irc"))t.details="Chatting";else if(e.includes("/search")){const s=e.split("/")[2];t.details=s?`Searching for: ${s}`:"Searching"}else if(e.includes("/last-played"))t.details="Looking at last played songs",t.state=`On page ${document.querySelector("#radio-container > section > div > div > ul > li.active").textContent}`;else if(e.includes("/queue"))t.details="Looking at queue";else if(e.includes("/faves")){t.details="Looking at favorites";const s=e.split("/")[2];s&&(t.details=`Looking at ${s}'s favorites`)}else e.includes("/staff")?t.details="Looking at staff list":e.includes("/submit")?t.details="Submitting a song":"/"===e&&(t.details=playStatus(),"Playing"===t.details&&(t.state=document.querySelector("#np").textContent,[t.startTimestamp,t.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(document.querySelector("#progress-current").textContent),presence.timestampFromFormat(document.querySelector("#progress-length").textContent))));presence.setActivity(t,"Playing"===t.details)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;