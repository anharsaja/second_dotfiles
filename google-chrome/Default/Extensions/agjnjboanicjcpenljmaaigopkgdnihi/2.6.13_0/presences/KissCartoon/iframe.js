var __webpack_exports__={};const iframe=new iFrame;iframe.on("UpdateData",(async()=>{let e;document.querySelector("#dogevideo_html5_api")?(e=document.querySelector("#dogevideo_html5_api"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector("#player > div > div.container.pointer-enabled > video")?(e=document.querySelector("#player > div > div.container.pointer-enabled > video"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector("#mediaplayer > div.jw-wrapper.jw-reset > div.jw-media.jw-reset > video")?(e=document.querySelector("#mediaplayer > div.jw-wrapper.jw-reset > div.jw-media.jw-reset > video"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector("#vid_html5_api")?(e=document.querySelector("#vid_html5_api"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):null!==document.querySelector("#myElement > div.jw-media.jw-reset > video")?(e=document.querySelector("#myElement > div.jw-media.jw-reset > video"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector("#mgvideo > div.vjs-poster")?(e=document.querySelector("#mgvideo > div.vjs-poster"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector("#olvideo_html5_api")?(e=document.querySelector("#olvideo_html5_api"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector("#videojs_html5_api")?(e=document.querySelector("#videojs_html5_api"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector("#myVideo > div.jw-wrapper.jw-reset > div.jw-media.jw-reset > video")?(e=document.querySelector("#myVideo > div.jw-wrapper.jw-reset > div.jw-media.jw-reset > video"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector("#mgvideo_html5_api")?(e=document.querySelector("#mgvideo_html5_api"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector("#player > div.jw-media.jw-reset > video")?(e=document.querySelector("#player > div.jw-media.jw-reset > video"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector("#vstr > div.jw-wrapper.jw-reset > div.jw-media.jw-reset > video")?(e=document.querySelector("#vstr > div.jw-wrapper.jw-reset > div.jw-media.jw-reset > video"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector("#player > div.jw-wrapper.jw-reset > div.jw-media.jw-reset > video")?(e=document.querySelector("#player > div.jw-wrapper.jw-reset > div.jw-media.jw-reset > video"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector("video")?(e=document.querySelector("video"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}})):document.querySelector(".video")&&(e=document.querySelector(".video"),e&&!isNaN(e.duration)&&iframe.send({iframeVideo:{iFrameVideo:!0,currTime:e.currentTime,dur:e.duration,paused:e.paused}}))}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;