var __webpack_exports__={};const presence=new Presence({clientId:"1014999001801691246"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const t={startTimestamp:browsingTimestamp,largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/H/Heroku/assets/logo.png"},{hostname:e,pathname:a,search:s}=window.location,i=await presence.getSetting("showNames");switch(e){case"www.heroku.com":t.details="Browsing",t.state="/home"===a?"Home page":document.title.match(/(.*?)(?=(?: \| Heroku|$))/)[1];break;case"blog.heroku.com":t.details="Browsing blog posts","/"!==a&&(t.state=document.title.match(/(.*?)(?=(?: \| Heroku|$))/)[1]);break;case"brand.heroku.com":t.details="Browsing",t.state="Brand";break;case"dashboard.heroku.com":if(t.details="Viewing Dashboard","/apps"===a)t.state="Apps";else if("/new-app"===a)t.details="Creating new app";else if(a.startsWith("/account"))switch(t.details="Managing account",a){case"/acount":t.state="Account settings";break;case"/account/applications":t.state="Application settings";break;case"/account/billing":t.state="Billing settings"}else if(a.startsWith("/apps/")){t.details=i?`Managing app: '${document.title.match(/(.*?)(?=(?: \| Heroku|$))/)[1]}'`:"Managing app";const[e,s]=a.split("/").slice(3);e?"activity"===e?(t.state="Activity","builds"===s&&(t.state="Viewing build log")):t.state=`${e[0].toUpperCase()}${e.slice(1)}`:t.state="Overview"}else"/provision-addon"===a&&(t.details="Provisioning an addon",t.state=document.querySelector(".new-app-view > div > div > div:nth-of-type(2) > div:nth-of-type(2)").textContent);break;case"data.heroku.com":t.details="Browsing Data","/"===a?t.state="Looking at datastores":"/dataclips"===a?t.state="Looking at dataclips":a.startsWith("/datastores/")?t.state=i?`Viewing datastore '${document.title.match(/(.*?)(?=(?: \| Heroku Data|$))/)}'`:"Viewing a datastore":a.startsWith("/dataclips/")&&(t.state=i?`Viewing dataclip '${document.title.match(/(.*?)(?=(?: \| Heroku Data|$))/)}'`:"Viewing a dataclip");break;case"devcenter.heroku.com":t.details="Browsing Dev Center",t.state="/"===a?"Home page":document.title.match(/(.*?)(?=(?: \| Heroku Dev Center|$))/)[1];break;case"elements.heroku.com":t.details="Browsing Elements",t.state=document.title.match(/(.*?)(?=(?: - Heroku Elements|$))/)[1];break;case"help.heroku.com":t.details="Browsing Heroku Support",/^\/\d+$/.test(a)?(t.details="Viewing Support Ticket",t.state=document.querySelector("h2").textContent):"/tickets/new"===a||"/"===a&&"true"===new URLSearchParams(s).get("t")?t.state="Creating a new ticket":t.state="/tickets"===a?"Viewing tickets":document.querySelector("h2")?.textContent||document.querySelector("h1")?.textContent||document.title;break;case"status.heroku.com":if(t.details="Viewing Heroku Status","/incidents"===a)t.state="Past incidents";else if(a.startsWith("/incidents/"))t.state=document.title.match(/(.*?)(?=(?: \| Heroku Status|$))/)[1];else{const[e,a,s]=document.querySelectorAll(".container.body-container > div a > .status-summary__description");t.state=`Apps: ${e.textContent.replace(/\s/g,"")}\nData: ${a.textContent.replace(/\s/g,"")}\nTools: ${s.textContent.replace(/\s/g,"")}`}}t.details&&presence.setActivity(t)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;