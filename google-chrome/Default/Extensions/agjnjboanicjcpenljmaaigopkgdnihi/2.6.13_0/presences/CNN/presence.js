var __webpack_exports__={};const presence=new Presence({clientId:"839539095393796116"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async function(){const e=await presence.getSetting("timeElapsed"),t=await presence.getSetting("showButtons"),s=await presence.getSetting("logo"),a=await presence.getSetting("privacy"),i=window.location.pathname.split("/"),n={largeImageKey:["https://cdn.rcd.gg/PreMiD/websites/C/CNN/assets/0.png","https://cdn.rcd.gg/PreMiD/websites/C/CNN/assets/1.png"][s]||"https://cdn.rcd.gg/PreMiD/websites/C/CNN/assets/0.png"};if(e&&!a&&(n.startTimestamp=browsingTimestamp),i[1])if("world"===i[1]||"us"===i[1]||"politics"===i[1]||"business"===i[1]||"health"===i[1]||"entertainment"===i[1]||"style"===i[1]||"travel"===i[1]||"sport"===i[1]||"sport"===i[1]&&document.querySelector("a.sc-fjdhpX.sc-chPdSV.ewmEKt")||"videos"===i[1]||"africa"===i[1]||"americas"===i[1]||"asia"===i[1]||"australia"===i[1]||"china"===i[1]||"europe"===i[1]||"india"===i[1]||"middle-east"===i[1]||"uk"===i[1])n.details=a?"Category":"Category:",a||(n.state=document.querySelector("h1.metadata-header__title")?.textContent||document.querySelector(".Text-sc-1amvtpj-0-span.jKFEoX")?.textContent.replace("Follow CNN ","")||"Not found"),t&&!a&&(n.buttons=[{label:"View Category",url:window.location.href}]);else if(i[1]>="1900"&&parseInt(i[1])<=(new Date).getFullYear()&&i[2]>="01"&&i[2]<="12"&&i[3]>="01"&&i[3]<="31")n.details=a?"Article":"Article:",a||(n.state=document.querySelector("h1.pg-headline")?.textContent||"Not found"),t&&!a&&(n.buttons=[{label:"View Article",url:window.location.href}]);else if("profiles"===i[1])n.details=a?"Profile":"Profile:",a||(n.state=document.querySelector("div.cd__profile-name")?.textContent||"Not found"),t&&!a&&(n.buttons=[{label:"View Profile",url:window.location.href}]);else if("specials"===i[1])i[2]?(i[3]&&"us"!==i[2]?(n.details=a?"Special":"Special:",a||(n.state=document.querySelector("h1.pg-headline")?.textContent||document.querySelector("li>a.geyBat")?.textContent||"Not found")):(n.details=a?"Special":"Special:",a||(n.state=document.querySelector("a.sc-fjdhpX.sc-chPdSV.ewmEKt")?.textContent||"Not found")),t&&!a&&(n.buttons=[{label:"View Special",url:window.location.href}])):n.details="Specials";else if("election"===i[1]&&i[2]>="1900")if(n.details=`Election ${i[2]}`,"president"===i[4]){const e=document.querySelectorAll("div.bop-main-scorestyles__BOPCount-sc-17mbuqb-2"),t=document.querySelectorAll("div.bop-main-scorestyles__BOPName-sc-17mbuqb-3");n.state=`${t[1]?.textContent}: ${e[1]?.textContent} - ${t[2]?.textContent}: ${e[2]?.textContent}`}else"state"===i[4]?(n.state=document.querySelector("h1.pagestyles__DesktopH1-sc-7kqwl2-74")?.textContent,t&&!a&&(n.buttons=[{label:"View Results",url:window.location.href}])):n.state="Other";else switch(i[1]){case"interactive":n.details="Interactive Article";break;case"account":n.details="Account","register"!==i[2]||a?"confirm"!==i[2]||a?"settings"!==i[2]||a||(n.state="Settings"):n.state="Confirming E-Mail":n.state="Register";break;case"newsletters":n.details="Browsing Newsletters";break;default:n.details="Other"}else n.details="Home";n.details?presence.setActivity(n):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;