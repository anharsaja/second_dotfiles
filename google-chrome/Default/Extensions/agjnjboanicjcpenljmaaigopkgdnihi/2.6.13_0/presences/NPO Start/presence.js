var __webpack_exports__={};const presence=new Presence({clientId:"1246364211328581654"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/N/NPO%20Start/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t,href:a}=document.location,s=t.replace("/start",""),[n,l,r]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("covers")]),i=document.querySelector('[data-testid="txt-input"]'),c=document.querySelector("video");switch(!0){case!!c&&!!c.currentTime:{const t=document.querySelector('[data-testid="player-info"]').querySelector("span")?.textContent?.replace(/•/gm," • ");delete e.startTimestamp,e.details=n?"Bekijkt een video":document.querySelector('[data-testid="txt-header"]')?.textContent,e.state=document.querySelector('[data-testid="lst-nicam"]')?t.slice(0,-3):t,e.largeImageKey=document.querySelector("li.active,img")?.src??"https://cdn.rcd.gg/PreMiD/websites/N/NPO%20Start/assets/logo.png",e.smallImageKey=c.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.buttons=[{label:"Bekijk Video",url:a}],c.paused||([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(c));break}case!!i?.value:e.details=n?"Is ergens naar aan het zoeken":"Zoekt naar:",e.state=i?.value,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png";break;case s.includes("/categorie/"):switch(!0){case s.includes("/programmas"):e.details="Bekijkt alle programma's",e.buttons=[{label:"Bekijk Alle Programm's",url:a}];break;case s.includes("/series"):e.details="Bekijkt alle series",e.buttons=[{label:"Bekijk Alle Series",url:a}];break;case s.includes("/documentaires"):e.details="Bekijkt alle documentaires",e.buttons=[{label:"Bekijk Alle Documentaires",url:a}];break;case s.includes("/films"):e.details="Bekijkt alle films",e.buttons=[{label:"Bekijk Alle Films",url:a}]}break;case""===s:e.details="Bekijkt de homepagina";break;case s.includes("/omroep/"):e.details=n?"Bekijkt alle content van een omproep":`Bekijkt alle content van ${s.split("/")[2]}`,e.buttons=[{label:"Bekijk Al Hun Content",url:a}];break;case s.includes("/collectie"):e.details=n?"Bekijkt alle content in een collectie":"Bekijkt alle content in collectie",e.state=document.querySelector('[data-testid="txt-header"]')?.textContent,e.buttons=[{label:"Bekijk Content In Collectie",url:a}];break;case s.includes("/ontdek"):e.details="Is content aan het ontdekken";break;case s.includes("/video"):case s.includes("/serie"):{const t=document.querySelector('[id="__NEXT_DATA__"]')?.textContent?.includes("Film")??"serie"?"film":"serie",s=document.querySelector('[data-npo-tag-click*="season-actionsheet"]')?.querySelector("span")?.textContent,l=document.querySelector('[data-testid="txt-header"]')?.textContent;e.details=n?`Bekijkt een ${t}`:`Bekijkt ${t}`,e.state=s?`${l} - ${s}`:l,e.largeImageKey=document.querySelector('[property="og:image"]')?.content??"https://cdn.rcd.gg/PreMiD/websites/N/NPO%20Start/assets/logo.png",e.buttons=[{label:"Bekijk Content",url:a}]}}n&&e.state&&delete e.state,l&&!n||!e.buttons||delete e.buttons,r&&!n||"https://cdn.rcd.gg/PreMiD/websites/N/NPO%20Start/assets/logo.png"===e.largeImageKey||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NPO%20Start/assets/logo.png"),n&&e.smallImageKey&&delete e.smallImageKey,presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;