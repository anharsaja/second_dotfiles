var __webpack_exports__={};const presence=new Presence({clientId:"1120627624377589820"}),browsingTimestamp=Math.floor(Date.now()/1e3);function createProgressBar(e,t,a){const{barLengthString:s,barTrack:r,barFill:n,showLabel:i}=a,g=Math.floor(e/t*100),o=isNaN(parseInt(s,10))?10:parseInt(s,10),c=Math.floor(g/100*o);return`${n.repeat(c)}${r.repeat(o-c)}  ${i?`${g}%`:""}`.trimEnd()}function capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}presence.on("UpdateData",(async()=>{const{pathname:e,href:t}=document.location,[a,s,r,n,i,g,o]=await Promise.all([presence.getSetting("timestamp"),presence.getSetting("watch"),presence.getSetting("progress"),presence.getSetting("barLength"),presence.getSetting("barTrack"),presence.getSetting("barFill"),presence.getSetting("showLabel")]),c={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/movie-web/assets/logo.png",type:3};if(""===e||e.startsWith("/search"))c.startTimestamp=browsingTimestamp;else if(e.startsWith("/media")){const{meta:e}=await presence.getPageVariable("meta");if(!e?.player)return;const{meta:a,progress:r,episode:l,season:p,controls:m}=e.player;c.largeImageKey=a.poster,0!==(r.time&&r.duration)&&(c.state=createProgressBar(r.time,r.duration,{barLengthString:n,barFill:g,barTrack:i,showLabel:o})),s&&(c.buttons=[{label:`Watch ${capitalize(a.type)}`,url:t}]);const d=`${a.title} (${a.year})`;c.name=d,"show"===a.type&&l&&p?c.details=`Season ${p.number}, Episode ${l.number}`:c.details=d,m.isLoading?(c.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/M/movie-web/assets/0.gif",c.smallImageText="Loading"):m.isPlaying?([c.startTimestamp,c.endTimestamp]=presence.getTimestampsfromMedia(document.querySelector("video")),c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",c.smallImageText="Playing"):(c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",c.smallImageText="Paused")}a||delete c.endTimestamp,r||delete c.state,presence.setActivity(c)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;