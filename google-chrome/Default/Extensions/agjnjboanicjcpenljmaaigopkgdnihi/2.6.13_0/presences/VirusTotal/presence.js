var __webpack_exports__={};const presence=new Presence({clientId:"650103083438702613"});presence.on("UpdateData",(()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/V/VirusTotal/assets/logo.png"};switch(document.location.pathname){case"/gui/home":e.state="Browsing on mainpage...",presence.setActivity(e);break;case"/gui/home/upload":e.details="Uploading an file...",presence.setActivity(e);break;case"/gui/home/url":e.details="Search an URL...",presence.setActivity(e);break;case"/gui/home/search":e.details="Search an anything...",presence.setActivity(e);break;case"/gui/sign-in":e.details="Sign In to VirusTotal",presence.setActivity(e);break;case"/gui/join-us":e.details="Sign Up to VirusTotal",presence.setActivity(e);break;case"/gui/settings":e.details="Update their profile...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#toolbar").shadowRoot.querySelector("#omnibarWrapper > vt-ui-account-widget").shadowRoot.querySelector("#userDropdown > div.avatar-section > span").textContent,presence.setActivity(e);break;default:document.location.pathname.includes("/gui/user/")?(e.details="Reading profile of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#authChecker > user-view").shadowRoot.querySelector("#pageWrapper > div.wrapper > vt-ui-generic-card > div:nth-child(2) > div.avatar-name > div > h3").textContent,presence.setActivity(e)):document.location.pathname.includes("/gui/top-users")?(e.details="Looking for top users...",presence.setActivity(e)):document.location.pathname.includes("/gui/domain/")?document.location.pathname.endsWith("detection")?(e.details="Reading detections of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#domainView").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-domain-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.domain-id > span").textContent,presence.setActivity(e)):document.location.pathname.endsWith("details")?(e.details="Reading details of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#domainView").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-domain-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.domain-id > span").textContent,presence.setActivity(e)):document.location.pathname.endsWith("relations")?(e.details="Reading relations of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#domainView").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-domain-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.domain-id > span").textContent,presence.setActivity(e)):document.location.pathname.endsWith("community")?(e.details="Reading comments of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#domainView").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-domain-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.domain-id > span").textContent,presence.setActivity(e)):document.location.pathname.endsWith("summary")&&(e.details="Reading summary of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#domainView").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-domain-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.domain-id > span").textContent,presence.setActivity(e)):document.location.pathname.includes("/gui/file/")?document.location.pathname.endsWith("detection")?(e.details="Reading detections of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#authChecker > file-view").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-file-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.file-name > a").textContent,presence.setActivity(e)):document.location.pathname.endsWith("details")?(e.details="Reading details of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#authChecker > file-view").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-file-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.file-name > a").textContent,presence.setActivity(e)):document.location.pathname.endsWith("community")?(e.details="Reading comments of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#authChecker > file-view").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-file-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.file-name > a").textContent,presence.setActivity(e)):document.location.pathname.endsWith("summary")?(e.details="Reading summary of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#authChecker > file-view").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-file-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.file-name > a").textContent,presence.setActivity(e)):document.location.pathname.includes("behavior")&&(e.details="Reading behavior of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#authChecker > file-view").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-file-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.file-name > a").textContent,presence.setActivity(e)):document.location.pathname.includes("/gui/url/")&&(document.location.pathname.endsWith("detection")?(e.details="Reading detections of ...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#domainView").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-domain-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.parent-domain > a").textContent,presence.setActivity(e)):document.location.pathname.endsWith("details")?(e.details="Reading details of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#domainView").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-domain-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.parent-domain > a").textContent,presence.setActivity(e)):document.location.pathname.endsWith("community")?(e.details="Reading comments of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#domainView").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-domain-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.parent-domain > a").textContent,presence.setActivity(e)):document.location.pathname.endsWith("summary")?(e.details="Reading summary of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#domainView").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-domain-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.parent-domain > a").textContent,presence.setActivity(e)):document.location.pathname.includes("behavior")?(e.details="Reading behavior of...",e.state=document.querySelector("body > vt-virustotal-app").shadowRoot.querySelector("#domainView").shadowRoot.querySelector("#report").shadowRoot.querySelector("div > header > vt-ui-domain-card").shadowRoot.querySelector("vt-ui-generic-card > div:nth-child(2) > div:nth-child(1) > div.object-id > div.parent-domain > a").textContent,presence.setActivity(e)):presence.setActivity())}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;