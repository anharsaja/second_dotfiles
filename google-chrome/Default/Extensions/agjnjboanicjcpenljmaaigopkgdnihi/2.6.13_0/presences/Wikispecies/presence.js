var __webpack_exports__={};const presence=new Presence({clientId:"733216914951897118"});let currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/");const browsingTimestamp=Math.floor(Date.now()/1e3);let presenceData={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Wikispecies/assets/logo.png",startTimestamp:browsingTimestamp};const updateCallback={_function:null,get function(){return this._function},set function(e){this._function=e},get present(){return null!==this._function}},resetData=(e={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Wikispecies/assets/logo.png",startTimestamp:browsingTimestamp})=>{currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/"),presenceData={...e}},getURLParam=e=>currentURL.searchParams.get(e);if((()=>{let e;const a=()=>getURLParam("action")||getURLParam("veaction"),t=()=>decodeURI(("index.php"===currentPath[1]?getURLParam("title"):currentPath.slice(1).join("/")).replaceAll("_"," "));try{e=document.querySelector("h1").textContent}catch(a){e=t()}const n=()=>({"-2":"Viewing a media","-1":"Viewing a special page",0:"Reading an article",1:"Viewing a talk page",2:"Viewing a user page",3:"Viewing a user talk page",4:"Viewing a project page",5:"Viewing a project talk page",6:"Viewing a file",7:"Viewing a file talk page",8:"Viewing an interface page",9:"Viewing an interface talk page",10:"Viewing a template",11:"Viewing a template talk page",12:"Viewing a help page",13:"Viewing a help talk page",14:"Viewing a category",15:"Viewing a category talk page",100:"Viewing a portal",101:"Viewing a portal talk page",828:"Viewing a module",829:"Viewing a module talk page",1198:"Viewing a translation",1199:"Viewing a translation talk page",2300:"Viewing a gadget",2301:"Viewing a gadget talk page",2302:"Viewing a gadget definition page",2303:"Viewing a gadget definition talk page",2600:"Viewing a topic"}[[...document.querySelector("body").classList].find((e=>/ns--?\d/.test(e))).slice(3)]||"Viewing a page");(document.querySelector("#n-mainpage a")||document.querySelector("#p-navigation a")||document.querySelector(".mw-wiki-logo")).href===currentURL.href?presenceData.details="On the main page":document.querySelector("#wpLoginAttempt")?presenceData.details="Logging in":document.querySelector("#wpCreateaccount")?presenceData.details="Creating an account":document.querySelector(".searchresults")?(presenceData.details="Searching for a page",presenceData.state=document.querySelector("input[type=search]").value):"history"===a()?(presenceData.details="Viewing revision history",presenceData.state=t()):getURLParam("diff")?(presenceData.details="Viewing difference between revisions",presenceData.state=t()):getURLParam("oldid")?(presenceData.details="Viewing an old revision of a page",presenceData.state=t()):document.querySelector("#ca-ve-edit")||getURLParam("veaction")?(presenceData.state=e.toLowerCase()===t().toLowerCase()?`${e}`:`${e} (${t()})`,updateCallback.function=()=>{"edit"===a()||"editsource"===a()?presenceData.details="Editing a page":presenceData.details=n()}):"edit"===a()?(presenceData.details=document.querySelector("#ca-edit")?"Editing a page":"Viewing source",presenceData.state=t()):(presenceData.details=n(),presenceData.state=e.toLowerCase()===t().toLowerCase()?`${e}`:`${e} (${t()})`)})(),updateCallback.present){const e={...presenceData};presence.on("UpdateData",(async()=>{resetData(e),updateCallback.function(),presence.setActivity(presenceData)}))}else presence.on("UpdateData",(async()=>{presence.setActivity(presenceData)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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bkJXLEtBQWdELGVBQW5CQSxJQUM3QmpCLGFBQWFDLFFBQVUsaUJBRXZCRCxhQUFhQyxRQUFVeUIsR0FBa0IsR0FHekIsU0FBbkJULEtBQ0xqQixhQUFhQyxRQUFVYixTQUFTbUMsY0FBYyxZQUN4QyxpQkFDQSxpQkFDTnZCLGFBQWErQixNQUFRYixNQUdyQmxCLGFBQWFDLFFBQVV5QixJQUN2QjFCLGFBQWErQixNQUFXZixFQUFNaUIsZ0JBQWtCZixJQUFlZSxjQUN6RCxHQUFHakIsSUFDSCxHQUFHQSxNQUFVRSxPQUUxQixFQWhHRCxHQWlHSWQsZUFBZUssUUFBUyxDQUN4QixNQUFNRSxFQUFjLElBQUtYLGNBQ3pCakIsU0FBU21ELEdBQUcsY0FBY0MsVUFDdEJ6QixVQUFVQyxHQUNWUCxlQUFlRSxXQUNmdkIsU0FBU3FELFlBQVlwQyxhQUFhLEdBRTFDLE1BRUlqQixTQUFTbUQsR0FBRyxjQUFjQyxVQUN0QnBELFNBQVNxRCxZQUFZcEMsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3ByZXNlbmNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHByZXNlbmNlID0gbmV3IFByZXNlbmNlKHtcbiAgICBjbGllbnRJZDogXCI3MzMyMTY5MTQ5NTE4OTcxMThcIixcbn0pO1xubGV0IGN1cnJlbnRVUkwgPSBuZXcgVVJMKGRvY3VtZW50LmxvY2F0aW9uLmhyZWYpLCBjdXJyZW50UGF0aCA9IGN1cnJlbnRVUkwucGF0aG5hbWUucmVwbGFjZSgvXlxcL3xcXC8kL2csIFwiXCIpLnNwbGl0KFwiL1wiKTtcbmNvbnN0IGJyb3dzaW5nVGltZXN0YW1wID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCk7XG5sZXQgcHJlc2VuY2VEYXRhID0ge1xuICAgIGRldGFpbHM6IFwiVmlld2luZyBhbiB1bnN1cHBvcnRlZCBwYWdlXCIsXG4gICAgbGFyZ2VJbWFnZUtleTogXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL1cvV2lraXNwZWNpZXMvYXNzZXRzL2xvZ28ucG5nXCIsXG4gICAgc3RhcnRUaW1lc3RhbXA6IGJyb3dzaW5nVGltZXN0YW1wLFxufTtcbmNvbnN0IHVwZGF0ZUNhbGxiYWNrID0ge1xuICAgIF9mdW5jdGlvbjogbnVsbCxcbiAgICBnZXQgZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9mdW5jdGlvbjtcbiAgICB9LFxuICAgIHNldCBmdW5jdGlvbihwYXJhbWV0ZXIpIHtcbiAgICAgICAgdGhpcy5fZnVuY3Rpb24gPSBwYXJhbWV0ZXI7XG4gICAgfSxcbiAgICBnZXQgcHJlc2VudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Z1bmN0aW9uICE9PSBudWxsO1xuICAgIH0sXG59LCByZXNldERhdGEgPSAoZGVmYXVsdERhdGEgPSB7XG4gICAgZGV0YWlsczogXCJWaWV3aW5nIGFuIHVuc3VwcG9ydGVkIHBhZ2VcIixcbiAgICBsYXJnZUltYWdlS2V5OiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvVy9XaWtpc3BlY2llcy9hc3NldHMvbG9nby5wbmdcIixcbiAgICBzdGFydFRpbWVzdGFtcDogYnJvd3NpbmdUaW1lc3RhbXAsXG59KSA9PiB7XG4gICAgY3VycmVudFVSTCA9IG5ldyBVUkwoZG9jdW1lbnQubG9jYXRpb24uaHJlZik7XG4gICAgY3VycmVudFBhdGggPSBjdXJyZW50VVJMLnBhdGhuYW1lLnJlcGxhY2UoL15cXC98XFwvJC9nLCBcIlwiKS5zcGxpdChcIi9cIik7XG4gICAgcHJlc2VuY2VEYXRhID0geyAuLi5kZWZhdWx0RGF0YSB9O1xufSwgZ2V0VVJMUGFyYW0gPSAodXJsUGFyYW0pID0+IHtcbiAgICByZXR1cm4gY3VycmVudFVSTC5zZWFyY2hQYXJhbXMuZ2V0KHVybFBhcmFtKTtcbn07XG4oKCkgPT4ge1xuICAgIGxldCB0aXRsZTtcbiAgICBjb25zdCBhY3Rpb25SZXN1bHQgPSAoKSA9PiBnZXRVUkxQYXJhbShcImFjdGlvblwiKSB8fCBnZXRVUkxQYXJhbShcInZlYWN0aW9uXCIpLCB0aXRsZUZyb21VUkwgPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiBkZWNvZGVVUkkoKGN1cnJlbnRQYXRoWzFdID09PSBcImluZGV4LnBocFwiXG4gICAgICAgICAgICA/IGdldFVSTFBhcmFtKFwidGl0bGVcIilcbiAgICAgICAgICAgIDogY3VycmVudFBhdGguc2xpY2UoMSkuam9pbihcIi9cIikpLnJlcGxhY2VBbGwoXCJfXCIsIFwiIFwiKSk7XG4gICAgfTtcbiAgICB0cnkge1xuICAgICAgICB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoMVwiKS50ZXh0Q29udGVudDtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgdGl0bGUgPSB0aXRsZUZyb21VUkwoKTtcbiAgICB9XG4gICAgY29uc3QgbmFtZXNwYWNlRGV0YWlscyA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZGV0YWlscyA9IHtcbiAgICAgICAgICAgIFwiLTJcIjogXCJWaWV3aW5nIGEgbWVkaWFcIixcbiAgICAgICAgICAgIFwiLTFcIjogXCJWaWV3aW5nIGEgc3BlY2lhbCBwYWdlXCIsXG4gICAgICAgICAgICAwOiBcIlJlYWRpbmcgYW4gYXJ0aWNsZVwiLFxuICAgICAgICAgICAgMTogXCJWaWV3aW5nIGEgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICAyOiBcIlZpZXdpbmcgYSB1c2VyIHBhZ2VcIixcbiAgICAgICAgICAgIDM6IFwiVmlld2luZyBhIHVzZXIgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICA0OiBcIlZpZXdpbmcgYSBwcm9qZWN0IHBhZ2VcIixcbiAgICAgICAgICAgIDU6IFwiVmlld2luZyBhIHByb2plY3QgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICA2OiBcIlZpZXdpbmcgYSBmaWxlXCIsXG4gICAgICAgICAgICA3OiBcIlZpZXdpbmcgYSBmaWxlIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgODogXCJWaWV3aW5nIGFuIGludGVyZmFjZSBwYWdlXCIsXG4gICAgICAgICAgICA5OiBcIlZpZXdpbmcgYW4gaW50ZXJmYWNlIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgMTA6IFwiVmlld2luZyBhIHRlbXBsYXRlXCIsXG4gICAgICAgICAgICAxMTogXCJWaWV3aW5nIGEgdGVtcGxhdGUgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICAxMjogXCJWaWV3aW5nIGEgaGVscCBwYWdlXCIsXG4gICAgICAgICAgICAxMzogXCJWaWV3aW5nIGEgaGVscCB0YWxrIHBhZ2VcIixcbiAgICAgICAgICAgIDE0OiBcIlZpZXdpbmcgYSBjYXRlZ29yeVwiLFxuICAgICAgICAgICAgMTU6IFwiVmlld2luZyBhIGNhdGVnb3J5IHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgMTAwOiBcIlZpZXdpbmcgYSBwb3J0YWxcIixcbiAgICAgICAgICAgIDEwMTogXCJWaWV3aW5nIGEgcG9ydGFsIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgODI4OiBcIlZpZXdpbmcgYSBtb2R1bGVcIixcbiAgICAgICAgICAgIDgyOTogXCJWaWV3aW5nIGEgbW9kdWxlIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgMTE5ODogXCJWaWV3aW5nIGEgdHJhbnNsYXRpb25cIixcbiAgICAgICAgICAgIDExOTk6IFwiVmlld2luZyBhIHRyYW5zbGF0aW9uIHRhbGsgcGFnZVwiLFxuICAgICAgICAgICAgMjMwMDogXCJWaWV3aW5nIGEgZ2FkZ2V0XCIsXG4gICAgICAgICAgICAyMzAxOiBcIlZpZXdpbmcgYSBnYWRnZXQgdGFsayBwYWdlXCIsXG4gICAgICAgICAgICAyMzAyOiBcIlZpZXdpbmcgYSBnYWRnZXQgZGVmaW5pdGlvbiBwYWdlXCIsXG4gICAgICAgICAgICAyMzAzOiBcIlZpZXdpbmcgYSBnYWRnZXQgZGVmaW5pdGlvbiB0YWxrIHBhZ2VcIixcbiAgICAgICAgICAgIDI2MDA6IFwiVmlld2luZyBhIHRvcGljXCIsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAoZGV0YWlsc1tbLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHlcIikuY2xhc3NMaXN0XVxuICAgICAgICAgICAgLmZpbmQodiA9PiAvbnMtLT9cXGQvLnRlc3QodikpXG4gICAgICAgICAgICAuc2xpY2UoMyldIHx8IFwiVmlld2luZyBhIHBhZ2VcIik7XG4gICAgfTtcbiAgICBpZiAoKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbi1tYWlucGFnZSBhXCIpIHx8XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcC1uYXZpZ2F0aW9uIGFcIikgfHxcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tdy13aWtpLWxvZ29cIikpLmhyZWYgPT09IGN1cnJlbnRVUkwuaHJlZilcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIk9uIHRoZSBtYWluIHBhZ2VcIjtcbiAgICBlbHNlIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3dwTG9naW5BdHRlbXB0XCIpKVxuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiTG9nZ2luZyBpblwiO1xuICAgIGVsc2UgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjd3BDcmVhdGVhY2NvdW50XCIpKVxuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiQ3JlYXRpbmcgYW4gYWNjb3VudFwiO1xuICAgIGVsc2UgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2VhcmNocmVzdWx0c1wiKSkge1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiU2VhcmNoaW5nIGZvciBhIHBhZ2VcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImlucHV0W3R5cGU9c2VhcmNoXVwiKS52YWx1ZTtcbiAgICB9XG4gICAgZWxzZSBpZiAoYWN0aW9uUmVzdWx0KCkgPT09IFwiaGlzdG9yeVwiKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHJldmlzaW9uIGhpc3RvcnlcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gdGl0bGVGcm9tVVJMKCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGdldFVSTFBhcmFtKFwiZGlmZlwiKSkge1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBkaWZmZXJlbmNlIGJldHdlZW4gcmV2aXNpb25zXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IHRpdGxlRnJvbVVSTCgpO1xuICAgIH1cbiAgICBlbHNlIGlmIChnZXRVUkxQYXJhbShcIm9sZGlkXCIpKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIGFuIG9sZCByZXZpc2lvbiBvZiBhIHBhZ2VcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gdGl0bGVGcm9tVVJMKCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2EtdmUtZWRpdFwiKSB8fCBnZXRVUkxQYXJhbShcInZlYWN0aW9uXCIpKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke3RpdGxlLnRvTG93ZXJDYXNlKCkgPT09IHRpdGxlRnJvbVVSTCgpLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgID8gYCR7dGl0bGV9YFxuICAgICAgICAgICAgOiBgJHt0aXRsZX0gKCR7dGl0bGVGcm9tVVJMKCl9KWB9YDtcbiAgICAgICAgdXBkYXRlQ2FsbGJhY2suZnVuY3Rpb24gPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoYWN0aW9uUmVzdWx0KCkgPT09IFwiZWRpdFwiIHx8IGFjdGlvblJlc3VsdCgpID09PSBcImVkaXRzb3VyY2VcIilcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiRWRpdGluZyBhIHBhZ2VcIjtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IG5hbWVzcGFjZURldGFpbHMoKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAoYWN0aW9uUmVzdWx0KCkgPT09IFwiZWRpdFwiKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYS1lZGl0XCIpXG4gICAgICAgICAgICA/IFwiRWRpdGluZyBhIHBhZ2VcIlxuICAgICAgICAgICAgOiBcIlZpZXdpbmcgc291cmNlXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IHRpdGxlRnJvbVVSTCgpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBuYW1lc3BhY2VEZXRhaWxzKCk7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke3RpdGxlLnRvTG93ZXJDYXNlKCkgPT09IHRpdGxlRnJvbVVSTCgpLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgID8gYCR7dGl0bGV9YFxuICAgICAgICAgICAgOiBgJHt0aXRsZX0gKCR7dGl0bGVGcm9tVVJMKCl9KWB9YDtcbiAgICB9XG59KSgpO1xuaWYgKHVwZGF0ZUNhbGxiYWNrLnByZXNlbnQpIHtcbiAgICBjb25zdCBkZWZhdWx0RGF0YSA9IHsgLi4ucHJlc2VuY2VEYXRhIH07XG4gICAgcHJlc2VuY2Uub24oXCJVcGRhdGVEYXRhXCIsIGFzeW5jICgpID0+IHtcbiAgICAgICAgcmVzZXREYXRhKGRlZmF1bHREYXRhKTtcbiAgICAgICAgdXBkYXRlQ2FsbGJhY2suZnVuY3Rpb24oKTtcbiAgICAgICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkocHJlc2VuY2VEYXRhKTtcbiAgICB9KTtcbn1cbmVsc2Uge1xuICAgIHByZXNlbmNlLm9uKFwiVXBkYXRlRGF0YVwiLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIHByZXNlbmNlLnNldEFjdGl2aXR5KHByZXNlbmNlRGF0YSk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljSEpsYzJWdVkyVXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lKd2NtVnpaVzVqWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEZGQlFWRXNRMEZCUXp0SlFVTTNRaXhSUVVGUkxFVkJRVVVzYjBKQlFXOUNPME5CUXpsQ0xFTkJRVU1zUTBGQlF6dEJRVVZJTEVsQlFVa3NWVUZCVlN4SFFVRkhMRWxCUVVrc1IwRkJSeXhEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRVZCUXk5RExGZEJRVmNzUjBGQlJ5eFZRVUZWTEVOQlFVTXNVVUZCVVN4RFFVRkRMRTlCUVU4c1EwRkJReXhWUVVGVkxFVkJRVVVzUlVGQlJTeERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRE8wRkJRM1JGTEUxQlFVMHNhVUpCUVdsQ0xFZEJRVWNzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhGUVVGRkxFZEJRVWNzU1VGQlNTeERRVUZETEVOQlFVTTdRVUZEZUVRc1NVRkJTU3haUVVGWkxFZEJRV2xDTzBsQlEyaERMRTlCUVU4c1JVRkJSU3cyUWtGQk5rSTdTVUZEZEVNc1lVRkJZU3hGUVVOYUxHdEZRVUZyUlR0SlFVTnVSU3hqUVVGakxFVkJRVVVzYVVKQlFXbENPME5CUTJwRExFTkJRVU03UVVGRFJpeE5RVUZOTEdOQlFXTXNSMEZCUnp0SlFVTnlRaXhUUVVGVExFVkJRVVVzU1VGQmEwSTdTVUZETjBJc1NVRkJTU3hSUVVGUk8xRkJRMWdzVDBGQlR5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRPMGxCUTNaQ0xFTkJRVU03U1VGRFJDeEpRVUZKTEZGQlFWRXNRMEZCUXl4VFFVRlRPMUZCUTNKQ0xFbEJRVWtzUTBGQlF5eFRRVUZUTEVkQlFVY3NVMEZCVXl4RFFVRkRPMGxCUXpWQ0xFTkJRVU03U1VGRFJDeEpRVUZKTEU5QlFVODdVVUZEVml4UFFVRlBMRWxCUVVrc1EwRkJReXhUUVVGVExFdEJRVXNzU1VGQlNTeERRVUZETzBsQlEyaERMRU5CUVVNN1EwRkRSQ3hGUVVsRUxGTkJRVk1zUjBGQlJ5eERRVU5ZTEdOQlFUUkNPMGxCUXpOQ0xFOUJRVThzUlVGQlJTdzJRa0ZCTmtJN1NVRkRkRU1zWVVGQllTeEZRVU5hTEd0RlFVRnJSVHRKUVVOdVJTeGpRVUZqTEVWQlFVVXNhVUpCUVdsQ08wTkJRMnBETEVWQlEwMHNSVUZCUlR0SlFVTlVMRlZCUVZVc1IwRkJSeXhKUVVGSkxFZEJRVWNzUTBGQlF5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8wbEJRemRETEZkQlFWY3NSMEZCUnl4VlFVRlZMRU5CUVVNc1VVRkJVU3hEUVVGRExFOUJRVThzUTBGQlF5eFZRVUZWTEVWQlFVVXNSVUZCUlN4RFFVRkRMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzBsQlEzSkZMRmxCUVZrc1IwRkJSeXhGUVVGRkxFZEJRVWNzVjBGQlZ5eEZRVUZGTEVOQlFVTTdRVUZEYmtNc1EwRkJReXhGUVV0RUxGZEJRVmNzUjBGQlJ5eERRVUZETEZGQlFXZENMRVZCUVZVc1JVRkJSVHRKUVVNeFF5eFBRVUZQTEZWQlFWVXNRMEZCUXl4WlFVRlpMRU5CUVVNc1IwRkJSeXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETzBGQlF6bERMRU5CUVVNc1EwRkJRenRCUVVWSUxFTkJRVU1zUjBGQlV5eEZRVUZGTzBsQlExZ3NTVUZCU1N4TFFVRmhMRU5CUVVNN1NVRkRiRUlzVFVGQlRTeFpRVUZaTEVkQlFVY3NSMEZCVnl4RlFVRkZMRU5CUTJoRExGZEJRVmNzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4WFFVRlhMRU5CUVVNc1ZVRkJWU3hEUVVGRExFVkJRMnBFTEZsQlFWa3NSMEZCUnl4SFFVRlhMRVZCUVVVN1VVRkRNMElzVDBGQlR5eFRRVUZUTEVOQlEyWXNRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJReXhEUVVGRExFdEJRVXNzVjBGQlZ6dFpRVU01UWl4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRExFOUJRVThzUTBGQlF6dFpRVU4wUWl4RFFVRkRMRU5CUVVNc1YwRkJWeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRMmhETEVOQlFVTXNWVUZCVlN4RFFVRkRMRWRCUVVjc1JVRkJSU3hIUVVGSExFTkJRVU1zUTBGRGRFSXNRMEZCUXp0SlFVTklMRU5CUVVNc1EwRkJRenRKUVVWSUxFbEJRVWs3VVVGRFNDeExRVUZMTEVkQlFVY3NVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eFhRVUZYTEVOQlFVTTdTMEZEYWtRN1NVRkJReXhQUVVGUExFTkJRVU1zUlVGQlJUdFJRVU5ZTEV0QlFVc3NSMEZCUnl4WlFVRlpMRVZCUVVVc1EwRkJRenRMUVVOMlFqdEpRVTFFTEUxQlFVMHNaMEpCUVdkQ0xFZEJRVWNzUjBGQlZ5eEZRVUZGTzFGQlEzSkRMRTFCUVUwc1QwRkJUeXhIUVVGblF6dFpRVU0xUXl4SlFVRkpMRVZCUVVVc2FVSkJRV2xDTzFsQlEzWkNMRWxCUVVrc1JVRkJSU3gzUWtGQmQwSTdXVUZET1VJc1EwRkJReXhGUVVGRkxHOUNRVUZ2UWp0WlFVTjJRaXhEUVVGRExFVkJRVVVzY1VKQlFYRkNPMWxCUTNoQ0xFTkJRVU1zUlVGQlJTeHhRa0ZCY1VJN1dVRkRlRUlzUTBGQlF5eEZRVUZGTERCQ1FVRXdRanRaUVVNM1FpeERRVUZETEVWQlFVVXNkMEpCUVhkQ08xbEJRek5DTEVOQlFVTXNSVUZCUlN3MlFrRkJOa0k3V1VGRGFFTXNRMEZCUXl4RlFVRkZMR2RDUVVGblFqdFpRVU51UWl4RFFVRkRMRVZCUVVVc01FSkJRVEJDTzFsQlF6ZENMRU5CUVVNc1JVRkJSU3d5UWtGQk1rSTdXVUZET1VJc1EwRkJReXhGUVVGRkxHZERRVUZuUXp0WlFVTnVReXhGUVVGRkxFVkJRVVVzYjBKQlFXOUNPMWxCUTNoQ0xFVkJRVVVzUlVGQlJTdzRRa0ZCT0VJN1dVRkRiRU1zUlVGQlJTeEZRVUZGTEhGQ1FVRnhRanRaUVVONlFpeEZRVUZGTEVWQlFVVXNNRUpCUVRCQ08xbEJRemxDTEVWQlFVVXNSVUZCUlN4dlFrRkJiMEk3V1VGRGVFSXNSVUZCUlN4RlFVRkZMRGhDUVVFNFFqdFpRVU5zUXl4SFFVRkhMRVZCUVVVc2EwSkJRV3RDTzFsQlEzWkNMRWRCUVVjc1JVRkJSU3cwUWtGQk5FSTdXVUZEYWtNc1IwRkJSeXhGUVVGRkxHdENRVUZyUWp0WlFVTjJRaXhIUVVGSExFVkJRVVVzTkVKQlFUUkNPMWxCUTJwRExFbEJRVWtzUlVGQlJTeDFRa0ZCZFVJN1dVRkROMElzU1VGQlNTeEZRVUZGTEdsRFFVRnBRenRaUVVOMlF5eEpRVUZKTEVWQlFVVXNhMEpCUVd0Q08xbEJRM2hDTEVsQlFVa3NSVUZCUlN3MFFrRkJORUk3V1VGRGJFTXNTVUZCU1N4RlFVRkZMR3REUVVGclF6dFpRVU40UXl4SlFVRkpMRVZCUVVVc2RVTkJRWFZETzFsQlF6ZERMRWxCUVVrc1JVRkJSU3hwUWtGQmFVSTdVMEZEZGtJc1EwRkJRenRSUVVOR0xFOUJRVThzUTBGRFRpeFBRVUZQTEVOQlEwNHNRMEZCUXl4SFFVRkhMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNVMEZCVXl4RFFVRkRPMkZCUXpORExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRk5CUVZNc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdZVUZETlVJc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVU5XTEVsQlFVa3NaMEpCUVdkQ0xFTkJRM0pDTEVOQlFVTTdTVUZEU0N4RFFVRkRMRU5CUVVNN1NVRkZSaXhKUVVORExFTkJRME1zVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCYjBJc1pVRkJaU3hEUVVGRE8xRkJRekZFTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVc5Q0xHbENRVUZwUWl4RFFVRkRPMUZCUXpWRUxGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFXOUNMR1ZCUVdVc1EwRkJReXhEUVVNeFJDeERRVUZETEVsQlFVa3NTMEZCU3l4VlFVRlZMRU5CUVVNc1NVRkJTVHRSUVVVeFFpeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMR3RDUVVGclFpeERRVUZETzFOQlEzUkRMRWxCUVVrc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGQlF5eHBRa0ZCYVVJc1EwRkJRenRSUVVOcVJDeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMRmxCUVZrc1EwRkJRenRUUVVOb1F5eEpRVUZKTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc2EwSkJRV3RDTEVOQlFVTTdVVUZEYkVRc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eHhRa0ZCY1VJc1EwRkJRenRUUVVONlF5eEpRVUZKTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNSVUZCUlR0UlFVTnNSQ3haUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEhOQ1FVRnpRaXhEUVVGRE8xRkJRemxETEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUTJwQ0xGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNiMEpCUVc5Q0xFTkJRek5ETEVOQlFVTXNTMEZCU3l4RFFVRkRPMHRCUTFJN1UwRkJUU3hKUVVGSkxGbEJRVmtzUlVGQlJTeExRVUZMTEZOQlFWTXNSVUZCUlR0UlFVTjRReXhaUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITERCQ1FVRXdRaXhEUVVGRE8xRkJRMnhFTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1dVRkJXU3hGUVVGRkxFTkJRVU03UzBGRGNFTTdVMEZCVFN4SlFVRkpMRmRCUVZjc1EwRkJReXhOUVVGTkxFTkJRVU1zUlVGQlJUdFJRVU12UWl4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExITkRRVUZ6UXl4RFFVRkRPMUZCUXpsRUxGbEJRVmtzUTBGQlF5eExRVUZMTEVkQlFVY3NXVUZCV1N4RlFVRkZMRU5CUVVNN1MwRkRjRU03VTBGQlRTeEpRVUZKTEZkQlFWY3NRMEZCUXl4UFFVRlBMRU5CUVVNc1JVRkJSVHRSUVVOb1F5eFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMRzFEUVVGdFF5eERRVUZETzFGQlF6TkVMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRVWNzV1VGQldTeEZRVUZGTEVOQlFVTTdTMEZEY0VNN1UwRkJUU3hKUVVGSkxGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNZVUZCWVN4RFFVRkRMRWxCUVVrc1YwRkJWeXhEUVVGRExGVkJRVlVzUTBGQlF5eEZRVUZGTzFGQlF6VkZMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRVWNzUjBGRGNFSXNTMEZCU3l4RFFVRkRMRmRCUVZjc1JVRkJSU3hMUVVGTExGbEJRVmtzUlVGQlJTeERRVUZETEZkQlFWY3NSVUZCUlR0WlFVTnVSQ3hEUVVGRExFTkJRVU1zUjBGQlJ5eExRVUZMTEVWQlFVVTdXVUZEV2l4RFFVRkRMRU5CUVVNc1IwRkJSeXhMUVVGTExFdEJRVXNzV1VGQldTeEZRVUZGTEVkQlF5OUNMRVZCUVVVc1EwRkJRenRSUVVOSUxHTkJRV01zUTBGQlF5eFJRVUZSTEVkQlFVY3NSMEZCVXl4RlFVRkZPMWxCUTNCRExFbEJRVWtzV1VGQldTeEZRVUZGTEV0QlFVc3NUVUZCVFN4SlFVRkpMRmxCUVZrc1JVRkJSU3hMUVVGTExGbEJRVms3WjBKQlF5OUVMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzWjBKQlFXZENMRU5CUVVNN08yZENRVU53UXl4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExHZENRVUZuUWl4RlFVRkZMRU5CUVVNN1VVRkRhRVFzUTBGQlF5eERRVUZETzB0QlEwWTdVMEZCVFN4SlFVRkpMRmxCUVZrc1JVRkJSU3hMUVVGTExFMUJRVTBzUlVGQlJUdFJRVU55UXl4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNWVUZCVlN4RFFVRkRPMWxCUTNoRUxFTkJRVU1zUTBGQlF5eG5Ra0ZCWjBJN1dVRkRiRUlzUTBGQlF5eERRVUZETEdkQ1FVRm5RaXhEUVVGRE8xRkJRM0JDTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1dVRkJXU3hGUVVGRkxFTkJRVU03UzBGRGNFTTdVMEZCVFR0UlFVTk9MRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzWjBKQlFXZENMRVZCUVVVc1EwRkJRenRSUVVNeFF5eFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRWRCUTNCQ0xFdEJRVXNzUTBGQlF5eFhRVUZYTEVWQlFVVXNTMEZCU3l4WlFVRlpMRVZCUVVVc1EwRkJReXhYUVVGWExFVkJRVVU3V1VGRGJrUXNRMEZCUXl4RFFVRkRMRWRCUVVjc1MwRkJTeXhGUVVGRk8xbEJRMW9zUTBGQlF5eERRVUZETEVkQlFVY3NTMEZCU3l4TFFVRkxMRmxCUVZrc1JVRkJSU3hIUVVNdlFpeEZRVUZGTEVOQlFVTTdTMEZEU0R0QlFVTkdMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU03UVVGRlRDeEpRVUZKTEdOQlFXTXNRMEZCUXl4UFFVRlBMRVZCUVVVN1NVRkRNMElzVFVGQlRTeFhRVUZYTEVkQlFVY3NSVUZCUlN4SFFVRkhMRmxCUVZrc1JVRkJSU3hEUVVGRE8wbEJRM2hETEZGQlFWRXNRMEZCUXl4RlFVRkZMRU5CUVVNc1dVRkJXU3hGUVVGRkxFdEJRVXNzU1VGQlNTeEZRVUZGTzFGQlEzQkRMRk5CUVZNc1EwRkJReXhYUVVGWExFTkJRVU1zUTBGQlF6dFJRVU4yUWl4alFVRmpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFTkJRVU03VVVGRE1VSXNVVUZCVVN4RFFVRkRMRmRCUVZjc1EwRkJReXhaUVVGWkxFTkJRVU1zUTBGQlF6dEpRVU53UXl4RFFVRkRMRU5CUVVNc1EwRkJRenREUVVOSU8wdEJRVTA3U1VGRFRpeFJRVUZSTEVOQlFVTXNSVUZCUlN4RFFVRkRMRmxCUVZrc1JVRkJSU3hMUVVGTExFbEJRVWtzUlVGQlJUdFJRVU53UXl4UlFVRlJMRU5CUVVNc1YwRkJWeXhEUVVGRExGbEJRVmtzUTBGQlF5eERRVUZETzBsQlEzQkRMRU5CUVVNc1EwRkJReXhEUVVGRE8wTkJRMGdpZlE9PSJdLCJuYW1lcyI6WyJwcmVzZW5jZSIsIlByZXNlbmNlIiwiY2xpZW50SWQiLCJjdXJyZW50VVJMIiwiVVJMIiwiZG9jdW1lbnQiLCJsb2NhdGlvbiIsImhyZWYiLCJjdXJyZW50UGF0aCIsInBhdGhuYW1lIiwicmVwbGFjZSIsInNwbGl0IiwiYnJvd3NpbmdUaW1lc3RhbXAiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93IiwicHJlc2VuY2VEYXRhIiwiZGV0YWlscyIsImxhcmdlSW1hZ2VLZXkiLCJzdGFydFRpbWVzdGFtcCIsInVwZGF0ZUNhbGxiYWNrIiwiX2Z1bmN0aW9uIiwiZnVuY3Rpb24iLCJ0aGlzIiwicGFyYW1ldGVyIiwicHJlc2VudCIsInJlc2V0RGF0YSIsImRlZmF1bHREYXRhIiwiZ2V0VVJMUGFyYW0iLCJ1cmxQYXJhbSIsInNlYXJjaFBhcmFtcyIsImdldCIsInRpdGxlIiwiYWN0aW9uUmVzdWx0IiwidGl0bGVGcm9tVVJMIiwiZGVjb2RlVVJJIiwic2xpY2UiLCJqb2luIiwicmVwbGFjZUFsbCIsInF1ZXJ5U2VsZWN0b3IiLCJ0ZXh0Q29udGVudCIsImUiLCJuYW1lc3BhY2VEZXRhaWxzIiwiY2xhc3NMaXN0IiwiZmluZCIsInYiLCJ0ZXN0Iiwic3RhdGUiLCJ2YWx1ZSIsInRvTG93ZXJDYXNlIiwib24iLCJhc3luYyIsInNldEFjdGl2aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==
undefined;