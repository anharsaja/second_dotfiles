var __webpack_exports__={};const presence=new Presence({clientId:"817385570912174121"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/S/Speedtest/assets/logo.png"},t=await presence.getSetting("showISP");if(window.location.hostname.includes("speedtest")){if(window.location.pathname.includes("/run")){const s=`${document.querySelector(".result-item-icon.result-item-host .result-data, .result-item-icon.result-item-host .result-label").textContent} - ${document.querySelector(".result-item-icon.result-item-host .result-data, .result-item-icon.result-item-host .result-label .result-name").textContent}`,n=document.querySelector("span.result-item.result-item-latency.result-data-latency-item.updated > span").textContent+document.querySelector("span:nth-child(1) > span.result-data-unit").textContent,i=document.querySelector(".result-item-download .result-data").textContent+document.querySelector(".result-item-download .result-data-unit").textContent,a=document.querySelector(".result-item-upload .result-data").textContent+document.querySelector(".result-item-upload .result-data-unit").textContent;let l=document.querySelector(".result-item-icon.result-item-isp .result-label").textContent;t||(l="Hidden"),29===a.length?(e.details=`Live results - Ping ${27===n.length?"Testing":n} | Download ${29===i.length?"Testing":i} | Upload Testing`,e.state=`ISP: ${l} | Server: ${s}`):e.details="Browsing the homepage",e.startTimestamp=browsingTimestamp}else if(window.location.pathname.includes("/result")){const s=`${document.querySelector(".result-item-icon.result-item-host .result-data, .result-item-icon.result-item-host .result-label").textContent} - ${document.querySelector(".result-item-icon.result-item-host .result-data, .result-item-icon.result-item-host .result-label .result-name").textContent}`;let n=document.querySelector(".result-item-icon.result-item-isp .result-label").textContent;t||(n="Hidden");try{e.details=`Viewing results - Ping ${document.querySelector("span.result-item.result-item-latency.result-data-latency-item.updated > span").textContent} ms | Download ${document.querySelector("div.result-item-container.result-item-container-align-center > div > div.result-data.u-align-left > span").textContent} Mbps | Upload ${document.querySelector("div.result-item-container.result-item-container-align-left > div > div.result-data.u-align-left > span").textContent} Mbps`}catch{e.details=`Viewing results - Ping ${document.querySelector("span.result-item.result-item-latency.result-data-latency-item.updated > span").textContent} ms | Download ${document.querySelector("div.result-item-container.result-item-container-align-center > div > div.result-data.u-align-left > span").textContent} Mbps | Upload ${document.querySelector("div.result-item-container.result-item-container-align-left > div > div.result-data.u-align-left > span").textContent} Mbps`}e.state=`ISP: ${n} | Server: ${s}`,e.startTimestamp=browsingTimestamp}else if(window.location.pathname.includes("/ookla-5g-map"))e.details="Navigate on the 5G map",e.startTimestamp=browsingTimestamp;else if(window.location.pathname.includes("/apps"))e.details="Watching apps",e.startTimestamp=browsingTimestamp;else if(window.location.pathname.endsWith("/insights"))e.details="Browsing insights",e.startTimestamp=browsingTimestamp;else if(window.location.pathname.includes("/insights/blog"))e.details="Browsing blog","/insights/blog/"!==window.location.pathname&&(e.state=document.querySelector("#speedtest .header .header-wrap h1").textContent),e.startTimestamp=browsingTimestamp;else if(window.location.pathname.includes("/global-index"))e.details="Browsing Speedtest Global Index",e.state=document.querySelector(".section .page-header").textContent,e.startTimestamp=browsingTimestamp;else if(window.location.pathname.includes("/speedtest-servers"))e.details="Look how to host a server",e.startTimestamp=browsingTimestamp;else if(window.location.pathname.includes("/enterprise"))e.details="Look entreprise solutions",e.startTimestamp=browsingTimestamp;else if(window.location.pathname.includes("/about"))e.details="About Ookla",e.startTimestamp=browsingTimestamp;else if(window.location.pathname.includes("/login"))e.details="Log in",e.startTimestamp=browsingTimestamp;else if(window.location.pathname.includes("/register"))e.details="Creating an account",e.startTimestamp=browsingTimestamp;else if(window.location.pathname.includes("/settings"))e.details="Browsing settings",e.startTimestamp=browsingTimestamp;else if(window.location.pathname.includes("/help"))e.details="Browsing help QA",e.startTimestamp=browsingTimestamp;else if("1"===document.querySelector("a > span.start-background").style.opacity){const s=`${document.querySelector(".result-item-icon.result-item-host .result-data, .result-item-icon.result-item-host .result-label").textContent} - ${document.querySelector(".result-item-icon.result-item-host .result-data, .result-item-icon.result-item-host .result-label .result-name").textContent}`,n=document.querySelector(".result-item-download .result-data").textContent+document.querySelector(".result-item-download .result-data-unit").textContent,i=`${document.querySelector(".result-item-upload .result-data").textContent}${document.querySelector(".result-item-upload .result-data-unit").textContent}`;let a=document.querySelector(".result-item-icon.result-item-isp .result-label").textContent,l="";t||(a="Hidden"),l=document.querySelector("span.result-item.result-item-latency.result-data-latency-item.updated > span")&&document.querySelector("span:nth-child(1) > span.result-data-unit")?document.querySelector("span.result-item.result-item-latency.result-data-latency-item.updated > span").textContent+document.querySelector("span:nth-child(1) > span.result-data-unit").textContent:"N/A",e.details=`Testing ${s}`,e.details=`Live results - Ping ${27===l.length?"Testing":l} | Download ${29===n.length?"Testing":n} | Upload  ${29===i.length?"Testing":i}`,e.state=`ISP: ${a} | Server: ${s}`}else e.details="Browsing the homepage";e.startTimestamp=browsingTimestamp}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;