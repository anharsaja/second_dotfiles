var __webpack_exports__={};const presence=new Presence({clientId:"607651992567021580"});let oldLang=null;function fullURL(e,t){return e?e?.includes("https")?e:e.startsWith("/")?`https://${t}${e}`:"":""}async function getStrings(){return presence.getStrings({play:"general.playing",pause:"general.paused",viewAlbum:"general.buttonViewAlbum",viewArtist:"general.buttonViewArtist",viewPodcast:"general.buttonViewPodcast"},await presence.getSetting("lang").catch((()=>"en")))}presence.on("UpdateData",(async()=>{let e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/D/Deezer/assets/logo.png"},t=await getStrings(),s=!1;const[a,n,i,r]=await Promise.all([presence.getSetting("buttons"),presence.getSetting("lang").catch((()=>"en")),presence.getSetting("cover"),presence.getSetting("browseInfo")]),{pathname:l,hostname:o}=document.location,c=document.querySelector('[data-testid="remaining_time"]')?.textContent;oldLang===n&&oldLang||(oldLang=n,t=await getStrings());const d={shows:{details:"Browsing shows"},channels:{details:"Browsing channels"},loved:{details:"Browsing user's loved"},playlists:{details:"Browsing user's playlists"},albums:{details:"Browsing user's albums"},artists:{details:"Browsing user's artists"},podcasts:{details:"Browsing user's podcasts"},show:{details:"Viewing a podcast"},playlist:{details:"Looking at a playlist"},album:{details:"Looking at an album"},artist:{details:"Looking at an artist"}};for(const[t,s]of Object.entries(d))if(l.includes(t)&&(e={...e,...s},r||!c||"00:00"===c))return presence.setActivity(e);const g=document.querySelector('[data-testid="item_title"] > a')?.getAttribute("href"),u=document.querySelector('[data-testid="item_subtitle"] > a')?.getAttribute("href"),m=presence.getTimestamps(presence.timestampFromFormat(document.querySelector('[data-testid="elapsed_time"]').textContent),presence.timestampFromFormat(document.querySelector('[data-testid="remaining_time"]').textContent));document.querySelector('[data-testid="play_button_play"]')&&(s=!0),e.details=document.querySelector('[data-testid="item_title"]').textContent,e.state=document.querySelector('[data-testid="item_subtitle"]').textContent,e.largeImageKey=i?document.querySelector('[data-testid="item_cover"]')?.querySelector("img")?.getAttribute("src")?.replace(/(264x264)|(48x48)/g,"512x512")??"https://cdn.rcd.gg/PreMiD/websites/D/Deezer/assets/logo.png":"https://cdn.rcd.gg/PreMiD/websites/D/Deezer/assets/logo.png",e.smallImageKey=s?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=s?t.pause:t.play,[e.startTimestamp,e.endTimestamp]=m,s&&(delete e.startTimestamp,delete e.endTimestamp),a&&(g?.includes("/")?e.buttons=[{label:t.viewArtist,url:fullURL(u,o)},{label:t.viewAlbum,url:fullURL(g,o)}]:e.buttons=[{label:t.viewPodcast,url:fullURL(u,o)}]),presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;