var __webpack_exports__={};const presence=new Presence({clientId:"1061398473368412210"}),getStrings=async()=>presence.getStrings({buttonListenAlong:"general.buttonListenAlong",listeningMusic:"general.listeningMusic",pause:"general.paused",live:"general.live",viewPage:"general.viewPage"},await presence.getSetting("lang").catch((()=>"en")));presence.on("UpdateData",(async()=>{const[e,t]=await Promise.all([getStrings(),presence.getSetting("buttons")]),n={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/V/Vodafone%20FM/assets/logo.png",details:e.listeningMusic};document.querySelector("#play").classList.contains("hidden")?(n.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/V/Vodafone%20FM/assets/0.png",n.smallImageText=e.live):(n.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/V/Vodafone%20FM/assets/1.png",n.smallImageText=e.pause);const s=document.querySelector("#artist_name")?.textContent,a=document.querySelector("#song_name")?.textContent;s&&a&&(n.details=a,n.state=s);const g=document.querySelector("#cover");g&&!g.src.includes("/images/nocover.png")&&(n.largeImageKey=g.src),t&&(n.buttons=[{label:e.buttonListenAlong,url:document.URL}]),presence.setActivity(n)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLFNBQVcsSUFBSUMsU0FBUyxDQUMxQkMsU0FBVSx3QkFDVkMsV0FBYUMsU0FBWUosU0FBU0csV0FBVyxDQUM3Q0Usa0JBQW1CLDRCQUNuQkMsZUFBZ0IseUJBQ2hCQyxNQUFPLGlCQUNQQyxLQUFNLGVBQ05DLFNBQVUsMEJBQ0xULFNBQVNVLFdBQVcsUUFBUUMsT0FBTSxJQUFNLFFBQ2pEWCxTQUFTWSxHQUFHLGNBQWNSLFVBQ3RCLE1BQU9TLEVBQVNDLFNBQWlCQyxRQUFRQyxJQUFJLENBQ3pDYixhQUNBSCxTQUFTVSxXQUFXLGFBQ3BCTyxFQUFlLENBQ2ZDLGNBQWUscUVBQ2ZDLFFBQVNOLEVBQVFQLGdCQUVqQmMsU0FBU0MsY0FBYyxTQUFTQyxVQUFVQyxTQUFTLFdBQ25ETixFQUFhTyxjQUNULGtFQUNKUCxFQUFhUSxlQUFpQlosRUFBUUwsT0FHdENTLEVBQWFPLGNBQ1Qsa0VBQ0pQLEVBQWFRLGVBQWlCWixFQUFRTixPQUUxQyxNQUFNbUIsRUFBU04sU0FBU0MsY0FBYyxpQkFBaUJNLFlBQWFDLEVBQU9SLFNBQVNDLGNBQWMsZUFBZU0sWUFDN0dELEdBQVVFLElBQ1ZYLEVBQWFFLFFBQVVTLEVBQ3ZCWCxFQUFhWSxNQUFRSCxHQUV6QixNQUFNSSxFQUFRVixTQUFTQyxjQUFjLFVBQ2pDUyxJQUFVQSxFQUFNQyxJQUFJQyxTQUFTLHlCQUM3QmYsRUFBYUMsY0FBZ0JZLEVBQU1DLEtBQ25DakIsSUFDQUcsRUFBYUgsUUFBVSxDQUNuQixDQUNJbUIsTUFBT3BCLEVBQVFSLGtCQUNmNkIsSUFBS2QsU0FBU2UsT0FJMUJuQyxTQUFTb0MsWUFBWW5CLEVBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wcmVzZW5jZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwcmVzZW5jZSA9IG5ldyBQcmVzZW5jZSh7XG4gICAgY2xpZW50SWQ6IFwiMTA2MTM5ODQ3MzM2ODQxMjIxMFwiLFxufSksIGdldFN0cmluZ3MgPSBhc3luYyAoKSA9PiBwcmVzZW5jZS5nZXRTdHJpbmdzKHtcbiAgICBidXR0b25MaXN0ZW5BbG9uZzogXCJnZW5lcmFsLmJ1dHRvbkxpc3RlbkFsb25nXCIsXG4gICAgbGlzdGVuaW5nTXVzaWM6IFwiZ2VuZXJhbC5saXN0ZW5pbmdNdXNpY1wiLFxuICAgIHBhdXNlOiBcImdlbmVyYWwucGF1c2VkXCIsXG4gICAgbGl2ZTogXCJnZW5lcmFsLmxpdmVcIixcbiAgICB2aWV3UGFnZTogXCJnZW5lcmFsLnZpZXdQYWdlXCIsXG59LCBhd2FpdCBwcmVzZW5jZS5nZXRTZXR0aW5nKFwibGFuZ1wiKS5jYXRjaCgoKSA9PiBcImVuXCIpKTtcbnByZXNlbmNlLm9uKFwiVXBkYXRlRGF0YVwiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgW3N0cmluZ3MsIGJ1dHRvbnNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICBnZXRTdHJpbmdzKCksXG4gICAgICAgIHByZXNlbmNlLmdldFNldHRpbmcoXCJidXR0b25zXCIpLFxuICAgIF0pLCBwcmVzZW5jZURhdGEgPSB7XG4gICAgICAgIGxhcmdlSW1hZ2VLZXk6IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9WL1ZvZGFmb25lJTIwRk0vYXNzZXRzL2xvZ28ucG5nXCIsXG4gICAgICAgIGRldGFpbHM6IHN0cmluZ3MubGlzdGVuaW5nTXVzaWMsXG4gICAgfTtcbiAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwbGF5XCIpLmNsYXNzTGlzdC5jb250YWlucyhcImhpZGRlblwiKSkge1xuICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9XG4gICAgICAgICAgICBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvVi9Wb2RhZm9uZSUyMEZNL2Fzc2V0cy8wLnBuZ1wiO1xuICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZVRleHQgPSBzdHJpbmdzLmxpdmU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9XG4gICAgICAgICAgICBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvVi9Wb2RhZm9uZSUyMEZNL2Fzc2V0cy8xLnBuZ1wiO1xuICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZVRleHQgPSBzdHJpbmdzLnBhdXNlO1xuICAgIH1cbiAgICBjb25zdCBhcnRpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FydGlzdF9uYW1lXCIpPy50ZXh0Q29udGVudCwgc29uZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc29uZ19uYW1lXCIpPy50ZXh0Q29udGVudDtcbiAgICBpZiAoYXJ0aXN0ICYmIHNvbmcpIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBzb25nO1xuICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBhcnRpc3Q7XG4gICAgfVxuICAgIGNvbnN0IGNvdmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb3ZlclwiKTtcbiAgICBpZiAoY292ZXIgJiYgIWNvdmVyLnNyYy5pbmNsdWRlcyhcIi9pbWFnZXMvbm9jb3Zlci5wbmdcIikpXG4gICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID0gY292ZXIuc3JjO1xuICAgIGlmIChidXR0b25zKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5idXR0b25zID0gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGxhYmVsOiBzdHJpbmdzLmJ1dHRvbkxpc3RlbkFsb25nLFxuICAgICAgICAgICAgICAgIHVybDogZG9jdW1lbnQuVVJMLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXTtcbiAgICB9XG4gICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkocHJlc2VuY2VEYXRhKTtcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY0hKbGMyVnVZMlV1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SndjbVZ6Wlc1alpTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGRkJRVkVzUTBGQlF6dEpRVU0xUWl4UlFVRlJMRVZCUVVVc2NVSkJRWEZDTzBOQlF5OUNMRU5CUVVNc1JVRkRSaXhWUVVGVkxFZEJRVWNzUzBGQlN5eEpRVUZKTEVWQlFVVXNRMEZEZGtJc1VVRkJVU3hEUVVGRExGVkJRVlVzUTBGRGJFSTdTVUZEUXl4cFFrRkJhVUlzUlVGQlJTd3lRa0ZCTWtJN1NVRkRPVU1zWTBGQll5eEZRVUZGTEhkQ1FVRjNRanRKUVVONFF5eExRVUZMTEVWQlFVVXNaMEpCUVdkQ08wbEJRM1pDTEVsQlFVa3NSVUZCUlN4alFVRmpPMGxCUTNCQ0xGRkJRVkVzUlVGQlJTeHJRa0ZCYTBJN1EwRkROVUlzUlVGRFJDeE5RVUZOTEZGQlFWRXNRMEZCUXl4VlFVRlZMRU5CUVZNc1RVRkJUU3hEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVNelJDeERRVUZETzBGQlJVb3NVVUZCVVN4RFFVRkRMRVZCUVVVc1EwRkJReXhaUVVGWkxFVkJRVVVzUzBGQlN5eEpRVUZKTEVWQlFVVTdTVUZEY0VNc1RVRkJUU3hEUVVGRExFOUJRVThzUlVGQlJTeFBRVUZQTEVOQlFVTXNSMEZCUnl4TlFVRk5MRTlCUVU4c1EwRkJReXhIUVVGSExFTkJRVU03VVVGRE0wTXNWVUZCVlN4RlFVRkZPMUZCUTFvc1VVRkJVU3hEUVVGRExGVkJRVlVzUTBGQlZTeFRRVUZUTEVOQlFVTTdTMEZEZGtNc1EwRkJReXhGUVVOR0xGbEJRVmtzUjBGQmFVSTdVVUZETlVJc1lVRkJZU3hGUVVOYUxHOUZRVUZ2UlR0UlFVTnlSU3hQUVVGUExFVkJRVVVzVDBGQlR5eERRVUZETEdOQlFXTTdTMEZETDBJc1EwRkJRenRKUVVWSUxFbEJRVWtzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhUUVVGVExFTkJRVU1zVVVGQlVTeERRVUZETEZGQlFWRXNRMEZCUXl4RlFVRkZPMUZCUTJwRkxGbEJRVmtzUTBGQlF5eGhRVUZoTzFsQlEzcENMR2xGUVVGcFJTeERRVUZETzFGQlEyNUZMRmxCUVZrc1EwRkJReXhqUVVGakxFZEJRVWNzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXp0TFFVTXpRenRUUVVGTk8xRkJRMDRzV1VGQldTeERRVUZETEdGQlFXRTdXVUZEZWtJc2FVVkJRV2xGTEVOQlFVTTdVVUZEYmtVc1dVRkJXU3hEUVVGRExHTkJRV01zUjBGQlJ5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRPMHRCUXpWRE8wbEJSVVFzVFVGQlRTeE5RVUZOTEVkQlFVY3NVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXhqUVVGakxFTkJRVU1zUlVGQlJTeFhRVUZYTEVWQlEycEZMRWxCUVVrc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEZsQlFWa3NRMEZCUXl4RlFVRkZMRmRCUVZjc1EwRkJRenRKUVVNeFJDeEpRVUZKTEUxQlFVMHNTVUZCU1N4SlFVRkpMRVZCUVVVN1VVRkRia0lzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4SlFVRkpMRU5CUVVNN1VVRkROVUlzV1VGQldTeERRVUZETEV0QlFVc3NSMEZCUnl4TlFVRk5MRU5CUVVNN1MwRkROVUk3U1VGRlJDeE5RVUZOTEV0QlFVc3NSMEZCUnl4UlFVRlJMRU5CUVVNc1lVRkJZU3hEUVVGdFFpeFJRVUZSTEVOQlFVTXNRMEZCUXp0SlFVTnFSU3hKUVVGSkxFdEJRVXNzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SFFVRkhMRU5CUVVNc1VVRkJVU3hEUVVGRExIRkNRVUZ4UWl4RFFVRkRPMUZCUTNSRUxGbEJRVmtzUTBGQlF5eGhRVUZoTEVkQlFVY3NTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJRenRKUVVWNFF5eEpRVUZKTEU5QlFVOHNSVUZCUlR0UlFVTmFMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWM3V1VGRGRFSTdaMEpCUTBNc1MwRkJTeXhGUVVGRkxFOUJRVThzUTBGQlF5eHBRa0ZCYVVJN1owSkJRMmhETEVkQlFVY3NSVUZCUlN4UlFVRlJMRU5CUVVNc1IwRkJSenRoUVVOcVFqdFRRVU5FTEVOQlFVTTdTMEZEUmp0SlFVVkVMRkZCUVZFc1EwRkJReXhYUVVGWExFTkJRVU1zV1VGQldTeERRVUZETEVOQlFVTTdRVUZEY0VNc1EwRkJReXhEUVVGRExFTkJRVU1pZlE9PSJdLCJuYW1lcyI6WyJwcmVzZW5jZSIsIlByZXNlbmNlIiwiY2xpZW50SWQiLCJnZXRTdHJpbmdzIiwiYXN5bmMiLCJidXR0b25MaXN0ZW5BbG9uZyIsImxpc3RlbmluZ011c2ljIiwicGF1c2UiLCJsaXZlIiwidmlld1BhZ2UiLCJnZXRTZXR0aW5nIiwiY2F0Y2giLCJvbiIsInN0cmluZ3MiLCJidXR0b25zIiwiUHJvbWlzZSIsImFsbCIsInByZXNlbmNlRGF0YSIsImxhcmdlSW1hZ2VLZXkiLCJkZXRhaWxzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJzbWFsbEltYWdlS2V5Iiwic21hbGxJbWFnZVRleHQiLCJhcnRpc3QiLCJ0ZXh0Q29udGVudCIsInNvbmciLCJzdGF0ZSIsImNvdmVyIiwic3JjIiwiaW5jbHVkZXMiLCJsYWJlbCIsInVybCIsIlVSTCIsInNldEFjdGl2aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==
undefined;