var __webpack_exports__={};const presence=new Presence({clientId:"630874255990587402"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused"});presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/G/Gfycat/assets/logo.png"};if(document.location.pathname.startsWith("/discover")){const t=document.querySelector(".multiple-view__title").textContent;t&&(e.state=t),e.details="Browsing...",e.startTimestamp=Date.now(),presence.setActivity(e)}else if(document.location.pathname.startsWith("/gifs/search")){const t=document.querySelector(".feed-with-player__title").textContent;e.details="Searching...",t&&(e.state=t),e.startTimestamp=Date.now(),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText="Searching",presence.setActivity(e)}else if(document.location.pathname.startsWith("/upload")||document.location.pathname.startsWith("/create"))e.details="Uploading...",e.startTimestamp=Date.now(),presence.setActivity(e);else if(document.location.pathname.startsWith("/@"))e.details="Viewing profile",e.state=document.querySelector(".profile-container .profile-info-container .name").textContent,e.startTimestamp=Date.now(),presence.setActivity(e);else if(document.location.pathname.startsWith("/jobs"))e.details="Browsing jobs",e.startTimestamp=Date.now(),presence.setActivity(e);else{const t=document.querySelector(".video-player-wrapper video");t?([e.startTimestamp,e.endTimestamp]=presence.getTimestamps(Math.floor(t.currentTime),Math.floor(t.duration)),e.details=document.querySelector(".gif-info .title").textContent,e.state=document.querySelector(".gif-info .gif-views").textContent,e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=t.paused?(await strings).pause:(await strings).play,t.paused&&(delete e.startTimestamp,delete e.endTimestamp),presence.setActivity(e)):(e.details="Browsing...",e.startTimestamp=Date.now(),presence.setActivity(e))}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;