var __webpack_exports__={};const presence=new Presence({clientId:"477919120789078026"}),browsingStamp=Math.floor(Date.now()/1e3);async function getStrings(){return presence.getStrings({browse:"general.browsing",buttonViewPage:"general.buttonViewPage",search:"general.searchFor"},await presence.getSetting("lang").catch((()=>"de")))}let strings,oldLang=null;async function imgPath(e,t){return e?e.includes(t)?`https://${e.replace("//","")}`:`https://${t}${e}`:"https://cdn.rcd.gg/PreMiD/websites/I/I%20Love%20Music/assets/logo.png"}function capitalizeFirstLetter(e){if(e)return e.trim().charAt(0).toUpperCase()+e.trim().slice(1).toLowerCase()}presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/I/I%20Love%20Music/assets/logo.png",startTimestamp:browsingStamp},{pathname:t,hostname:n,href:r}=document.location,s=document.querySelector('section[class*="playing"]'),a=s?.querySelector('[class="bottom"]')?.querySelectorAll("h2,h3"),c=document.querySelector('[type="text"]'),o=await presence.getSetting("lang").catch((()=>"de"));if(oldLang===o&&strings||(oldLang=o,strings=await getStrings()),c?.value&&document.querySelector('[class="toggleMenu search display-menu"]'))return e.details=strings.search,e.state=c?.value||document.querySelector("body > div.container.main-container.min-vh-100.px-3 > h3")?.textContent.split('"')[1]||"Niks",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",void presence.setActivity(e);document.querySelector('[class="toggleMenu left display-menu"]')?e.details="Anzeige des Menüs":1===Number(document.querySelector("#playstop")?.textContent)?(e.buttons=[{label:"Hören Sie Den Sender",url:r}],e.details=capitalizeFirstLetter(document.querySelector("#content > div.single-outer.channelbgcolor > section.bottom.channelinfo > h2")?.textContent??a?.[1]?.textContent??"Das Radio hören"),e.state=capitalizeFirstLetter(document.querySelector("#content > div.single-outer.channelbgcolor > section.bottom.channelinfo > h3")?.textContent??a?.[0]?.textContent),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=capitalizeFirstLetter(document.querySelector('[class="channel-headline big"]')?.textContent??s?.querySelector("h1")?.textContent),e.largeImageKey=await imgPath(document.querySelector('[class="single-outer"]')?.querySelector("img")?.getAttribute("src")??s?.querySelector("img")?.getAttribute("src"),n)):"/"!==t?(e.details=`${capitalizeFirstLetter(document.querySelector('[class="big "]')?.textContent)} anschauen`,e.buttons=[{label:strings.buttonViewPage,url:r}]):e.details=strings.browse,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;