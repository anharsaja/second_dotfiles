var __webpack_exports__={};const presence=new Presence({clientId:"844107447933075498"});async function getStrings(){return presence.getStrings({browse:"general.browsing",buttonViewEpisode:"general.buttonViewEpisode",buttonWatchVideo:"general.buttonWatchVideo",paused:"general.paused",play:"general.playing",search:"general.search",searchFor:"general.searchFor",viewCategory:"general.viewCategory",viewHome:"general.viewHome",viewMovie:"general.viewMovie",viewShow:"general.viewShow",watchingVid:"general.watchingVid"},await presence.getSetting("lang").catch((()=>"en")))}var Logo;function logoCheck(e){return 0===e?Logo.RedShowtime:1===e?Logo.WhiteShowtime:2===e?Logo.BlackShowtime:3===e?Logo.SkyShowtime:Logo.RedShowtime}!function(e){e.RedShowtime="https://cdn.rcd.gg/PreMiD/websites/S/Showtime/assets/0.png",e.WhiteShowtime="https://cdn.rcd.gg/PreMiD/websites/S/Showtime/assets/1.png",e.BlackShowtime="https://cdn.rcd.gg/PreMiD/websites/S/Showtime/assets/2.png",e.SkyShowtime="https://cdn.rcd.gg/PreMiD/websites/S/Showtime/assets/3.png"}(Logo||(Logo={}));let strings,pathSplit,oldLang=null;presence.on("UpdateData",(async()=>{const[e,t,s,a,i]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("covers"),presence.getSetting("logo")]),r={largeImageKey:logoCheck(i)},{pathname:n,hostname:o,href:l}=document.location,c=document.querySelector('[class="item playback-metadata__container-episode-metadata-info"]')?.textContent?.split(":"),g=document.querySelector("video");switch(oldLang===e&&strings||(oldLang=e,strings=await getStrings()),o.replace("www.","")){case"skyshowtime.com":{const e=document.querySelector('[class="playback-header__title"]')?.textContent??document.querySelector("title")?.textContent?.split(" - ")[0];switch(pathSplit=n.replace("/watch","").replace("/kids","").split("/"),pathSplit[1]){case"highlights":case"home":r.details=strings.viewHome;break;case"tv":"/tv"===n.replace("/watch","")||t?r.details="Browsing tv shows":r.details=`Browsing ${e}'s shows`;break;case"movies":r.details="Browsing movies";break;case"entertainment":r.details="Browsing tv shows";break;case"my-stuff":r.details="Viewing their list";break;case"profiles":l.includes("#setting")?r.details="Managing their profiles":r.details="Viewing their profiles";break;case"search":{const e=document.querySelector('input[class="search-input"]');r.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e?.value&&!t?(r.details=strings.searchFor,r.state=e.value):r.details=strings.search;break}case"asset":r.details="Viewing "+(n.includes("/tv/")?"tv show":"movie"),r.details=n.includes("/tv/")?t?strings.viewShow.replace(":",""):strings.viewShow:t?strings.viewMovie.replace(":",""):strings.viewMovie,r.largeImageKey=document.querySelector('[class="program-details__title program-details__title-logo visible"]')?.getAttribute("src")?.replace("webp","png")??logoCheck(i),r.state=e;break;case"playback":g&&!isNaN(g.duration)&&([r.startTimestamp,r.endTimestamp]=presence.getTimestampsfromMedia(g),r.smallImageKey=g.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",r.smallImageText=g.paused?strings.paused:strings.play,g.paused?delete r.endTimestamp:delete r.startTimestamp,r.buttons=[{label:strings.buttonWatchVideo,url:l}]),r.details=t?strings.watchingVid:e,r.state=`${c[0].replace(" ",":")} - ${c[1].trim()}`;break;default:r.details=strings.browse}break}case"showtime.com":case"sho.com":{const e=document.querySelector('[data-label="title link"]')?.textContent?.split(","),s=document.querySelector('input[class="global-nav__search-field"]');switch(pathSplit=n.split("/"),!0){case"Series"===document.querySelector("[class*='global-nav--selected']")?.textContent:r.details="Viewing series";break;case!!s?.value:r.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",t?r.details=strings.search:(r.details=strings.searchFor,r.state=s.value);break;case!!document.querySelector('[class="refresh-hero__body"]')&&!!pathSplit[1]:r.details=t?strings.viewShow.replace(":",""):strings.viewShow,r.state=document.querySelector('[class="refresh-hero__headline "]')?.textContent;break;default:switch(pathSplit[1]){case"channel-listings":r.details="Viewing channel listings";break;case"sports":case"documentaries":case"movies":r.details=`Browsing ${document.querySelector('[class="global-nav__item"]')?.textContent?.toLowerCase()?.trim()}`;break;case"schedule":r.details="Browsing the schedule";break;case"video":switch(!0){case"full-episodes"===pathSplit[2]:r.details="Browsing all free full episodes";break;case!!pathSplit[2].match(/[0-9]{5}/gm):g&&!isNaN(g.duration)?([r.startTimestamp,r.endTimestamp]=presence.getTimestampsfromMedia(g),r.smallImageKey=g.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",r.smallImageText=g.paused?strings.paused:strings.play,g.paused?delete r.endTimestamp:delete r.startTimestamp,r.buttons=[{label:strings.buttonWatchVideo,url:l}]):r.buttons=[{label:strings.buttonViewEpisode,url:l}],r.details=t?strings.watchingVid:document.querySelector("title")?.textContent?.toLowerCase().includes("trailer")?document.querySelector('[class="video-metadata__details__title"]')?.textContent?.replace(/Season [0-9] /gm,""):e[0],r.state=e.length>2?`${e[1].replace(/ /gm,"").replace("Season","S")}${e[2].replace(/ /gm,"").replace("Episode",":E")}`:e[1],r.largeImageKey=document.querySelector('meta[property="og:image"]')?.getAttribute("content")??logoCheck(i)}break;default:r.details=strings.browse}}}}t&&r.state&&delete r.state,s&&!t||!r.buttons||delete r.buttons,a&&!t||Object.values(Logo).includes(r.largeImageKey)||(r.largeImageKey=logoCheck(i)),r.details?presence.setActivity(r):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;