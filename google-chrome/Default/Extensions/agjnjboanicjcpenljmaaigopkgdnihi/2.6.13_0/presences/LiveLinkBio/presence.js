var __webpack_exports__={};const presence=new Presence({clientId:"966711989533544580"}),browsingTimestamp=Math.floor(Date.now()/1e3);async function getStrings(){return presence.getStrings({browse:"general.browsing"},await presence.getSetting("lang").catch((()=>"en")))}let strings,oldLang=null;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/L/LiveLinkBio/assets/logo.png",startTimestamp:browsingTimestamp},[t,n,i]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("buttons")]),{href:s,pathname:a}=document.location;if(oldLang===t&&strings||(oldLang=t,strings=await getStrings()),n)return e.details=strings.browse,void presence.setActivity(e);let l;const r=document.querySelector("body > main > section > div.row.mb-4 > div.col-12.col-lg.d-flex.align-items-center.mb-3.mb-lg-0 > h1"),o=document.querySelector('[class="nav-link active"]')??document.querySelector('[class="active"]');switch(a.split("/")[1]){case"":e.details="Homepage";break;case"affiliate":e.buttons=[{label:"View Affiliates",url:s}],e.details="Viewing affiliates";break;case"dashboard":e.details="Viewing the dashboard",e.buttons=[{label:"View Dashboard",url:s}];break;case"link":e.state=document.querySelector('[aria-expanded="true"]')?.textContent??"",a.endsWith("statistics")?e.details=`Viewing statistics of link: ${document.querySelector('[id="link_url"]')?.textContent}`:e.details=`Editing link: ${document.querySelector("#link_url").textContent}`;break;case"tools":e.details=o?`Using ${o.textContent}`:"Viewing all tools";break;default:document.querySelector("body").className.includes("open")?(l=document.querySelectorAll('[class="modal-title"]')[1].textContent.replace("Edit",""),e.details=l,e.state=document.querySelector("#update_name").value):r&&!o?(l=r.textContent.trim(),e.buttons=[{label:"View All",url:s}],e.details=`Viewing all ${l}`):o&&(e.details=o.textContent.trim())}!i&&e.buttons&&delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;