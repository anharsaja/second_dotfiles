var __webpack_exports__={};const presence=new Presence({clientId:"809093093600133165"}),browsingTimestamp=Math.floor(Date.now()/1e3);let cached;async function getStrings(){return presence.getStrings({playing:"general.playing",paused:"general.paused",live:"general.live",browse:"general.browsing",forYou:"tiktok.forYou",following:"tiktok.following",buttonViewProfile:"general.buttonViewProfile",viewProfile:"general.viewProfile",viewAProfile:"general.viewAProfile",viewTikTok:"tiktok.viewing",buttonViewTikTok:"tiktok.buttonViewTikTok",browseThrough:"tiktok.browseThrough",watchingLive:"general.watchingLive",readingADM:"general.readingADM",exploringWithTag:"tiktok.exploringWithTag",viewAPlaylist:"general.viewAPlaylist",buttonWatchStream:"general.buttonWatchStream"},await presence.getSetting("lang").catch((()=>"en")))}function getVideo(e){const t=e?.src;if(!t||cached?.videoURL&&cached?.video&&cached?.videoURL===t)return!e&&cached.video?cached.video:void 0;cached={videoURL:t,video:e}}let strings,oldLang=null;presence.on("UpdateData",(async()=>{const e={type:3,largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/TikTok/assets/logo.png",startTimestamp:browsingTimestamp},[t,s,r,n]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("show-profile-usernames")]),{pathname:i,hostname:a,href:o}=document.location,l=document.querySelector("html")?.getAttribute("lang"),c=document.querySelector('[data-e2e="user-profile-nickname"]')?.textContent??document.querySelector('[data-e2e="user-subtitle"]')?.textContent??document.querySelector('[data-e2e="browser-nickname"]')?.querySelector('[class*="SpanNickName"]')?.textContent??document.querySelector('[data-e2e="browser-nickname"]')?.firstElementChild?.textContent,u=document.querySelector('[data-e2e="user-profile-uid"]')?.textContent??document.querySelector('[data-e2e="user-title"]')?.textContent??document.querySelector('[data-e2e="browse-username"]')?.textContent,d=document.querySelector('[data-e2e="user-profile-live-title"]')?.textContent??document.querySelector('[data-e2e="browse-video-desc"]')?.textContent;switch(oldLang===t&&strings||(oldLang=t,strings=await getStrings()),!0){case"/following"===i:case i.includes("foryou"):case"/"===i:case i===`/${l}`:case i===`/${l}/`:{s||delete e.startTimestamp;const t=Array.from(document.querySelectorAll("video")).find((e=>!e.paused));let r;t?(r=t,getVideo(t)):r=getVideo(null);const n=r?.closest('[data-e2e="recommend-list-item-container"]'),i=n?.querySelector('h3[data-e2e="video-author-uniqueid"]'),o=`https://www.tiktok.com/@${i?.textContent}/video/${r?.closest('[class="tiktok-web-player no-controls"]')?.getAttribute("id")?.split("-")?.[2]}`,l=`https://${a}${i?.parentElement?.getAttribute("href")??""}/`,c=o.match(/https:\/\/www[.]tiktok[.]com\/@.*\/video\/[0-9]{19}/),u=l.match(/http(s)?:\/\/(www[.])?tiktok\.com\/@([\w.]{0,23}\w)(?:\/\S*)?\//)?.[0],d="pause"===r?.closest('div[data-e2e="feed-video"]')?.querySelector('[data-e2e="video-play"]')?.getAttribute("aria-label")?.toLowerCase();e.details=s?strings.browseThrough:i&&n?.querySelector('[data-e2e="video-author-nickname"]')?.textContent?`${n?.querySelector('[data-e2e="video-author-nickname"]')?.textContent} (@${i?.textContent})`:strings.browseThrough,e.state=n?.querySelector('[data-e2e="video-desc"]')?.textContent,c&&u?e.buttons=[{label:strings.buttonViewTikTok,url:o},{label:strings.buttonViewProfile,url:l}]:u?e.buttons=[{label:strings.buttonViewProfile,url:l}]:c&&(e.buttons=[{label:strings.buttonViewTikTok,url:o}]),!d&&r?.duration&&r?.currentTime&&([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(r)),e.smallImageKey=d?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=d?strings.paused:strings.playing;break}case i.includes("/video/"):{s||delete e.startTimestamp;const t=document.querySelector("video");let r;r=t?{paused:t?.paused,currentTime:t.currentTime,duration:t.duration}:{paused:!!document.querySelector('[aria-label="Pause"]')||!!document.querySelector("[class*='DivPlayIconContainer']"),currentTime:presence.timestampFromFormat(document.querySelector("[class*='DivSeekBarTimeContainer']")?.textContent?.split("/")[0]),duration:presence.timestampFromFormat(document.querySelector("[class*='DivSeekBarTimeContainer']")?.textContent?.split("/")[1])},e.details=s?strings.browseThrough:`${c} (@${u})`,e.state=d,e.smallImageKey=r.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=r.paused?strings.paused:strings.playing,r.paused||([e.startTimestamp,e.endTimestamp]=presence.getTimestamps(r.currentTime,r.duration)),e.buttons=[{label:strings.buttonViewTikTok,url:o},{label:strings.buttonViewProfile,url:`https://www.tiktok.com/@${u}`}];break}case"/live"===i:{const t=Array.from(document.querySelectorAll("video")).find((e=>!e.paused));let r;t?(r=t,getVideo(t)):r=getVideo(null),e.details=s?strings.watchingLive:`${strings.watchingLive} - ${r?.parentElement?.querySelector('[class*="SpanNickName"]')?.textContent}`,e.state=r?.parentElement?.querySelectorAll('[class="css-1g1mtx-DivDetailsLine eawfp3g1"]')?.[1]?.textContent,e.smallImageKey=r?.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/live.png",e.smallImageText=r?.paused?strings.paused:strings.live,e.buttons=[{label:strings.buttonWatchStream,url:`https://www.tiktok.com/${r?.parentElement?.querySelector('[class*="SpanNickName"]')?.textContent}/live`},{label:strings.buttonViewProfile,url:`https://www.tiktok.com/${r?.parentElement?.querySelector('[class*="SpanNickName"]')?.textContent}`}];break}case i.includes("/live"):{const t=document.querySelector("video");e.details=s?strings.watchingLive:`${strings.watchingLive} - ${c} (@${u})`,e.state=d,e.smallImageKey=t?.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/live.png",e.smallImageText=t?.paused?strings.paused:strings.live,e.buttons=[{label:strings.buttonWatchStream,url:o},{label:strings.buttonViewProfile,url:o?.split("/live")?.[0]}];break}case i.includes("/@"):{const t=document.querySelector('[class*="DivModalContainer eo04fh215"]')?.querySelector('[class*="Title"]');e.details=s||!n?strings.viewAProfile:`${strings.viewProfile} ${c} (@${u})`,n&&(e.buttons=[{label:strings.buttonViewProfile,url:o}]),e.state=t?`${strings.viewAPlaylist} - ${t?.textContent}`:document.querySelector('p[aria-selected="true"]')?.textContent;break}case i.includes("/explore"):e.details=s?strings.browseThrough:strings.exploringWithTag,e.state=document.querySelector(".css-1hs87dt-ButtonCategoryItemContainer")?.textContent;break;case i.includes("/messages"):e.details=s?strings.browseThrough:strings.readingADM}r&&!s||!e.buttons||delete e.buttons,s&&e.state&&delete e.state,s&&e.endTimestamp&&delete e.endTimestamp,s&&e.smallImageKey&&delete e.smallImageKey,presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;