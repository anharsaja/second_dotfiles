var __webpack_exports__={};const presence=new Presence({clientId:"1081479845940314114"}),browsingTimestamp=Math.floor(Date.now()/1e3),IDLE_TIMEOUT=6e5,settings=["search","docs-page","docs-page-content","docs-page-sidebar","idling"];let sidebar=null,lastActivity=Date.now();function getScrollPercentage(){const{scrollY:e,innerHeight:t}=window,{scrollHeight:s}=document.body,a=e/(s-t)*100;return 0===a?0:a||100}presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/N/Necord/assets/0.png",startTimestamp:browsingTimestamp},{href:t,pathname:s,search:a}=document.location,n=document.title.split(" | ")[0],i=await presence.getSetting("privacy"),[r,c,l,o,g]=await Promise.all(i?Array(settings.length).fill(!1):settings.map((e=>presence.getSetting(e))));switch(!0){case lastActivity+6e5<Date.now()&&g:e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/Necord/assets/1.png",e.smallImageText="Idling",e.details="Idling at page: ",e.state=n,e.startTimestamp=Math.floor(lastActivity/1e3);break;case s.startsWith("/search"):e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText="Searching",e.details="Searching for something",a&&r&&(e.details="Searching for:",e.state=[a.split("q=")[1],`(${document.querySelector("main")?.childElementCount??0} results)`].join(" "),e.buttons=[{label:"Show Results",url:t}]);break;case!!sidebar&&o:e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText="Searching",e.details="Selecting a category:",e.state=sidebar;break;default:{const t=document.querySelector(".table-of-contents__link--active")??document.querySelector(".table-of-contents__link");e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.smallImageText="Reading",e.details=`Reading ${c?n:"a"} page${l?":":""}`,e.state=l?`${t.textContent} (${getScrollPercentage().toFixed(2)}%)`:null,e.buttons=[{label:"Read Page",url:t.href}];break}}e.details?presence.setActivity(e):presence.setActivity()})),document.addEventListener("mouseover",(e=>{const t=e.target;t.classList.contains("menu__link")?sidebar=t.textContent:t.classList.contains("menu")||(sidebar=null),lastActivity=Date.now()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;