var __webpack_exports__={};const presence=new Presence({clientId:"628269030901547037"}),pages={"/":"Ana Sayfa","/haber":"Haberler","/video":"Videolar","/en-cok-okunanlar":"En Çok Okunan Gönderiler","/en-cok-paylasilanlar":"En Çok Paylaşılan Gönderiler","/en-cok-izlenenler":"En Çok İzlenilen Videolar","/ara":"Bir şeyler arıyor...","/uye/favorilerim":"Favorilerim","/hakkimizda":"Hakkımızda","/yazarlar":"Yazarlar","/odullerimiz":"Ödüllerimiz","/kunye":"Künye","/gizlilik":"Gizlilik","/iletisim":"İletişim"},smallImageKey={"/ara":"https://cdn.rcd.gg/PreMiD/resources/search.png","/video":"https://cdn.rcd.gg/PreMiD/websites/W/Webtekno/assets/0.png","/uye/favorilerim":"https://cdn.rcd.gg/PreMiD/websites/W/Webtekno/assets/2.png"};presence.on("UpdateData",(async()=>{const e=document.location.pathname,t=document.querySelector("body > div.wt-container > div.global-container.container > div.content > div.news.content-detail-page > article > div.content-title > h1"),n=document.querySelector("body > div.wt-container > div.video-showcase > div > div.video-showcase__content__title > h1");if(e.includes("/yazar/")){const e=document.querySelector("body > div.wt-container > div.global-container.container > div.content > div.content-author > div.content-author__detail > a > span");presence.setActivity({largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Webtekno/assets/logo.png",details:"Bir yazara göz atıyor:",state:e&&""!==e.textContent?e.textContent:"Belirsiz",startTimestamp:Math.floor(Date.now()/1e3)})}else t&&""!==t.textContent?presence.setActivity({largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Webtekno/assets/logo.png",details:`${t.textContent}`,state:`Yazar: ${document.querySelector("body > div.wt-container > div.global-container.container > div.content > div.news.content-detail-page > article > div.content-info.clearfix > div.content-author > span:nth-child(1) > a")?document.querySelector("body > div.wt-container > div.global-container.container > div.content > div.news.content-detail-page > article > div.content-info.clearfix > div.content-author > span:nth-child(1) > a").textContent:"Belirsiz"} (${document.querySelector("body > div.wt-container > div.global-container.container > div.content > div.news.content-detail-page > article > div.content-info.clearfix > div.content-author > time")?document.querySelector("body > div.wt-container > div.global-container.container > div.content > div.news.content-detail-page > article > div.content-info.clearfix > div.content-author > time").textContent:"Belirsiz Süre"})`,smallImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Webtekno/assets/1.png",smallImageText:"Bir gönderi okuyor...",startTimestamp:Math.floor(Date.now()/1e3)}):n&&""!==n.textContent?presence.setActivity({largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Webtekno/assets/logo.png",details:`${n.textContent}`,state:`Yazar: ${document.querySelector("body > div.wt-container > div.global-container.container > div.content > article > div.content-info > span:nth-child(1) > a")?document.querySelector("body > div.wt-container > div.global-container.container > div.content > article > div.content-info > span:nth-child(1) > a").textContent:"Belirsiz"} (${document.querySelector("body > div.wt-container > div.global-container.container > div.content > article > div.content-info > time")?document.querySelector("body > div.wt-container > div.global-container.container > div.content > article > div.content-info > time").textContent:"Belirsiz Süre"})`,smallImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Webtekno/assets/0.png",smallImageText:"Bir video gönderi okuyor...",startTimestamp:Math.floor(Date.now()/1e3)}):presence.setActivity({largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Webtekno/assets/logo.png",details:"Bir sayfaya göz atıyor:",state:pages[e]||pages[e.slice(0,-1)]||"Ana Sayfa",smallImageKey:smallImageKey[e]||smallImageKey[e.slice(0,-1)],startTimestamp:Math.floor(Date.now()/1e3)})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;