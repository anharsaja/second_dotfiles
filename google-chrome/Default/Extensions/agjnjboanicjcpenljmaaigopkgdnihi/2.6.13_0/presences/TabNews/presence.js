var __webpack_exports__={};const presence=new Presence({clientId:"1083051669996187748"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={details:"Outros",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/TabNews/assets/0.png",startTimestamp:browsingTimestamp},[t,a,s,o]=document.location.pathname.split("/"),n=await presence.getSetting("privacy");switch(!0){case!t||"pagina"===a:e.details="Vendo conteúdos relevantes","pagina"===a&&(e.state=`Página ${s}`);break;case a.startsWith("recentes"):e.details="Vendo conteúdos recentes",o&&(e.state=`Página ${o}`);break;default:if(a&&!s)switch(a){case"publicar":e.details="Publicando novo conteúdo";break;case"perfil":e.details="Editando perfil";break;case"contato":e.details="Vendo os contatos";break;case"termos-de-uso":e.details="Lendo os termos de uso";break;case"status":e.details="Vendo estatísticas do site";break;case"museu":e.details="Admirando o museu";break;case"cadastro":e.details="Fazendo o cadastro";break;case"login":e.details="Fazendo o login";break;default:document.querySelector("h1")?(e.details="Vendo perfil de:",e.state=n?"Anônimo":document.querySelector("h1")?.textContent,n||(e.buttons=[{label:"Ver perfil",url:document.location.href}])):e.details="Vendo outros conteúdos"}if(s){switch(s){case"pagina":e.details=`Vendo perfil de ${n?"Anônimo":a}`,e.state=`Página ${o}`;break;case"rss":e.details="Vendo o Feed RSS";break;default:document.querySelector("h1")?(e.details="Lendo o conteúdo:",e.state=document.querySelector("h1")?.textContent,e.buttons=[{label:"Ver conteúdo",url:document.location.href}]):(e.details="Lendo resposta a:",e.state=document.querySelector("strong")?.textContent,e.buttons=[{label:"Ver resposta",url:document.location.href}])}break}}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;