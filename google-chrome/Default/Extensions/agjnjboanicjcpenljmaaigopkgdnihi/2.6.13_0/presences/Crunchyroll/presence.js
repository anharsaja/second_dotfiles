var __webpack_exports__={};const presence=new Presence({clientId:"608065709741965327"});async function getStrings(){return presence.getStrings({play:"general.playing",pause:"general.paused",browse:"general.browsing",reading:"general.reading",viewPage:"general.viewPage",viewManga:"general.viewManga",viewSeries:"general.buttonViewSeries",watchEpisode:"general.buttonViewEpisode",readingArticle:"general.readingArticle",viewCategory:"general.viewCategory",chapter:"general.chapter",search:"general.search",manga:"general.manga",page:"general.page"},await presence.getSetting("lang").catch((()=>"en")))}let strings,playback,iFrameVideo,currentTime,duration,paused,oldLang=null,lastPlaybackState=null,browsingTimestamp=Math.floor(Date.now()/1e3);lastPlaybackState!==playback&&(lastPlaybackState=playback,browsingTimestamp=Math.floor(Date.now()/1e3)),presence.on("iFrameData",(e=>{playback=null!==e.iFrameVideoData,playback&&({iFrameVideo,currTime:currentTime,dur:duration,paused}=e.iFrameVideoData)})),presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/C/Crunchyroll/assets/logo.png",type:3},{href:t,pathname:a}=window.location,[s,r]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("cover")]);if(oldLang===s&&strings||(oldLang=s,strings=await getStrings()),a.includes("/manga"))if(a.includes("/read")){const a=document.querySelector(".chapter-header h1");e.details=a.children[0].textContent.trim(),e.state=`${strings.reading} ${a.lastChild.textContent.trim()}`,e.startTimestamp=browsingTimestamp,e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/C/Crunchyroll/assets/0.png";const s=document.querySelector(".first-page-number").textContent;e.smallImageText=`${strings.page} ${""===s?"1":s}/${document.querySelector(".images").children.length}`,e.buttons=[{label:`Read ${strings.chapter}`,url:t}]}else a.includes("/volumes")?(e.details=strings.viewManga,e.state=document.querySelector(".ellipsis").textContent.split("Manga > ")[1],e.buttons=[{label:`View ${strings.manga}`,url:t}]):(e.details=strings.browse,e.startTimestamp=browsingTimestamp,delete e.state,delete e.smallImageKey);else if(!1!==iFrameVideo&&!isNaN(duration)&&a.includes("/watch/")){const a=document.querySelector("a > h4").textContent;e.smallImageKey=paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=paused?strings.pause:strings.play,[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(Math.floor(currentTime),Math.floor(duration)),e.details=a??"Title not found...",e.state=document.querySelector("h1.title").textContent,e.largeImageKey=document.querySelector("[property='og:image']")?.content??"https://cdn.rcd.gg/PreMiD/websites/C/Crunchyroll/assets/logo.png",paused&&(delete e.startTimestamp,delete e.endTimestamp),a&&(e.buttons=[{label:strings.watchEpisode,url:t},{label:strings.viewSeries,url:document.querySelector(".show-title-link").href}])}else a.includes("/series")?(e.details=strings.viewPage,e.state=document.querySelector("h1.title").textContent,e.largeImageKey=document.querySelector("[property='og:image']")?.content??"https://cdn.rcd.gg/PreMiD/websites/C/Crunchyroll/assets/logo.png",e.buttons=[{label:strings.viewSeries,url:t}]):a.includes("/search")?(e.details=strings.search,e.state=document.querySelector(".search-input").value,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):a.includes("/simulcasts")?(e.details=strings.viewPage,e.state=`${document.querySelector("h1 + div span").textContent} ${document.querySelector("h1").textContent}`):a.includes("/videos")?(e.details=strings.viewCategory,e.state=document.querySelector("h1").textContent):/\/anime-.*?\/\d{4}\//.test(a)?(e.details=strings.readingArticle,e.state=document.querySelector(".crunchynews-header").textContent,r&&(e.largeImageKey=document.querySelector(".mug").src)):(e.details=strings.browse,e.startTimestamp=browsingTimestamp,delete e.state,delete e.smallImageKey);r||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/C/Crunchyroll/assets/logo.png"),e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;