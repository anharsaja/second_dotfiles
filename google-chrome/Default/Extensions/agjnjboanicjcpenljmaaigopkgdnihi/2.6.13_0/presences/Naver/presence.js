var __webpack_exports__={};const presence=new Presence({clientId:"825307070584586250"}),data={isChecked:!1,service:null},assets={naver:"https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/0.png",naver_webtoon:"https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/1.png",naver_series:"https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/2.png",naver_tv:"https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/3.png",naver_papago:"https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/4.png",naver_blog:"https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/5.png",naver_blog_browse:"https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/6.png",naver_cafe:"https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/7.png"};function getServiceName(e=document.location.hostname){switch(!0){case!!e.match(/tv[.]naver[.]([a-z0-9]+)/):return["Naver TV","NAVER_TV"];case!!e.match(/comic[.]naver[.]([a-z0-9]+)/):return["Naver Webtoon","NAVER_WEBTOON"];case!!e.match(/papago[.]naver[.]([a-z0-9]+)/):return["Papago","NAVER_PAPAGO"];case!!e.match(/blog[.]naver[.]([a-z0-9]+)/):return["Naver Blog","NAVER_BLOG"];case!!e.match(/cafe[.]naver[.]([a-z0-9]+)/):return["Naver Cafe","NAVER_CAFE"];case!!e.match(/(novel|series)[.]naver[.]([a-z0-9]+)/):return["Naver Series","NAVER_SERIES"];case!!e.match(/([a-z]+)[.]naver[.]([a-z0-9]+)/):return["Naver","NAVER"]}}let blog,cafeTitle;presence.on("iFrameData",(e=>{({blog}=e)})),presence.on("UpdateData",(async()=>{data.isChecked||(data.service=getServiceName(),data.isChecked=!0);const e={name:data.service[0],details:"Browsing...",largeImageKey:assets[data.service[1].toLowerCase()],smallImageKey:assets[`${data.service[1].toLowerCase()}_browse`]??"https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/8.png"},{pathname:t,href:a}=document.location;switch(data.settings=[{id:"buttons",delete:!0,data:["buttons"]}],data.service[1]){case"NAVER_TV":if(t.match("/v/([0-9]+)"))if(document.querySelector("div.ad_info_area")?.offsetParent){const t=document.querySelector('[data-role="videoEl"]');e.details="Currently watching an ad",[e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(t),e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/10.png",e.smallImageText="Playing",t.paused&&(e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/11.png",e.smallImageText="Paused",delete e.startTimestamp,delete e.endTimestamp)}else{const t=document.querySelector("video");e.details=document.querySelector("h2[class^=ArticleSection_article_title_]")?.textContent,e.state=document.querySelector("strong[class^=ArticleSection_channel_title_]")?.textContent.trim(),[e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(t),e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/10.png",e.smallImageText="Playing",t.paused&&(e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/11.png",e.smallImageText="Paused",delete e.startTimestamp,delete e.endTimestamp),e.buttons=[{url:a,label:"Watch Video"},{url:document.querySelector("a[class^=ArticleSection_link_channel_]").href,label:"View Channel"}]}else document.querySelector("div[class^=showId_container]")&&(e.details="Viewing channel:",e.state=document.querySelector("h2").textContent,e.buttons=[{url:a,label:"View Channel"}]);break;case"NAVER_BLOG":t.match("/([a-z])")&&(e.details="Reading a blog post:",e.state=blog,e.buttons=[{url:a,label:"Read Blog"}]);break;case"NAVER_CAFE":t.match("/([a-z])")&&(cafeTitle??=document.querySelector("h1.d-none")?.textContent,cafeTitle?(e.details="Viewing cafe:",e.state=cafeTitle,e.buttons=[{label:"View Cafe",url:a}]):t.includes("/search/")&&(e.details="Searching for something"));break;case"NAVER_SERIES":t.startsWith("/novel")?t.includes("detail.series")&&(e.details="Viewing novel:",e.state=document.querySelector("#content h2"),e.buttons=[{url:a,label:"View Novel"}]):t.startsWith("/webnovel")&&(t.includes("/list")?(e.details="Viewing web novel:",e.state=document.querySelector("h2.title"),e.buttons=[{url:a,label:"View Novel"}]):t.includes("/detail")&&(e.details=document.querySelector("#menuFloatingLayer > a").textContent,e.state=document.querySelector("#topVolumeList").textContent,e.buttons=[{url:a,label:"Read Epiosde"}],e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/9.png"));break;case"NAVER_WEBTOON":if(t.startsWith("/webtoon/list"))e.details="Viewing webtoon:",e.state=document.querySelector("h2[class^=EpisodeListInfo__title]"),e.buttons=[{url:a,label:"View Webtoon"}];else if(t.startsWith("/webtoon/detail")){const[t,s]=document.querySelector('[property="og:title"]').content.split(" - ");e.details=s,e.state=t,e.buttons=[{url:a,label:"Read Episode"}],e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/9.png"}break;case"NAVER_PAPAGO":t.startsWith("/website")?(e.details="Translating a website",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/12.png"):t.startsWith("/docs")?(e.details="Translating a document",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/12.png"):"/"===t&&(e.details="Translating something...",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/Naver/assets/12.png");break;case"NAVER":"/search.naver"===t&&(e.details="Searching for something")}if(data.settings)for(const t of data.settings)if(!await presence.getSetting(t.id)&&t.delete)for(const a of t.data)delete e[a];presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;