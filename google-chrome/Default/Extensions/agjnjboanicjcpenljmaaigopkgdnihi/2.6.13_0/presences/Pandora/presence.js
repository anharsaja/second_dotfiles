var __webpack_exports__={};const presence=new Presence({clientId:"608109837657702566"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused"});function stripText(e,r="None",t=!0){return e&&e.firstChild?e.firstChild.textContent:(t&&presence.error(`An error occurred while stripping data off the page. Please contact FireController1847 on the PreMiD Discord server, and send him a screenshot of this error. ID: ${r}`),null)}presence.on("UpdateData",(async()=>{const e={details:"Browsing...",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Pandora/assets/logo.png"};let r=!1;if(document.querySelector(".Tuner__Audio__NowPlayingHitArea")){const t=document.querySelector(".Tuner__Audio__TrackDetail__title"),n=document.querySelector(".Tuner__Audio__TrackDetail__artist");t&&n?(e.details=stripText(t,"Title"),e.state=stripText(n,"Artist")):presence.error("Title and artist are null!");const a=document.querySelector(".Tuner__Control__Play__Button");if(a){if(r="true"===a.getAttribute("aria-checked"),r){e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=(await strings).play;const r=document.querySelector(".VolumeDurationControl__Duration [data-qa=elapsed_time]"),t=document.querySelector(".VolumeDurationControl__Duration [data-qa=remaining_time]");r&&t?[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(stripText(r,"Time Elapsed")),presence.timestampFromFormat(stripText(t,"Time Remaining"))):presence.error("Timestamps are null!")}else e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText=(await strings).pause;const t=document.querySelector(".Tuner__Audio__TrackDetail__img :first-child :first-child")??document.querySelector(".nowPlayingTopInfo__artContainer__art :first-child :first-child")??document.querySelector(".HeroCard__image");t?e.largeImageKey=t.src:presence.error("Art is null!")}else presence.error("Play button is null!")}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;