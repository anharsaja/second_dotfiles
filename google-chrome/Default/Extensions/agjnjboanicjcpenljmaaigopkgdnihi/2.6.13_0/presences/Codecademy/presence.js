var __webpack_exports__={};const presence=new Presence({clientId:"736516965748834336"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused"}),start=Date.now();let videoTitle,videoCurrentTime,videoDuration,videoPaused;const assets={git:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/0.png",html:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/1.png",css:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/2.png",the_command_line:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/3.png",node_with_sqlite:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/4.png",ruby_on_rails:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/5.png",python_2:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/6.png",javascript:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/7.png",go:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/8.png",authentication_with_ruby_on_rails:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/9.png",java:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/10.png",python_3:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/11.png",swift:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/12.png",r:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/13.png",kotlin:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/14.png",ruby:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/15.png",sql:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/16.png",php:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/17.png",csharp:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/18.png",cplusplus:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/19.png"};presence.on("iFrameData",(e=>{videoTitle=e.title,videoCurrentTime=e.currentTime,videoDuration=e.duration,videoPaused=e.paused})),presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/C/Codecademy/assets/logo.png"},t=window.location.pathname.replace(/^\/|\/$/g,"").split("/");let s,a=document.querySelector("[class^=headerTitle__]")||document.querySelector("[class^=trackTitle__]");switch(t[0]){case"learn":switch(t.length){case 1:e.details="At the dashboard";break;case 2:e.details="Looking at a course",e.state=`"${document.querySelector("main h1").textContent}"`,e.smallImageKey=assets[document.querySelector("main h1").textContent.split(" ").slice(1).join(" ").toLowerCase().replace(" ","_").replace("+","plus").replace("#","sharp")],e.smallImageText=document.querySelector("main h1").textContent.split(" ").slice(1).join(" ");break;case 3:e.details="Looking at a path",e.state=`"${document.querySelector("[class^=goalHeader__]")?document.querySelector("main h1").textContent.slice(document.querySelector("[class^=goalHeader__]").textContent.length):document.querySelector("main h1").textContent}"`;break;case 4:e.details="Looking at a course module",e.state=`"${document.querySelector("main h1").textContent}"`}break;case"courses":case"paths":if(s=!1,a.className.startsWith("trackTitle__")&&(s=!0),a=a.textContent,"courses"===t[0]&&a.startsWith("Learn ")&&(e.smallImageKey=assets[a.split(" ").slice(1).join(" ").toLowerCase().replace(" ","_").replace("+","plus").replace("#","sharp")],e.smallImageText=a.split(" ").slice(1).join(" ")),e.details=a.startsWith("Learn ")?`Learning ${a.split(" ").slice(1).join(" ")}`:s?"Looking at a path":a,videoTitle)e.details="Watching a video",e.state=videoTitle,e.smallImageKey=videoPaused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=videoPaused?(await strings).pause:(await strings).play,videoDuration&&!videoPaused&&([e.startTimestamp,e.endTimestamp]=presence.getTimestamps(videoDuration,videoCurrentTime));else{e.startTimestamp=start;const t=document.querySelector("[class^=contentItemTitle__]"),i=document.querySelector("[class^=articleTitle_]");t&&(e.state=t.textContent),i&&(e.details="Reading an article",e.state=i.textContent),s&&(e.state=a,delete e.startTimestamp)}e.state=`"${e.state}"`;break;case"login":e.details="Logging in";break;case"register":e.details="Registering";break;case"catalog":"language"===t[1]?(e.details=`Looking at ${document.querySelector("#catalog-heading").textContent}`,e.state="in the catalog",e.smallImageKey=assets[document.querySelector("#catalog-heading").textContent.toLowerCase().replace(" ","_").replace("+","plus").replace("#","sharp")],e.smallImageText=document.querySelector("#catalog-heading").textContent):"subject"===t[1]?(e.details="Looking at a subject",e.state=`"${document.querySelector("#catalog-heading").textContent}"`):(e.details="Browsing the catalog",e.state="of available languages");break;case"subscriptions":e.details="Considering the PRO",e.state="subscription";break;case"explore":e.details="Exploring...";break;case"":"news.codecademy.com"===window.location.hostname?e.details="Browsing articles":e.details="At the homepage";break;case"pricing":e.details="Checking out the",e.state="paid plans";break;case"business":e.details="Checking out the",e.state="bussiness plans";break;case"articles":t[1]?(e.details="Reading an article",e.state=`"${document.querySelector("[class^=articleHeader__]").textContent}"`):e.details="Browsing articles";break;default:"news.codecademy.com"===window.location.hostname?(e.details="Reading an article",e.state=`"${document.querySelector(".post-full-title").textContent}"`):e.details="Idle"}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;