var __webpack_exports__={};const presence=new Presence({clientId:"656574682916585473"}),browsingTimestamp=Math.floor(Date.now()/1e3);function decodeReq(e){const t=document.createElement("textarea");return t.textContent=e.textContent,t.textContent}let title;presence.on("UpdateData",(()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/D/Downdetector/assets/logo.png",startTimestamp:browsingTimestamp};document.location.pathname.startsWith("/search/")?(e.details="Searching for:",[,e.state]=document.location.href.split("?q="),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):document.location.pathname.includes("/archive/")?(e.details="Viewing an archive for:",title=document.querySelector("body > div.container.px-3.px-md-0 > nav > ol > li.breadcrumb-item.active > a"),e.state=decodeReq(title)):document.location.pathname.includes("/news/")?(e.details="Viewing a status overview for:",title=document.querySelector("body > div.container.px-3.px-md-0 > nav > ol > li:nth-child(2) > a"),e.state=decodeReq(title)):document.location.pathname.includes("/map/")?(e.details="Viewing outage map for:",[title]=document.title.split("outage"),e.state=title):document.location.pathname.includes("/status/")?(e.details="Viewing a status for:",title=document.querySelector("body > div.container.px-3.px-md-0 > div.mx-auto > nav > ol > li.breadcrumb-item.active"),e.state=decodeReq(title)):document.location.pathname.includes("/companies/")?(e.details="Viewing a page:",e.state="Companies"):document.location.pathname.includes("/privacy")?(e.details="Viewing a page:",e.state="Privacy Policy"):document.location.pathname.includes("/terms-of-use")?(e.details="Viewing a page:",e.state="Terms of Use"):document.location.pathname.includes("/accessibility")&&(e.details="Viewing a page:",e.state="Accessibility Statement"),e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;