var __webpack_exports__={};class Watcha extends Presence{defaultToReplace;startedAt;data;meta;constructor(e){super(e),this.startedAt=Math.floor(Date.now()/1e3),this.meta={},this.defaultToReplace=[{input:"%episode%",with:"episode"},{input:"%episodeTitle%",with:"episodeTitle"},{input:"%title%",with:"title"}]}async getAssets2(){const e=await this.getSetting("logo"),t={"logo-0":"logo","play-0":"play","pause-0":"pause","brwose-0":"browse","logo-1":"logo-red","play-1":"play-red","pause-1":"pause-red","brwose-1":"browse-red"};return{play:t[`play-${e}`],pause:t[`pause-${e}`],browse:t[`brwose-${e}`],logo:t[`logo-${e}`]}}async setData(e){e.data.largeImageKey??=e.Assets2.logo,e.data.smallImageKey??=e.Assets2.browse,e.noStartTime||(e.data.startTimestamp=this.startedAt),this.data=e.data}async getShortURL(e){if(!e||e.length<256)return e;if(this.meta[e])return this.meta[e];try{const t=await(await fetch(`https://pd.premid.app/create/${e}`)).text();return this.meta[e]=t,t}catch(t){return this.error(t),e}}}const app=new Watcha({clientId:"905720213004222504"});app.on("UpdateData",(async()=>{app.data={};const[e,t,a,s,p,o]=await Promise.all([app.getSetting("cover"),app.getSetting("search"),app.getSetting("seriesDetail"),app.getSetting("movieDetail"),app.getSetting("seriesState"),app.getSetting("movieState")]),i=await app.getAssets2(),r={"/home":{presenceData:{details:"브라우징..."}},"/(watchings|watched|ratings)":{presenceData:{details:"목록 보는 중"}},"/settings":{presenceData:{details:"설정 보는 중"}},"/wishes":{presenceData:{details:"위시리스트 보기"}},"/notices":{presenceData:{details:"알림 보는 중"}},"/manage_profile":{presenceData:{details:"프로필 관리"}},"/referer":{presenceData:{details:"참조 링크 가져오기"}},"/explore":{presenceData:{details:"검색 장르:",state:document.querySelector("div.css-bdaabp")?.textContent}},"/evaluate":{presenceData:{details:"권장 사항 가져오기"}},"/arrivals/latest":{presenceData:{details:"최신 도착물 보는 중"}},"/staffmades/":{setPresenceData:()=>{const e=document.querySelector("h3.css-ae1cor")?.textContent;e&&app.setData({data:{details:"보기:",state:e},Assets2:i})}},"/people/":{setPresenceData:()=>{const e=document.querySelector("h3.css-ae1cor")?.textContent;e&&app.setData({data:{details:`${e}의 작품 탐색`},Assets2:i})}},"/search":{disabled:!t,presenceData:{details:"검색 중:",state:decodeURI(new URLSearchParams(location.search).get("q"))}},"/parties":{presenceData:{details:"왓챠파티 탐색"}},"/watch/":{setPresenceData:()=>{const e=document.querySelector("video");if(e){const t=document.querySelector("h3")?.textContent;[app.meta.title,app.meta.episode]=document.querySelector("h1")?.textContent?.match(/(.*):(.*)/)?.slice(1)??[],app.meta.coverUrl=document.querySelector('[property="og:image"]').content,t?app.meta.episodeTitle=`"${t}"`:delete app.meta.episodeTitle;const a={smallImageKey:e.paused?i.pause:i.play,endTimestamp:app.getTimestampsfromMedia(e).pop()};e.paused&&delete a.endTimestamp,app.setData({data:a,Assets2:i,noStartTime:!0})}},presenceSettings:{largeImageKey:{condition:{ifTrue:!!app.meta.coverUrl&&e,setTo:app.meta.coverUrl}},details:{condition:{ifTrue:!!app.meta.episode,setTo:a,replace:{toReplace:app.defaultToReplace},ifNot:{setTo:s,replace:{toReplace:[{input:"%title%",with:"title"}]}}}},state:{condition:{ifTrue:!!app.meta.episode,setTo:p,replace:{toReplace:app.defaultToReplace},ifNot:{setTo:o,replace:{toReplace:[{input:"%title%",with:"title"}]}}}}}}};for(const[e,t]of Object.entries(r))if(document.location.pathname.match(e)&&!t.disabled&&(t.presenceData?app.setData({data:t.presenceData,Assets2:i}):t.setPresenceData&&t.setPresenceData(),t.presenceSettings))for(const[e,a]of Object.entries(t.presenceSettings))for(const t of Object.values(a))if(t.ifTrue){if(app.data[e]=t.setTo,t.replace)for(const a of t.replace.toReplace)app.data[e]=app.data[e].replace(a.input,app.meta[a.with]??"").trim()}else if(t.ifNot&&(app.data[e]=t.ifNot.setTo,t.ifNot.replace))for(const a of t.ifNot.replace.toReplace)app.data[e]=app.data[e].replace(a.input,app.meta[a.with]??"").trim();app.data.largeImageKey?.startsWith("http")&&(app.data.largeImageKey=await app.getShortURL(app.data.largeImageKey)),app.data.details?app.setActivity(app.data):app.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;