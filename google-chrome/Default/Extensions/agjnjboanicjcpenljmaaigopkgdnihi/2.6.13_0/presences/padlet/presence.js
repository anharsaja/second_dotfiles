var __webpack_exports__={};const presence=new Presence({clientId:"889524311566725161"}),browsingTimestamp=Date.now();presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/padlet/assets/logo.png",startTimestamp:browsingTimestamp},t=location.pathname.split("/");if("dashboard"===t[1]){let a,s;switch(t[2]){case"drive":e.details="Viewing",e.state="Padlet Drive";break;case null:a=document.querySelector('body > div > div > div > div > nav > a[data-selected="true"]').textContent.replace("edit",""),s=document.querySelector(".padlet-cards-list")?.children.length,e.details=`Viewing ${a}`,e.state=`Padlets - ${s??"0"}`;break;default:e.details="Viewing their",e.state="Dashboard"}document.querySelector('.universal-search[data-status="expanded"]')&&(e.details=`Searching: ${document.querySelector(".universal-search-input").value}`,e.state=`${document.querySelector(".padlet-cards-list").children.length} Results`)}else if("create"===t[1])e.details="Creating a Padlet",e.state="Choosing a template",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/writing.png",e.smallImageText="Creating";else if(document.querySelector("#wall-container")){const t=JSON.parse(document.querySelector('head > script[type="application/ld+json"]').textContent);e.details=t.name,e.state=`By: ${t.author.name}`,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.smallImageText="Reading",e.buttons=[{label:"View Padlet",url:t.url},{label:"View Author",url:t.author.url}]}else if(document.querySelector(".header-user-info")){const t=JSON.parse(document.querySelector('head > script[type="application/ld+json"]').textContent);e.details=`Viewing ${t.name}`,e.state=document.querySelector(".header-user-bio").textContent,e.buttons=[{label:"View Author",url:`https://padlet.com/${t.url}`}]}await presence.getSetting("buttons")||delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;