var __webpack_exports__={};const presence=new Presence({clientId:"1023277091392868372"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/mod.io/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t,href:a,hostname:s,search:r}=window.location,o=t.split("/").filter((e=>e));switch(s){case"mod.io":switch(o[0]??""){case"":e.details="Browsing homepage";break;case"g":if("add"===o[1])e.details="Adding a game",e.state=document.querySelector("h1").textContent;else{if(""===(o[1]??"")){e.details="Browsing games";break}{const t=getComputedStyle(document.querySelector("#container [role=img]")).backgroundImage.match(/url\("(.+)"\)/)?.[1],s=document.querySelector("#container li > a[href*='/g/']").textContent;switch(o[2]??""){case"":e.details=`Browsing mods for ${s}`,e.largeImageKey=t,e.buttons=[{label:"View game mods",url:a}];break;case"m":"admin"===o[4]?(e.details="Managing a mod",e.state=document.querySelector("h1").textContent):(e.details=`Viewing a mod for ${s}`,e.state=document.querySelector("h1").textContent,e.smallImageKey=t,e.smallImageText=s,e.largeImageKey=getComputedStyle(document.querySelector("a[href*='/m/'] > div[role=img]")).backgroundImage.match(/url\("(.+)"\)/)[1],e.buttons=[{label:"View mod",url:a}]);break;case"r":o[3]?(e.details=`Reading a guide for ${s}`,e.state=document.querySelector("h1").textContent,e.smallImageKey=t,e.smallImageText=s,e.largeImageKey=getComputedStyle(document.querySelector("a[href*='/r/'] > div[role=img]")).backgroundImage.match(/url\("(.+)"\)/)[1],e.buttons=[{label:"View guide",url:a}]):(e.details=`Browsing guides for ${s}`,e.largeImageKey=t);break;case"u":e.details="Viewing a user's profile",e.state=document.querySelector("h1").textContent,e.smallImageKey=document.querySelector("#container img[src*='/members/']")?.src}}}break;case"me":switch(o[1]){case"account":e.details="Managing account settings";break;case"library":e.details="Browsing their library";break;case"comments":e.details="Browsing their comments";break;case"followers":e.details="Browsing their followers";break;case"access":e.details="Managing their API keys";break;case"privacy":e.details="Managing their privacy settings"}break;case"u":e.details="Viewing a user's profile",e.state=document.querySelector("h1").textContent,e.smallImageKey=document.querySelector("#container img[src*='/members/']")?.src;break;default:e.details="Browsing",e.state=document.querySelector("h1").textContent??document.title.match(/(.*) - mod\.io/)[1]}break;case"blog.mod.io":switch(o[0]??""){case"":e.details="Browsing the blog",e.state="Home page";break;case"search":e.details="Searching the blog",e.state=new URLSearchParams(r).get("q");break;case"tagged":e.details="Browsing articles by tag",e.state=o[1];break;default:e.details="Reading an article",e.state=document.querySelector("h1").textContent,e.buttons=[{label:"Read article",url:a}]}break;case"docs.mod.io":e.details="Browsing documentation",e.state=document.querySelector(".active.toc-link").textContent;break;case"old.mod.io":switch(o[0]??""){case"":e.details="Browsing",e.state="Home page";break;case"games":"add"===o[1]?(e.details="Adding a game",e.state=document.querySelector("#gamesname").value):e.details="Browsing games";break;case"guides":e.details="Browsing guides";break;case"members":{e.details="Viewing a user's profile",e.state=document.querySelector("h2.title").textContent;const t=document.querySelector(".container img[src*='/members/']");t&&(e.smallImageKey=t.src);break}case"messages":e.details="Viewing their direct messages";break;default:e.details="Browsing",e.state=document.title.match(/(.*) - mod\.io/)[1]}break;default:{const t=document.querySelector(".navbar-start .navbar-item[href*='.old.mod.io']").textContent,s=document.querySelector("[src*='/games/']").src;switch(o[0]??""){case"":case"page":e.details=`Browsing mods for ${t}`,e.largeImageKey=s;break;case"guides":switch(e.largeImageKey=s,o[1]??""){case"":e.details=`Browsing guides for ${t}`;break;case"add":e.details=`Creating a guide for ${t}`,e.state=document.querySelector("#articlesname").value;break;default:e.details=`Viewing a guide for ${t}`,e.state=document.querySelector("h1").textContent,e.buttons=[{label:"Read guide",url:a}]}break;default:switch(e.state=document.querySelector(".navbar-start > .navbar-item:nth-of-type(4)").textContent,e.largeImageKey=s,o[1]??""){case"":e.details=`Viewing a mod for ${t}`,e.smallImageKey=s,e.smallImageText=t,e.largeImageKey=document.querySelector("[src*='/mods/']").src,e.buttons=[{label:"View mod",url:a}];break;case"edit":e.details=`Editing a mod for ${t}`,e.state=document.querySelector("#modsname").value;break;case"history":e.details=`Viewing the history of a mod for ${t}`;break;case"contact":e.details="Contacting a mod developer";break;case"stats":e.details=`Viewing the stats of a mod for ${t}`}}}}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;