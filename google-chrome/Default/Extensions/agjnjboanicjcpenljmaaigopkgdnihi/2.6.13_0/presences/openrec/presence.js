var __webpack_exports__={};const presence=new Presence({clientId:"612652426180296849"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused",live:"general.live"}),presenceData={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/O/openrec/assets/logo.jpg"};presence.on("UpdateData",(async()=>{const e=!!document.querySelector(".MovieTitle__Title-s181dg2v-4"),t=document.querySelector(e?".openrec-video":"#capture-play");if(t&&!isNaN(t.duration)){const s=document.querySelector(e?".MovieTitle__Title-s181dg2v-4":".Component__CaptureTitle-s1nip9ch-16"),a=document.querySelector(e?".TagButton__Button-otjf40-0":".text-hover");presenceData.details=s?s.textContent:"Title not found...",presenceData.state=a?a.textContent:"Game not found...",presenceData.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/O/openrec/assets/logo.jpg",presenceData.smallImageKey=e?"https://cdn.rcd.gg/PreMiD/resources/live.png":t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",presenceData.smallImageText=e?(await strings).live:t.paused?(await strings).pause:(await strings).play,[presenceData.startTimestamp,presenceData.endTimestamp]=presence.getTimestamps(Math.floor(t.currentTime),Math.floor(t.duration)),(t.paused||e)&&(delete presenceData.startTimestamp,delete presenceData.endTimestamp),s&&a&&presence.setActivity(presenceData,!t.paused)}else presence.setActivity({details:"Browsing..",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/O/openrec/assets/logo.jpg"})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLFNBQVcsSUFBSUMsU0FBUyxDQUMxQkMsU0FBVSx1QkFDVkMsUUFBVUgsU0FBU0ksV0FBVyxDQUM5QkMsS0FBTSxrQkFDTkMsTUFBTyxpQkFDUEMsS0FBTSxpQkFDTkMsYUFBZSxDQUNmQyxjQUFlLGdFQUVuQlQsU0FBU1UsR0FBRyxjQUFjQyxVQUN0QixNQUFNSixJQUFTSyxTQUFTQyxjQUFjLGlDQUFrQ0MsRUFBUUYsU0FBU0MsY0FBY04sRUFBTyxpQkFBbUIsaUJBQ2pJLEdBQUlPLElBQVVDLE1BQU1ELEVBQU1FLFVBQVcsQ0FDakMsTUFBTUMsRUFBUUwsU0FBU0MsY0FBY04sRUFDL0IsZ0NBQ0Esd0NBQXlDVyxFQUFPTixTQUFTQyxjQUFjTixFQUFPLDhCQUFnQyxlQUNwSEMsYUFBYVcsUUFBVUYsRUFBUUEsRUFBTUcsWUFBYyxxQkFDbkRaLGFBQWFhLE1BQVFILEVBQU9BLEVBQUtFLFlBQWMsb0JBQy9DWixhQUFhQyxjQUNULCtEQUNKRCxhQUFhYyxjQUFnQmYsRUFDdkIsK0NBQ0FPLEVBQU1TLE9BQ0YsZ0RBQ0EsK0NBQ1ZmLGFBQWFnQixlQUFpQmpCLFNBQ2pCSixTQUFTSSxLQUNoQk8sRUFBTVMsY0FDS3BCLFNBQVNHLGFBQ1RILFNBQVNFLE1BQ3pCRyxhQUFhaUIsZUFBZ0JqQixhQUFha0IsY0FDdkMxQixTQUFTMkIsY0FBY0MsS0FBS0MsTUFBTWYsRUFBTWdCLGFBQWNGLEtBQUtDLE1BQU1mLEVBQU1FLFlBQ3ZFRixFQUFNUyxRQUFVaEIsWUFDVEMsYUFBYWlCLHNCQUNiakIsYUFBYWtCLGNBRXBCVCxHQUFTQyxHQUNUbEIsU0FBUytCLFlBQVl2QixjQUFlTSxFQUFNUyxPQUNsRCxNQUVJdkIsU0FBUytCLFlBQVksQ0FDakJaLFFBQVMsYUFDVFYsY0FBZSxnRUFFdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wcmVzZW5jZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwcmVzZW5jZSA9IG5ldyBQcmVzZW5jZSh7XG4gICAgY2xpZW50SWQ6IFwiNjEyNjUyNDI2MTgwMjk2ODQ5XCIsXG59KSwgc3RyaW5ncyA9IHByZXNlbmNlLmdldFN0cmluZ3Moe1xuICAgIHBsYXk6IFwiZ2VuZXJhbC5wbGF5aW5nXCIsXG4gICAgcGF1c2U6IFwiZ2VuZXJhbC5wYXVzZWRcIixcbiAgICBsaXZlOiBcImdlbmVyYWwubGl2ZVwiLFxufSksIHByZXNlbmNlRGF0YSA9IHtcbiAgICBsYXJnZUltYWdlS2V5OiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvTy9vcGVucmVjL2Fzc2V0cy9sb2dvLmpwZ1wiLFxufTtcbnByZXNlbmNlLm9uKFwiVXBkYXRlRGF0YVwiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgbGl2ZSA9ICEhZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5Nb3ZpZVRpdGxlX19UaXRsZS1zMTgxZGcydi00XCIpLCB2aWRlbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobGl2ZSA/IFwiLm9wZW5yZWMtdmlkZW9cIiA6IFwiI2NhcHR1cmUtcGxheVwiKTtcbiAgICBpZiAodmlkZW8gJiYgIWlzTmFOKHZpZGVvLmR1cmF0aW9uKSkge1xuICAgICAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobGl2ZVxuICAgICAgICAgICAgPyBcIi5Nb3ZpZVRpdGxlX19UaXRsZS1zMTgxZGcydi00XCJcbiAgICAgICAgICAgIDogXCIuQ29tcG9uZW50X19DYXB0dXJlVGl0bGUtczFuaXA5Y2gtMTZcIiksIGdhbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGxpdmUgPyBcIi5UYWdCdXR0b25fX0J1dHRvbi1vdGpmNDAtMFwiIDogXCIudGV4dC1ob3ZlclwiKTtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSB0aXRsZSA/IHRpdGxlLnRleHRDb250ZW50IDogXCJUaXRsZSBub3QgZm91bmQuLi5cIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZ2FtZSA/IGdhbWUudGV4dENvbnRlbnQgOiBcIkdhbWUgbm90IGZvdW5kLi4uXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID1cbiAgICAgICAgICAgIFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9PL29wZW5yZWMvYXNzZXRzL2xvZ28uanBnXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5ID0gbGl2ZVxuICAgICAgICAgICAgPyBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL2xpdmUucG5nXCJcbiAgICAgICAgICAgIDogdmlkZW8ucGF1c2VkXG4gICAgICAgICAgICAgICAgPyBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3BhdXNlLnBuZ1wiXG4gICAgICAgICAgICAgICAgOiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3BsYXkucG5nXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlVGV4dCA9IGxpdmVcbiAgICAgICAgICAgID8gKGF3YWl0IHN0cmluZ3MpLmxpdmVcbiAgICAgICAgICAgIDogdmlkZW8ucGF1c2VkXG4gICAgICAgICAgICAgICAgPyAoYXdhaXQgc3RyaW5ncykucGF1c2VcbiAgICAgICAgICAgICAgICA6IChhd2FpdCBzdHJpbmdzKS5wbGF5O1xuICAgICAgICBbcHJlc2VuY2VEYXRhLnN0YXJ0VGltZXN0YW1wLCBwcmVzZW5jZURhdGEuZW5kVGltZXN0YW1wXSA9XG4gICAgICAgICAgICBwcmVzZW5jZS5nZXRUaW1lc3RhbXBzKE1hdGguZmxvb3IodmlkZW8uY3VycmVudFRpbWUpLCBNYXRoLmZsb29yKHZpZGVvLmR1cmF0aW9uKSk7XG4gICAgICAgIGlmICh2aWRlby5wYXVzZWQgfHwgbGl2ZSkge1xuICAgICAgICAgICAgZGVsZXRlIHByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcDtcbiAgICAgICAgICAgIGRlbGV0ZSBwcmVzZW5jZURhdGEuZW5kVGltZXN0YW1wO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aXRsZSAmJiBnYW1lKVxuICAgICAgICAgICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkocHJlc2VuY2VEYXRhLCAhdmlkZW8ucGF1c2VkKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHByZXNlbmNlLnNldEFjdGl2aXR5KHtcbiAgICAgICAgICAgIGRldGFpbHM6IFwiQnJvd3NpbmcuLlwiLFxuICAgICAgICAgICAgbGFyZ2VJbWFnZUtleTogXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL08vb3BlbnJlYy9hc3NldHMvbG9nby5qcGdcIixcbiAgICAgICAgfSk7XG4gICAgfVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljSEpsYzJWdVkyVXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lKd2NtVnpaVzVqWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEZGQlFWRXNRMEZCUXp0SlFVTTFRaXhSUVVGUkxFVkJRVVVzYjBKQlFXOUNPME5CUXpsQ0xFTkJRVU1zUlVGRFJpeFBRVUZQTEVkQlFVY3NVVUZCVVN4RFFVRkRMRlZCUVZVc1EwRkJRenRKUVVNM1FpeEpRVUZKTEVWQlFVVXNhVUpCUVdsQ08wbEJRM1pDTEV0QlFVc3NSVUZCUlN4blFrRkJaMEk3U1VGRGRrSXNTVUZCU1N4RlFVRkZMR05CUVdNN1EwRkRjRUlzUTBGQlF5eEZRVU5HTEZsQlFWa3NSMEZCYVVJN1NVRkROVUlzWVVGQllTeEZRVU5hTERoRVFVRTRSRHREUVVNdlJDeERRVUZETzBGQlJVZ3NVVUZCVVN4RFFVRkRMRVZCUVVVc1EwRkJReXhaUVVGWkxFVkJRVVVzUzBGQlN5eEpRVUZKTEVWQlFVVTdTVUZEY0VNc1RVRkJUU3hKUVVGSkxFZEJRVWNzUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc0swSkJRU3RDTEVOQlFVTXNSVUZEY2tVc1MwRkJTeXhIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlF6ZENMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1EwRkJReXhEUVVGRExHVkJRV1VzUTBGRGVrTXNRMEZCUXp0SlFVTklMRWxCUVVrc1MwRkJTeXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRU5CUVVNc1JVRkJSVHRSUVVOd1F5eE5RVUZOTEV0QlFVc3NSMEZCUnl4UlFVRlJMRU5CUVVNc1lVRkJZU3hEUVVOc1F5eEpRVUZKTzFsQlEwZ3NRMEZCUXl4RFFVRkRMQ3RDUVVFclFqdFpRVU5xUXl4RFFVRkRMRU5CUVVNc2MwTkJRWE5ETEVOQlEzcERMRVZCUTBRc1NVRkJTU3hIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlF6VkNMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zTmtKQlFUWkNMRU5CUVVNc1EwRkJReXhEUVVGRExHRkJRV0VzUTBGRGNFUXNRMEZCUXp0UlFVVklMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1YwRkJWeXhEUVVGRExFTkJRVU1zUTBGQlF5eHZRa0ZCYjBJc1EwRkJRenRSUVVONFJTeFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRMRU5CUVVNc2JVSkJRVzFDTEVOQlFVTTdVVUZEYmtVc1dVRkJXU3hEUVVGRExHRkJRV0U3V1VGRGVrSXNPRVJCUVRoRUxFTkJRVU03VVVGRGFFVXNXVUZCV1N4RFFVRkRMR0ZCUVdFc1IwRkJSeXhKUVVGSk8xbEJRMmhETEVOQlFVTTdXVUZEUkN4RFFVRkRMRU5CUVVNc1MwRkJTeXhEUVVGRExFMUJRVTA3WjBKQlEyUXNRMEZCUXp0blFrRkRSQ3hEUVVGRExDdERRVUZaTEVOQlFVTTdVVUZEWml4WlFVRlpMRU5CUVVNc1kwRkJZeXhIUVVGSExFbEJRVWs3V1VGRGFrTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1RVRkJUU3hQUVVGUExFTkJRVU1zUTBGQlF5eEpRVUZKTzFsQlEzUkNMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRUdG5Ra0ZEWkN4RFFVRkRMRU5CUVVNc1EwRkJReXhOUVVGTkxFOUJRVThzUTBGQlF5eERRVUZETEV0QlFVczdaMEpCUTNaQ0xFTkJRVU1zUTBGQlF5eERRVUZETEUxQlFVMHNUMEZCVHl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRE8xRkJRM2hDTEVOQlFVTXNXVUZCV1N4RFFVRkRMR05CUVdNc1JVRkJSU3haUVVGWkxFTkJRVU1zV1VGQldTeERRVUZETzFsQlEzWkVMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRM0pDTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1MwRkJTeXhEUVVGRExGZEJRVmNzUTBGQlF5eEZRVU0zUWl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZETVVJc1EwRkJRenRSUVVWSUxFbEJRVWtzUzBGQlN5eERRVUZETEUxQlFVMHNTVUZCU1N4SlFVRkpMRVZCUVVVN1dVRkRla0lzVDBGQlR5eFpRVUZaTEVOQlFVTXNZMEZCWXl4RFFVRkRPMWxCUTI1RExFOUJRVThzV1VGQldTeERRVUZETEZsQlFWa3NRMEZCUXp0VFFVTnFRenRSUVVWRUxFbEJRVWtzUzBGQlN5eEpRVUZKTEVsQlFVazdXVUZCUlN4UlFVRlJMRU5CUVVNc1YwRkJWeXhEUVVGRExGbEJRVmtzUlVGQlJTeERRVUZETEV0QlFVc3NRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJRenRMUVVOeVJUdFRRVUZOTzFGQlEwNHNVVUZCVVN4RFFVRkRMRmRCUVZjc1EwRkJRenRaUVVOd1FpeFBRVUZQTEVWQlFVVXNXVUZCV1R0WlFVTnlRaXhoUVVGaExFVkJRMW9zT0VSQlFUaEVPMU5CUXk5RUxFTkJRVU1zUTBGQlF6dExRVU5JTzBGQlEwWXNRMEZCUXl4RFFVRkRMRU5CUVVNaWZRPT0iXSwibmFtZXMiOlsicHJlc2VuY2UiLCJQcmVzZW5jZSIsImNsaWVudElkIiwic3RyaW5ncyIsImdldFN0cmluZ3MiLCJwbGF5IiwicGF1c2UiLCJsaXZlIiwicHJlc2VuY2VEYXRhIiwibGFyZ2VJbWFnZUtleSIsIm9uIiwiYXN5bmMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ2aWRlbyIsImlzTmFOIiwiZHVyYXRpb24iLCJ0aXRsZSIsImdhbWUiLCJkZXRhaWxzIiwidGV4dENvbnRlbnQiLCJzdGF0ZSIsInNtYWxsSW1hZ2VLZXkiLCJwYXVzZWQiLCJzbWFsbEltYWdlVGV4dCIsInN0YXJ0VGltZXN0YW1wIiwiZW5kVGltZXN0YW1wIiwiZ2V0VGltZXN0YW1wcyIsIk1hdGgiLCJmbG9vciIsImN1cnJlbnRUaW1lIiwic2V0QWN0aXZpdHkiXSwic291cmNlUm9vdCI6IiJ9
undefined;