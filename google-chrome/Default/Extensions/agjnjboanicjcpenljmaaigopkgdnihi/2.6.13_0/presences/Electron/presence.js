var __webpack_exports__={};const presence=new Presence({clientId:"691406198091677737"});function parseQueryString(e){e??=window.location.search.substring(1);const t={},n=e.split("&");for(const e in n){const n=e.split("=");t[decodeURIComponent(n[0])]=decodeURIComponent(n.length>1?n[1]:"")}return t}presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/E/Electron/assets/logo.png"},t=document.location.pathname.split("/");if(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.smallImageText=`Language : ${document.querySelector("a.site-header-nav-item.bordered.lang-select-button").textContent}`,"/"===document.location.pathname)e.details="Home";else if(document.location.pathname.includes("/apps"))t[2]?(e.details="Watching app",e.state=document.querySelector("h1.f00-light.lh-condensed.mb-3").textContent):(e.details="Apps",e.state=parseQueryString(document.location.hash).q?`Searching ${parseQueryString(document.location.hash).q} ${parseQueryString(document.location.hash).category?`(${parseQueryString(document.location.hash).category})`:""}`:"Watching apps list "+(parseQueryString(document.location.hash).category?`(${parseQueryString(document.location.hash).category})`:""));else if(document.location.pathname.includes("/docs"))if(t[2])switch(t[2]){case"tutorial":t[3]?(e.details="Docs / Guides",e.state=document.querySelector("title").textContent.replace(" | Electron","")):e.details=document.querySelector("h4.f3-light.docs-breadcrumbs").textContent;break;case"api":t[3]?"structures"===t[3]?t[4]?(e.details="Docs / API Structures",e.state=document.querySelector("title").textContent.replace(" | Electron","")):e.details=document.querySelector("h4.f3-light.docs-breadcrumbs").textContent:(e.details="Docs / API",e.state=document.querySelector("title").textContent.replace(" | Electron","")):e.details=document.querySelector("h4.f3-light.docs-breadcrumbs").textContent;break;case"development":t[3]?(e.details="Docs / Development",e.state=document.querySelector("title").textContent.replace(" | Electron","")):e.details=document.querySelector("h4.f3-light.docs-breadcrumbs").textContent}else e.details=document.querySelector("span.f0-light.mr-3.mr-lg-4").textContent;else if(document.location.pathname.includes("/blog"))if(t[2]){const[t,n]=document.querySelector("title").textContent.split(" | ");e.details=t,e.state=n}else e.details=document.querySelector("h1.f00-light").textContent;else document.location.pathname.includes("/releases/")?(e.details=document.querySelector(".container-narrow h1").textContent,e.state=`${parseQueryString(document.location.hash).version?`Version : ${parseQueryString(document.location.hash).version}`:"Version : all"}${parseQueryString(document.location.hash).page?` | Page : ${parseQueryString(document.location.hash).page}`:" | Page : 1"}`):e.details=document.querySelector("h1.f00-light").textContent;e.details?(e.state??="Navigating...",presence.setActivity(e)):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;