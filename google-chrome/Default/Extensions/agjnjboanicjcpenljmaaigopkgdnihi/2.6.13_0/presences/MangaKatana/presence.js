var __webpack_exports__={};const presence=new Presence({clientId:"1104842127034306724"}),browsingTimestamp=Math.floor(Date.now()/1e3),{pathname,href,search}=document.location,path=pathname.split("/"),title=document.querySelector("meta[property='og:title']").getAttribute("content");async function getStrings(){return presence.getStrings({editing:"general.editing",genre:"general.genre",manga:"general.manga",reading:"general.reading",readingAbout:"general.readingAbout",search:"general.search",searchFor:"general.searchFor",searchSomething:"general.searchSomething",viewing:"general.viewing",viewHome:"general.viewHome",viewPage:"general.viewPage",buttonViewPage:"general.buttonViewPage"},await presence.getSetting("lang").catch((()=>"en")))}let strings,oldLang=null,currentMangaPage=null;function textContent(e){return document.querySelector(e)?.textContent?.trim()}const observer=new IntersectionObserver(((e,t)=>{for(const a of e)a.isIntersecting&&(t.unobserve(a.target),currentMangaPage=a.target?.src)}),{threshold:.5});presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/MangaKatana/assets/logo.png",startTimestamp:browsingTimestamp},[t,a,s,n,r,g]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("cover"),presence.getSetting("time"),presence.getSetting("buttons"),presence.getSetting("pages")]),i=document.querySelector("input#input_search")?.value;function c(){if(!search)return title;const e=search?.match(/include=([A-Za-z_-\w]+)+/);return e?`${strings.genre}: ${e[1]?.split("_")?.map((e=>e.charAt(0).toUpperCase()+e.slice(1)))?.join(", ")}`:void 0}switch(oldLang===t&&strings||(oldLang=t,strings=await getStrings()),path[1]){case"":e.details=strings.viewHome;break;case"manga":if(e.details=a?strings.searchSomething:strings.searchFor,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText=strings.search,e.state=c(),path[3]){if(e.details=`${strings.reading} ${a?strings.manga:textContent("ol.uk-breadcrumb li:nth-child(2) span")}`,e.state=textContent("ol.uk-breadcrumb li:nth-child(3) span"),g){for(const e of document.querySelectorAll("#imgs img"))observer.observe(e);e.largeImageKey=currentMangaPage??"https://cdn.rcd.gg/PreMiD/websites/M/MangaKatana/assets/logo.png"}else e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/M/MangaKatana/assets/logo.png";e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.smallImageText=strings.reading,e.buttons=[{label:strings.buttonViewPage,url:href}]}else path[2]&&(e.details=a?`${strings.viewPage} ${strings.manga}`:strings.readingAbout,e.state=textContent("#single_book .info .heading"),e.largeImageKey=document.querySelector("#single_book .cover img")?.src,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/viewing.png",e.smallImageText=strings.viewing,e.buttons=[{label:strings.buttonViewPage,url:href}]);break;case"genres":case"latest":case"new-manga":case"genre":case"author":e.details=a?strings.searchSomething:strings.searchFor,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText=strings.search,e.state=c();break;case"settings":case"bookmarks":e.details=strings.editing,e.state=title,e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/M/MangaKatana/assets/logo.png"}i&&(e.details=a?strings.searchSomething:strings.searchFor,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText=strings.search,e.state=i),s&&!a||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/M/MangaKatana/assets/logo.png"),r&&!a||!e.buttons||delete e.buttons,!n&&e.startTimestamp&&delete e.startTimestamp,a&&e.state&&delete e.state,presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;