var __webpack_exports__={};const presence=new Presence({clientId:"1017866651053596795"}),browsingTimestamp=Math.floor(Date.now()/1e3);function applySubPathState(e,t="",a){const i=/^[aiueo]/i.test(a)?"n":"";switch(t){case"":e.details=`Viewing a${i} ${a}`,e.state=document.querySelector("h1").textContent,e.buttons=[{label:`View ${a}`,url:window.location.href}];break;case"create":e.details=`Creating a${i} ${a}`,e.state=document.querySelector(".card-body input").value;break;case"edit":e.details=`Editing a${i} ${a}`,e.state=document.querySelector(".card-body input").value;break;case"revisions":e.details=`Viewing revisions for a${i} ${a}`,e.state=document.querySelector("h3 a").lastChild.textContent;break;case"delete":e.details=`Deleting a${i} ${a}`,e.state=document.querySelector(".card-body h4").childNodes[7].textContent}}presence.on("UpdateData",(()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/B/BookBrainz/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t}=window.location,a=t.split("/").slice(1);switch(a[0]){case"":e.details="Browsing homepage";break;case"author":case"collection":case"edition":case"edition-group":case"publisher":case"series":case"work":"create"===a[1]?applySubPathState(e,a[1],a[0]):applySubPathState(e,a[2],a[0]);break;case"editor":if("edit"===a[1])e.details="Editing their profile";else{const t=document.querySelector("h1").textContent;switch(a[2]??""){case"":e.details="Viewing profile",e.state=t;break;case"revisions":e.details=`Viewing ${t}'s revisions`;break;case"achievements":e.details=`Viewing ${t}'s achievements`;break;case"collections":e.details=`Viewing ${t}'s collections`}}break;case"help":e.details="Reading help page";break;case"revisions":e.details="Browsing revisions";break;case"revision":e.details="Viewing a revision",e.state=`#${document.querySelector("h1").lastChild.textContent}`;break;default:e.details="Browsing",e.state=document.querySelector("h1")?.textContent??document.title.match(/^(.*?)(?: \u2013 BookBrainz)?$/)[1]}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;