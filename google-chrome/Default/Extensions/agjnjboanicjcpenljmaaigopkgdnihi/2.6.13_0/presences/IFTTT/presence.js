var __webpack_exports__={};const presence=new Presence({clientId:"665519810054062100"});let oldLang,newLang,strings;async function getStrings(e){return presence.getStrings({search:"general.searching",browsing:"general.browsing",reading:"general.reading"},e)}presence.on("UpdateData",(async()=>{const e=window.location.pathname.split("/").slice(1),t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/I/IFTTT/assets/logo.png"};switch(oldLang=newLang,newLang=await presence.getSetting("lang").catch((()=>"en")),strings&&oldLang===newLang||(strings=await getStrings(newLang)),window.location.hostname){case"ift.tt":return presence.setActivity();case"help.ifttt.com":if("hc"!==e[0])return presence.setActivity();if(t.details="Help Center",e.length>2){switch(e[2]){case"articles":t.state="Article: ";break;case"categories":t.state="Category: ";break;case"sections":t.state="Section: ";break;default:t.state=""}const s=document.querySelector("h1");s&&(t.state+=s.textContent)}break;case"platform.ifttt.com":switch(e[0]){case"docs":{const e=document.querySelector("h1")?.textContent,s=document.querySelector("a.active")?.textContent;t.details="Documentation",e&&(t.state=`${e}${s?` - ${s}`:""}`),t.smallImageText=strings.reading,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break}case"blog":t.details="Developer spotlight",e[1]&&(t.state=document.querySelector("h1").textContent);break;case"solutions":t.details="Solutions",e[1]&&(t.state=document.querySelector("h3").textContent);break;case"case_studies":t.details="Case studies",e[1]&&(t.state=document.querySelector("h1").textContent);break;case"testimonials":t.details="Testimonials";break;case"contact_sales":t.details="Contact sales";break;default:return presence.setActivity()}break;case"status.ifttt.com":switch(e[0]){case"incidents":t.details="IFTTT Status - Incident Report",t.state=document.querySelector(".incident-name").textContent;break;default:{let e;try{e=[...document.querySelector(".unresolved-incidents").children].filter((e=>"none"!==e.style.display))}catch(t){e=[]}t.details="IFTTT Status",e.length>0&&(t.state=`Unresolved incidents: ${e.length}`);break}}break;default:switch(e[0]){case"applets":t.details=document.querySelector("h1").textContent,t.state=`by ${document.querySelector(".author").textContent}`,t.smallImageText=strings.browsing,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case"settings":t.details="Account settings";break;case"billing":t.details="Billing";break;case"home":case"my_applets":t.details="My Applets";break;case"create":t.details="Creating an Applet",t.state=document.querySelector("h1").textContent;break;case"activity":t.details="Activity";break;case"date_and_time":case"email":case"email_digest":case"ifttt":case"feed":case"space":case"weather":case"maker_webhooks":case"my_services":{const e=document.querySelector("h1")?.textContent;t.details="My Services",e&&(t.state=e),t.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/I/IFTTT/assets/logo.png",t.smallImageText=strings.browsing,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break}case"explore":case"search":{const e=document.querySelector("#search")?.value;document.querySelector(".story-title")?.textContent?(t.details="Blog",t.state=document.querySelector("h1").textContent,t.smallImageText=strings.reading,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png"):e?(t.details="Searching for Applets & Services",t.state=e,t.smallImageText=strings.search,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):(t.details="Exploring Applets & Services",t.smallImageText=strings.browsing,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png");break}case"plans":t.details="Plans";break;case"blog":t.details="Blog",t.smallImageText=strings.reading,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case"developers":t.details="Developers";break;case"contact":t.details="Contact";break;case"terms":t.details="Privacy Policy & Terms of Use";break;case"careers":t.details="Careers";break;default:if(!document.querySelector(".brand-section"))return presence.setActivity();t.details=document.querySelector("h1").textContent,t.state=document.querySelector(".large-service-logo").title,t.smallImageText=strings.browsing,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png"}}presence.setActivity(t)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;