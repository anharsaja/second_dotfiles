var __webpack_exports__={};const presence=new Presence({clientId:"1015299454292725760"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(()=>{const t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/War%20Thunder/assets/logo.png",startTimestamp:browsingTimestamp},{hostname:e,pathname:a,search:s,href:r}=window.location;switch(e){case"warthunder.com":t.details="Browsing...",/^\/[a-z]{2}\/?$/i.test(a)?t.state="Viewing home page":"/game/about"===a.substring(3)?t.state="About War Thunder":t.state=document.querySelector(".content__title")?.textContent||document.title.match(/(.*?)(?: - War Thunder$|$)/)[1];break;case"forum.warthunder.com":{t.details="Viewing forums";const e=s.match(/(?:\?)(.*?)(?:&.*|$)/)?s.match(/(?:\?)(.*?)(?:&.*|$)/)[1]:"",a=new URLSearchParams(s),r=document.querySelector(".ipsType_pageTitle")?.textContent;""===e?t.state="Viewing home page":e.startsWith("/calendar/")?t.state="Viewing calendar":e.startsWith("/search/")?a.get("q")?t.state=`Searching for: ${a.get("q")}`:t.state="Searching":e.startsWith("/forum/")?t.state=`Viewing category: ${r}`:e.startsWith("/topic/")?t.state=`Viewing thread: ${r}`:e.startsWith("/profile/")?t.state=`Viewing profile of: ${document.querySelector(".ipsPageHead_barText").textContent.replace(/^\s*|\s*$/g,"")}`:e.startsWith("/submit")?t.state="Creating new thread":e.startsWith("/messenger/")?/^\d+/.test(e.substring(11))?t.state=`Reading DM: ${r}`:e.startsWith("/messenger/compose")?t.state="Composing new message":t.state="Viewing private messages":t.state=r||document.title.match(/(.*?)(?: - War Thunder - Official Forum$|$)/)[1];break}case"live.warthunder.com":t.details="Browsing War Thunder Live",a.startsWith("/feed/")?t.state=document.title.match(/(?:WT Live \/\/ )(.*)/)[1]:a.startsWith("/post/")?(t.state=`Reading post: ${document.title.match(/(?:WT Live \/\/ )(.*)/)[1]}`,t.buttons=[{label:"View Post",url:r}]):a.startsWith("/subscribes/")?t.state="Viewing subscriptions":a.startsWith("/user/")?t.state=`Viewing profile of: ${document.querySelector(".nickname > span").textContent}`:t.state=document.title;break;case"tss.warthunder.com":switch(t.details="Browsing War Thunder Tournament Service",new URLSearchParams(s).get("action")){case"rating":t.state="Viewing a list of: player ratings";break;case"current_tournaments":t.state="Viewing a list of: active tournaments";break;case"tournament":t.details="Viewing a tournament",t.state=document.querySelector(".txt_name_tournament").textContent,t.smallImageKey=document.querySelector(".img_tournament").src,t.smallImageText=`Teams: ${document.querySelector("#all_teams_param_tour").textContent} | Prize: ${document.querySelector("[id-tss='prize_pool']").textContent}`,t.buttons=[{label:"View Tournament",url:r}];break;default:t.state=document.title}break;case"wiki.warthunder.com":{t.details="Browsing the wiki";const e=new URLSearchParams(s),a=e.get("title")||document.querySelector("#firstHeading").textContent,r=e.get("action");t.state="edit"===r?`Editing ${a}`:"history"===r?`Viewing revision history of: ${a}`:a;break}}t.details?presence.setActivity(t):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;