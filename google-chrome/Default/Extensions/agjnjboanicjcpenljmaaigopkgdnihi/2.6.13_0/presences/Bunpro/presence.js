var __webpack_exports__={};const presence=new Presence({clientId:"833430731816173669"}),levelImages={10:"https://cdn.rcd.gg/PreMiD/websites/B/Bunpro/assets/0.png",20:"https://cdn.rcd.gg/PreMiD/websites/B/Bunpro/assets/1.png",30:"https://cdn.rcd.gg/PreMiD/websites/B/Bunpro/assets/2.png",40:"https://cdn.rcd.gg/PreMiD/websites/B/Bunpro/assets/3.png",50:"https://cdn.rcd.gg/PreMiD/websites/B/Bunpro/assets/4.png",60:"https://cdn.rcd.gg/PreMiD/websites/B/Bunpro/assets/5.png",70:"https://cdn.rcd.gg/PreMiD/websites/B/Bunpro/assets/6.png",80:"https://cdn.rcd.gg/PreMiD/websites/B/Bunpro/assets/7.png",90:"https://cdn.rcd.gg/PreMiD/websites/B/Bunpro/assets/8.png",100:"https://cdn.rcd.gg/PreMiD/websites/B/Bunpro/assets/9.png"},slideshow=presence.createSlideshow();let oldPath,browsingTimestamp=Math.floor(Date.now()/1e3);function getLevelIcon(e){let t=levelImages[10];return e>=10&&e<100&&(t=levelImages[""+10*Math.floor(e/10)]),e<10&&(t=levelImages[10]),e>=100&&(t=levelImages[100]),t}function applyGrammarPointDetails(e){const{pathname:t,href:a}=document.location;e.details="Viewing a grammar point",e.state=removeRubyCharacters(document.querySelector("h1 > div")),t.startsWith("/learn")||(e.buttons=[{label:"View Grammar Point",url:a}])}function applyGrammarReviewDetails(e){const t=document.querySelector("header ul:nth-child(2)").children;e.state=`${t[0].textContent} | ${t[1].textContent} correct | ${t[2].textContent} remaining`}function removeRubyCharacters(e){let t="";for(const a of e.childNodes)"RUBY"===a.nodeName?t+=a.childNodes[0].textContent:t+=a.textContent;return t}presence.on("UpdateData",(()=>{const{pathname:e,hostname:t,href:a}=document.location,r=e.split("/").slice(1),s={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/B/Bunpro/assets/logo.png",startTimestamp:browsingTimestamp};if(oldPath!==e&&(browsingTimestamp=Math.floor(Date.now()/1e3),oldPath=e),"community.bunpro.jp"===t)switch(r[0]){case"":case"categories":s.details="Browsing the community";break;case"c":s.details="Browsing community category",s.state=document.querySelector(".category-name").textContent;break;case"latest":s.details="Browsing latest topics";break;case"new":s.details="Browsing new topics";break;case"search":s.details="Searching the community",s.state=document.querySelector(".search-bar > input").value;break;case"t":s.details="Viewing a community topic",s.state=document.querySelector("h1").textContent,s.buttons=[{label:"View Topic",url:a}];break;case"top":s.details="Browsing top topics";break;case"u":s.details=`Viewing ${document.querySelector("h1").textContent.trim()}'s community profile`,s.state=document.querySelector(".user-primary-navigation .active").textContent,s.smallImageKey=document.querySelector(".user-profile-avatar > img").src,s.smallImageText=`Level ${document.querySelector(".user-profile-avatar .avatar-flair").title.match(/\d+/)[0]}`,s.buttons=[{label:"View Profile",url:a}];break;case"unread":s.details="Browsing unread topics";break;default:s.details="Browsing the community",s.state=document.title.match(/^(.*?)( - Bunpro Community)?$/)[1]}else{const e=+(document.querySelector(".header-user-level")??document.querySelector("header li > button img")?.closest("button > div").querySelector("div:nth-child(2) p:last-child"))?.textContent.match(/\d+/)[0];switch(e&&(s.smallImageKey=getLevelIcon(e),s.smallImageText=`Level ${e}`),r[0]){case"bookmarks":s.details="Viewing their bookmarks";break;case"cram":s.details="Cramming",document.querySelector("#new-cram")?s.state="Selecting grammar to cram":applyGrammarReviewDetails(s);break;case"dashboard":{const e=document.querySelector("article li:last-child a div:nth-child(2)").textContent;s.details="Viewing dashboard",s.state=`${e} review${"1"===e?"":"s"}`;break}case"grammar_points":r[1]?applyGrammarPointDetails(s):s.details="Browsing grammar points";break;case"learn":document.querySelector("#js-quiz")?(s.details="Learning new grammar",applyGrammarReviewDetails(s)):applyGrammarPointDetails(s);break;case"lessons":r[1]?(s.details="Practicing reading",s.state=document.querySelector("h2").textContent.trim(),s.buttons=[{label:"View Lesson",url:a}]):s.details="Viewing lessons";break;case"notifications":s.details="Viewing their notifications";break;case"paths":r[1]?r[2]?applyGrammarPointDetails(s):(s.details="Viewing a grammar path",s.state=document.querySelector("h2").textContent,s.buttons=[{label:"View Grammar Path",url:a}]):s.details="Browsing grammar paths";break;case"reading_passages":s.details="Browsing practice reading passages";break;case"reviews":s.details="Doing reviews",applyGrammarReviewDetails(s);break;case"summary":{s.details="Viewing review summary";const e=document.querySelector("h4.text-quiz-correct");e&&(s.state=`${e.textContent} correct / ${document.querySelector("h4.text-quiz-incorrect").textContent} incorrect (${document.querySelector("aside h3").textContent})`);break}case"user":if("feedback"===r[1])s.details="Viewing their feedback";else switch(r[2]??""){case"":{s.details="Viewing their profile";const[e,t,a,r]=document.querySelector("h2 + div").children;s.state=`${e.querySelector("p").textContent.trim()} days studied | ${t.querySelector("p").textContent.trim()} streak | Level ${a.querySelector("p").textContent.trim()} (${r.querySelector("p").textContent.trim()} XP)`;break}case"badges":for(const[e,t]of document.querySelectorAll(".user-profile-badge--earned").entries())slideshow.addSlide(e.toString(),{...s,details:"Viewing their badges",state:`${t.querySelector("h3").textContent} - ${t.querySelector(".user-profile-badge--requirement").textContent}`,largeImageKey:t.querySelector(".user-profile-badge--icon").src,smallImageText:t.querySelector(".user-profile-badge--flavor-text").textContent},5e3);break;case"reset":s.details="Resetting their account";break;case"stats":s.details="Viewing their stats"}break;case"vocabs":r[1]?(s.details="Viewing a vocabulary",s.state=`${removeRubyCharacters(document.querySelector("h1 > div"))} - ${document.querySelector("h2").textContent}`,s.buttons=[{label:"View Vocabulary",url:a}]):(s.details="Searching for vocabulary",s.state=document.querySelector("#query").value);break;default:s.details="Browsing",s.state=document.querySelector("h1")?.textContent.trim()}}s.details?(presence.setActivity(s),slideshow.deleteAllSlides()):slideshow.getSlides().length?presence.setActivity(slideshow):(presence.setActivity(),slideshow.deleteAllSlides())}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;