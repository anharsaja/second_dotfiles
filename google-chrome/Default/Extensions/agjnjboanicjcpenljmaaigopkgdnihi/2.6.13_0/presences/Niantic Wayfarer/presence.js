var __webpack_exports__={};const presence=new Presence({clientId:"684174415415476240"}),browsingTimestamp=Math.floor(Date.now()/1e3),shortenedURLs={};async function getShortURL(e){if(e.length<256)return e;if(shortenedURLs[e])return shortenedURLs[e];try{shortenedURLs[e]="https://cdn.rcd.gg/PreMiD/websites/N/Niantic%20Wayfarer/assets/logo.png";const t=await(await fetch(`https://pd.premid.app/create/${e}`)).text();return shortenedURLs[e]=t,t}catch(t){return presence.error(t),e}}presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/N/Niantic%20Wayfarer/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t}=document.location;if(t.includes("/review")){const t=document.querySelector("app-title-and-description-b .wf-review-card__body a > div"),i=document.querySelector("app-title-and-description-b .wf-review-card__body a+div"),s=document.querySelector("app-photo-b .wf-review-card__body > div > div:last-child");t&&i&&s?(e.largeImageKey=await getShortURL(document.querySelector("app-photo-b .wf-image-modal > img").src),e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/Niantic%20Wayfarer/assets/0.png",e.details=`Reviewing: ${t.childNodes[0].textContent.trim()}`,e.state=`Description: ${i.textContent.trim()}`,e.smallImageText=`Address: ${s.textContent.split(":")[1].trim()}`):document.querySelector("app-review-photo")?(e.details="Reviewing photos",e.state=`for ${document.querySelector("app-review-photo .review-photo__info > div > div:first-child").textContent}`):document.querySelector("app-review-edit")?(e.details="Reviewing a Wayspot edit",e.state=`for ${document.querySelector("app-review-edit-info .review-edit-info__info").textContent.trim()}`):(e.details="Getting ready to",e.state="review a location")}else if(t.includes("/settings"))e.details="Managing settings";else if(t.includes("/help")){const t=document.querySelector("wf-page-header h2 a + span")?.textContent.split(">")[1].trim();e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",t?(e.details="Reading article:",e.state=t):e.details="Browsing the Help Center"}else if(t.includes("/criteria"))e.details="Reading criteria",e.state=document.querySelector("wf-subnavigation li li[class*=selected]").textContent.trim();else if(t.includes("/login"))e.details="Logging in";else if(t.includes("/profile")){e.details="Viewing their profile",e.state=`Rating: ${document.querySelector("wf-rating-bar section[class*=active]").textContent.trim()}`,e.smallImageKey=await getShortURL(document.querySelector("wf-upgrade-visualization image").href.baseVal);const t=[...document.querySelectorAll("wf-profile-stats > div > div:not([class]):not(:last-child) .wf-profile-stats__stat")].reduce(((e,t)=>e+ +t.children[1].textContent.trim()),0),i=+document.querySelector("wf-profile-stats > div > .wf-profile-stats__stat > div:last-child").textContent.trim();e.smallImageText=`Total: ${i}, Agreements: ${t} (${(t/i*100).toFixed(1)}%)`}else t.includes("/nominations")?e.details="Viewing their nominations":t.includes("/showcase")&&(e.details="Viewing the showcased wayspots");e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;