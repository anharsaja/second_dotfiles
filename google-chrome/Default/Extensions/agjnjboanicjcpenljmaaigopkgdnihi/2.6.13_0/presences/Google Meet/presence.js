var __webpack_exports__={};const presence=new Presence({clientId:"701914032541794386"}),browsingTimestamp=Math.floor(Date.now()/1e3);function capitalizeFirstLetter(e){if(e)return e.trim().charAt(0).toUpperCase()+e.trim().slice(1).toLowerCase()}let oldURL,pdCache={name:"",details:"",state:"",meetTitle:"",meetDetails:"",meetState:""};function replacePlaceholders(e,t,a,i){if(!e)return"";let s=e;return s=t?s.replace("%meettime%",`| time: ${t}`):s.replace("%meettime%",""),s=a?s.replace("%meettitle%",`| title: ${a}`):s.replace("%meettitle%",""),s=i?s.replace("%meetpeople%",`| amount of attendants: ${i}`):s.replace("%meetpeople%",""),s?s?.toLowerCase()?.includes("ready to join?")?"":(s="|"===s.at(0)?capitalizeFirstLetter(s.slice(2)):"|"===s.at(1)?capitalizeFirstLetter(s.slice(3)):capitalizeFirstLetter(s),s):""}presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/G/Google%20Meet/assets/logo.png",startTimestamp:browsingTimestamp},[t,a,i,s,r]=await Promise.all([presence.getSetting("usePresenceName"),presence.getSetting("hideInviteCode"),presence.getSetting("meetTitle"),presence.getSetting("meetDetail"),presence.getSetting("meetState")]),{href:c,pathname:l}=document.location;if("/"===l.toLowerCase())return e.details="Initial page",e.state="Just waiting",presence.setActivity(e);let n=document.querySelector(".lefKC")?.textContent;const o=document.querySelector('[jsname="W5i7Bf"]')?.textContent,p=document.querySelector(".uGOf1d")?.textContent;if(!(n&&n?.includes(":")&&p||o))return e.details="Waiting for the meeting to start.",void presence.setActivity(e);c!==oldURL||!pdCache?.details||pdCache?.meetDetails!==s||pdCache?.meetState!==r||t&&pdCache.meetTitle!==i?(n=n?.replace(/([0-9]{2}:[0-9]{2})( )?((am)|(pm))?/gm,""),n?.toLowerCase()?.match(/[a-z]{3}-[a-z]{4}-[a-z]{3}/gm)?.[0]&&a&&(n="Secret"),e.details=replacePlaceholders(s,o,n,p),e.state=replacePlaceholders(r,o,n,p),oldURL=c,t&&(e.name=replacePlaceholders(i,o,n,p)),pdCache={name:e?.name??"",details:e?.details,state:e?.state,meetTitle:i??"",meetDetails:s??"",meetState:r??""}):pdCache?.details&&(t&&(e.name=pdCache.name),e.details=pdCache.details,e.state=pdCache.state),presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;