var __webpack_exports__={};const presence=new Presence({clientId:"1134044987277975616"}),browsingTimestamp=Math.floor(Date.now()/1e3);function updateVideoTimestamps(){return presence.getTimestamps(presence.timestampFromFormat(document.querySelector(".vjs-current-time-display").textContent),presence.timestampFromFormat(document.querySelector(".vjs-duration-display").textContent))}presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Physics%20Wallah/assets/logo.png",startTimestamp:browsingTimestamp,type:3},{pathname:t,href:s,search:a}=document.location,l=await presence.getSetting("privacy");if("/"===t)e.details="Home",e.state="Browsing...",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Physics%20Wallah/assets/0.png",e.smallImageText="Browsing Home Page";else if(t.startsWith("/study"))if(e.details="Browsing...",e.state="In website",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Physics%20Wallah/assets/1.png",e.smallImageText="Browsing the website",t.endsWith("/my-batches"))e.details="Studying...",e.state="My Batches",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.smallImageText="Studying";else if(t.includes("batch-overview"))e.details="Studying...",e.state=`Viewing ${document.querySelector(".bold.text-white").textContent}`,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.smallImageText="Studying",e.buttons=[{label:"View Batch",url:s}];else if(t.includes("batch-video-player")){const t=localStorage.getItem("dpp_subject");let a=` | ${t}`;null===t&&(a=""),l?e.details=`Watching a lecture${a}`:(e.details=`Watching Lecture${a}`,e.state=`${JSON.parse(localStorage.getItem("VIDEO_DETAILS")).topic}`,e.buttons=[{label:"Watch Lecture",url:s}]),document.querySelectorAll(".vjs-paused").length<1?(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText="Watching a lecture",[e.startTimestamp,e.endTimestamp]=updateVideoTimestamps()):(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText="Paused")}else if(t.includes("subject-topics")){const t=new URLSearchParams(a);t.has("chapterId")?(e.details=t.get("subject"),e.state=t.get("topic"),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.smallImageText="Browsing Resources"):t.has("chapterId")||(e.details=t.get("subject"),e.state="Browsing Resources...",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.smallImageText="Browsing Resources")}else t.includes("open-pdf")?localStorage.getItem("dpp_subject")&&(e.details="Solving DPP (PDF)",e.state=l?"Improving skills":localStorage.getItem("dpp_subject"),e.startTimestamp=browsingTimestamp,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/viewing.png",e.smallImageText="Viewing DPP"):t.includes("q-bank-exercise")&&(e.details="Solving DPP (MCQ)",e.state=l?"Improving skills":localStorage.getItem("dpp_subject"),e.startTimestamp=browsingTimestamp,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/viewing.png",e.smallImageText="Viewing DPP");else if(t.startsWith("/watch")){const t=localStorage.getItem("dpp_subject");let a=` | ${t}`;null===t&&(a=""),l?e.details=`Watching a lecture${a}`:(e.details=`Watching Lecture${a}`,e.state=`${JSON.parse(localStorage.getItem("VIDEO_DETAILS")).topic}`,e.buttons=[{label:"Watch Lecture",url:s}]),document.querySelectorAll(".vjs-paused").length<1?(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText="Watching a lecture",[e.startTimestamp,e.endTimestamp]=updateVideoTimestamps()):(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText="Paused")}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LG1CQUZBYSxhQUFhQyxRQUFRLGVBRzlDdEIsRUFBYUUsZUFBaUJmLGtCQUM5QmEsRUFBYVksY0FBZ0Isa0RBQzdCWixFQUFhYSxlQUFpQixvQkFHakMsR0FBSVQsRUFBU1UsV0FBVyxVQUFXLENBQ3BDLE1BQU1NLEVBQU9DLGFBQWFDLFFBQVEsZUFDbEMsSUFBSUMsRUFBUSxNQUFNSCxJQUNMLE9BQVRBLElBQ0FHLEVBQVEsSUFDUGYsRUFNRFIsRUFBYVUsUUFBVSxxQkFBcUJhLEtBTDVDdkIsRUFBYVUsUUFBVSxtQkFBbUJhLElBQzFDdkIsRUFBYVcsTUFBUSxHQUFHYSxLQUFLQyxNQUFNSixhQUFhQyxRQUFRLGtCQUFrQkksUUFDMUUxQixFQUFhaUIsUUFBVSxDQUFDLENBQUVDLE1BQU8sZ0JBQWlCQyxJQUFLZCxLQUl2RFYsU0FBU2dDLGlCQUFpQixlQUFlQyxPQUFTLEdBQ2xENUIsRUFBYVksY0FBZ0IsK0NBQzdCWixFQUFhYSxlQUFpQixzQkFDN0JiLEVBQWFFLGVBQWdCRixFQUFhNkIsY0FDdkNyQywwQkFHSlEsRUFBYVksY0FBZ0IsZ0RBQzdCWixFQUFhYSxlQUFpQixTQUV0QyxDQUNBN0IsU0FBU2tELFlBQVlsQyxFQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcHJlc2VuY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcHJlc2VuY2UgPSBuZXcgUHJlc2VuY2Uoe1xuICAgIGNsaWVudElkOiBcIjExMzQwNDQ5ODcyNzc5NzU2MTZcIixcbn0pLCBicm93c2luZ1RpbWVzdGFtcCA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApO1xucHJlc2VuY2Uub24oXCJVcGRhdGVEYXRhXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBwcmVzZW5jZURhdGEgPSB7XG4gICAgICAgIGxhcmdlSW1hZ2VLZXk6IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9QL1BoeXNpY3MlMjBXYWxsYWgvYXNzZXRzL2xvZ28ucG5nXCIsXG4gICAgICAgIHN0YXJ0VGltZXN0YW1wOiBicm93c2luZ1RpbWVzdGFtcCxcbiAgICAgICAgdHlwZTogMyxcbiAgICB9LCB7IHBhdGhuYW1lLCBocmVmLCBzZWFyY2ggfSA9IGRvY3VtZW50LmxvY2F0aW9uLCBwcml2YWN5TW9kZSA9IGF3YWl0IHByZXNlbmNlLmdldFNldHRpbmcoXCJwcml2YWN5XCIpO1xuICAgIGlmIChwYXRobmFtZSA9PT0gXCIvXCIpIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIkhvbWVcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gXCJCcm93c2luZy4uLlwiO1xuICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9QL1BoeXNpY3MlMjBXYWxsYWgvYXNzZXRzLzAucG5nXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlVGV4dCA9IFwiQnJvd3NpbmcgSG9tZSBQYWdlXCI7XG4gICAgfVxuICAgIGVsc2UgaWYgKHBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvc3R1ZHlcIikpIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIkJyb3dzaW5nLi4uXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IFwiSW4gd2Vic2l0ZVwiO1xuICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9QL1BoeXNpY3MlMjBXYWxsYWgvYXNzZXRzLzEucG5nXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlVGV4dCA9IFwiQnJvd3NpbmcgdGhlIHdlYnNpdGVcIjtcbiAgICAgICAgaWYgKHBhdGhuYW1lLmVuZHNXaXRoKFwiL215LWJhdGNoZXNcIikpIHtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJTdHVkeWluZy4uLlwiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gXCJNeSBCYXRjaGVzXCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvcmVhZGluZy5wbmdcIjtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlVGV4dCA9IFwiU3R1ZHlpbmdcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChwYXRobmFtZS5pbmNsdWRlcyhcImJhdGNoLW92ZXJ2aWV3XCIpKSB7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiU3R1ZHlpbmcuLi5cIjtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGBWaWV3aW5nICR7ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5ib2xkLnRleHQtd2hpdGVcIikudGV4dENvbnRlbnR9YDtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9yZWFkaW5nLnBuZ1wiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VUZXh0ID0gXCJTdHVkeWluZ1wiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmJ1dHRvbnMgPSBbeyBsYWJlbDogXCJWaWV3IEJhdGNoXCIsIHVybDogaHJlZiB9XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChwYXRobmFtZS5pbmNsdWRlcyhcImJhdGNoLXZpZGVvLXBsYXllclwiKSkge1xuICAgICAgICAgICAgY29uc3QgZGV0YSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiZHBwX3N1YmplY3RcIik7XG4gICAgICAgICAgICBsZXQgZGV0YWwgPSBgIHwgJHtkZXRhfWA7XG4gICAgICAgICAgICBpZiAoZGV0YSA9PT0gbnVsbClcbiAgICAgICAgICAgICAgICBkZXRhbCA9IFwiXCI7XG4gICAgICAgICAgICBpZiAoIXByaXZhY3lNb2RlKSB7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBgV2F0Y2hpbmcgTGVjdHVyZSR7ZGV0YWx9YDtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBgJHtKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiVklERU9fREVUQUlMU1wiKSkudG9waWN9YDtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuYnV0dG9ucyA9IFt7IGxhYmVsOiBcIldhdGNoIExlY3R1cmVcIiwgdXJsOiBocmVmIH1dO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gYFdhdGNoaW5nIGEgbGVjdHVyZSR7ZGV0YWx9YDtcbiAgICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnZqcy1wYXVzZWRcIikubGVuZ3RoIDwgMSkge1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9wbGF5LnBuZ1wiO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlVGV4dCA9IFwiV2F0Y2hpbmcgYSBsZWN0dXJlXCI7XG4gICAgICAgICAgICAgICAgW3ByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCwgcHJlc2VuY2VEYXRhLmVuZFRpbWVzdGFtcF0gPVxuICAgICAgICAgICAgICAgICAgICB1cGRhdGVWaWRlb1RpbWVzdGFtcHMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9wYXVzZS5wbmdcIjtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZVRleHQgPSBcIlBhdXNlZFwiO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHBhdGhuYW1lLmluY2x1ZGVzKFwic3ViamVjdC10b3BpY3NcIikpIHtcbiAgICAgICAgICAgIGNvbnN0IHVybFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoc2VhcmNoKTtcbiAgICAgICAgICAgIGlmICh1cmxQYXJhbXMuaGFzKFwiY2hhcHRlcklkXCIpKSB7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSB1cmxQYXJhbXMuZ2V0KFwic3ViamVjdFwiKTtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSB1cmxQYXJhbXMuZ2V0KFwidG9waWNcIik7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3JlYWRpbmcucG5nXCI7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VUZXh0ID0gXCJCcm93c2luZyBSZXNvdXJjZXNcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKCF1cmxQYXJhbXMuaGFzKFwiY2hhcHRlcklkXCIpKSB7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSB1cmxQYXJhbXMuZ2V0KFwic3ViamVjdFwiKTtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBcIkJyb3dzaW5nIFJlc291cmNlcy4uLlwiO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9yZWFkaW5nLnBuZ1wiO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlVGV4dCA9IFwiQnJvd3NpbmcgUmVzb3VyY2VzXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocGF0aG5hbWUuaW5jbHVkZXMoXCJvcGVuLXBkZlwiKSkge1xuICAgICAgICAgICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiZHBwX3N1YmplY3RcIikpIHtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiU29sdmluZyBEUFAgKFBERilcIjtcbiAgICAgICAgICAgICAgICBpZiAoIXByaXZhY3lNb2RlKVxuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImRwcF9zdWJqZWN0XCIpO1xuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gXCJJbXByb3Zpbmcgc2tpbGxzXCI7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXJ0VGltZXN0YW1wID0gYnJvd3NpbmdUaW1lc3RhbXA7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3ZpZXdpbmcucG5nXCI7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VUZXh0ID0gXCJWaWV3aW5nIERQUFwiO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHBhdGhuYW1lLmluY2x1ZGVzKFwicS1iYW5rLWV4ZXJjaXNlXCIpKSB7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiU29sdmluZyBEUFAgKE1DUSlcIjtcbiAgICAgICAgICAgIGlmICghcHJpdmFjeU1vZGUpXG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJkcHBfc3ViamVjdFwiKTtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBcIkltcHJvdmluZyBza2lsbHNcIjtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCA9IGJyb3dzaW5nVGltZXN0YW1wO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3ZpZXdpbmcucG5nXCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZVRleHQgPSBcIlZpZXdpbmcgRFBQXCI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAocGF0aG5hbWUuc3RhcnRzV2l0aChcIi93YXRjaFwiKSkge1xuICAgICAgICBjb25zdCBkZXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJkcHBfc3ViamVjdFwiKTtcbiAgICAgICAgbGV0IGRldGFsID0gYCB8ICR7ZGV0YX1gO1xuICAgICAgICBpZiAoZGV0YSA9PT0gbnVsbClcbiAgICAgICAgICAgIGRldGFsID0gXCJcIjtcbiAgICAgICAgaWYgKCFwcml2YWN5TW9kZSkge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBgV2F0Y2hpbmcgTGVjdHVyZSR7ZGV0YWx9YDtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke0pTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJWSURFT19ERVRBSUxTXCIpKS50b3BpY31gO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmJ1dHRvbnMgPSBbeyBsYWJlbDogXCJXYXRjaCBMZWN0dXJlXCIsIHVybDogaHJlZiB9XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IGBXYXRjaGluZyBhIGxlY3R1cmUke2RldGFsfWA7XG4gICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnZqcy1wYXVzZWRcIikubGVuZ3RoIDwgMSkge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3BsYXkucG5nXCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZVRleHQgPSBcIldhdGNoaW5nIGEgbGVjdHVyZVwiO1xuICAgICAgICAgICAgW3ByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCwgcHJlc2VuY2VEYXRhLmVuZFRpbWVzdGFtcF0gPVxuICAgICAgICAgICAgICAgIHVwZGF0ZVZpZGVvVGltZXN0YW1wcygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3BhdXNlLnBuZ1wiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VUZXh0ID0gXCJQYXVzZWRcIjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwcmVzZW5jZS5zZXRBY3Rpdml0eShwcmVzZW5jZURhdGEpO1xufSk7XG5mdW5jdGlvbiB1cGRhdGVWaWRlb1RpbWVzdGFtcHMoKSB7XG4gICAgcmV0dXJuIHByZXNlbmNlLmdldFRpbWVzdGFtcHMocHJlc2VuY2UudGltZXN0YW1wRnJvbUZvcm1hdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnZqcy1jdXJyZW50LXRpbWUtZGlzcGxheVwiKS50ZXh0Q29udGVudCksIHByZXNlbmNlLnRpbWVzdGFtcEZyb21Gb3JtYXQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi52anMtZHVyYXRpb24tZGlzcGxheVwiKS50ZXh0Q29udGVudCkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY0hKbGMyVnVZMlV1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SndjbVZ6Wlc1alpTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGRkJRVkVzUTBGQlF6dEpRVU0xUWl4UlFVRlJMRVZCUVVVc2NVSkJRWEZDTzBOQlF5OUNMRU5CUVVNc1JVRkRSaXhwUWtGQmFVSXNSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVWQlFVVXNSMEZCUnl4SlFVRkpMRU5CUVVNc1EwRkJRenRCUVZGdVJDeFJRVUZSTEVOQlFVTXNSVUZCUlN4RFFVRkRMRmxCUVZrc1JVRkJSU3hMUVVGTExFbEJRVWtzUlVGQlJUdEpRVU53UXl4TlFVRk5MRmxCUVZrc1IwRkJhVUk3VVVGRGFrTXNZVUZCWVN4NVJVRkJZVHRSUVVNeFFpeGpRVUZqTEVWQlFVVXNhVUpCUVdsQ08xRkJRMnBETEVsQlFVa3NSMEZCZFVJN1MwRkRNMElzUlVGRFJDeEZRVUZGTEZGQlFWRXNSVUZCUlN4SlFVRkpMRVZCUVVVc1RVRkJUU3hGUVVGRkxFZEJRVWNzVVVGQlVTeERRVUZETEZGQlFWRXNSVUZET1VNc1YwRkJWeXhIUVVGSExFMUJRVTBzVVVGQlVTeERRVUZETEZWQlFWVXNRMEZCVlN4VFFVRlRMRU5CUVVNc1EwRkJRenRKUVVVM1JDeEpRVUZKTEZGQlFWRXNTMEZCU3l4SFFVRkhMRVZCUVVVN1VVRkRja0lzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4TlFVRk5MRU5CUVVNN1VVRkRPVUlzV1VGQldTeERRVUZETEV0QlFVc3NSMEZCUnl4aFFVRmhMRU5CUVVNN1VVRkRia01zV1VGQldTeERRVUZETEdGQlFXRXNkVVZCUVd0Q0xFTkJRVU03VVVGRE4wTXNXVUZCV1N4RFFVRkRMR05CUVdNc1IwRkJSeXh2UWtGQmIwSXNRMEZCUXp0TFFVTnVSRHRUUVVGTkxFbEJRVWtzVVVGQlVTeERRVUZETEZWQlFWVXNRMEZCUXl4UlFVRlJMRU5CUVVNc1JVRkJSVHRSUVVONlF5eFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMR0ZCUVdFc1EwRkJRenRSUVVOeVF5eFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRmxCUVZrc1EwRkJRenRSUVVOc1F5eFpRVUZaTEVOQlFVTXNZVUZCWVN4MVJVRkJiVUlzUTBGQlF6dFJRVU01UXl4WlFVRlpMRU5CUVVNc1kwRkJZeXhIUVVGSExITkNRVUZ6UWl4RFFVRkRPMUZCUlhKRUxFbEJRVWtzVVVGQlVTeERRVUZETEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc1JVRkJSVHRaUVVOeVF5eFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMR0ZCUVdFc1EwRkJRenRaUVVOeVF5eFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRmxCUVZrc1EwRkJRenRaUVVOc1F5eFpRVUZaTEVOQlFVTXNZVUZCWVN4dlJFRkJhVUlzUTBGQlF6dFpRVU0xUXl4WlFVRlpMRU5CUVVNc1kwRkJZeXhIUVVGSExGVkJRVlVzUTBGQlF6dFRRVU42UXp0aFFVRk5MRWxCUVVrc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhGUVVGRk8xbEJReTlETEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1lVRkJZU3hEUVVGRE8xbEJRM0pETEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1YwRkRjRUlzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4clFrRkJhMElzUTBGQlF5eERRVUZETEZkQlF6VkRMRVZCUVVVc1EwRkJRenRaUVVOSUxGbEJRVmtzUTBGQlF5eGhRVUZoTEc5RVFVRnBRaXhEUVVGRE8xbEJRelZETEZsQlFWa3NRMEZCUXl4alFVRmpMRWRCUVVjc1ZVRkJWU3hEUVVGRE8xbEJRM3BETEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1EwRkJReXhGUVVGRkxFdEJRVXNzUlVGQlJTeFpRVUZaTEVWQlFVVXNSMEZCUnl4RlFVRkZMRWxCUVVrc1JVRkJSU3hEUVVGRExFTkJRVU03VTBGRE5VUTdZVUZCVFN4SlFVRkpMRkZCUVZFc1EwRkJReXhSUVVGUkxFTkJRVU1zYjBKQlFXOUNMRU5CUVVNc1JVRkJSVHRaUVVOdVJDeE5RVUZOTEVsQlFVa3NSMEZCUnl4WlFVRlpMRU5CUVVNc1QwRkJUeXhEUVVGRExHRkJRV0VzUTBGQlF5eERRVUZETzFsQlEycEVMRWxCUVVrc1MwRkJTeXhIUVVGSExFMUJRVTBzU1VGQlNTeEZRVUZGTEVOQlFVTTdXVUZEZWtJc1NVRkJTU3hKUVVGSkxFdEJRVXNzU1VGQlNUdG5Ra0ZCUlN4TFFVRkxMRWRCUVVjc1JVRkJSU3hEUVVGRE8xbEJRemxDTEVsQlFVa3NRMEZCUXl4WFFVRlhMRVZCUVVVN1owSkJRMnBDTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc2JVSkJRVzFDTEV0QlFVc3NSVUZCUlN4RFFVRkRPMmRDUVVWc1JDeFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRWRCUTNCQ0xFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4RFFVRkRMRTlCUVU4c1EwRkJReXhsUVVGbExFTkJRVU1zUTBGQlF5eERRVUZETEV0QlEyNUVMRVZCUVVVc1EwRkJRenRuUWtGRFNDeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMRU5CUVVNc1JVRkJSU3hMUVVGTExFVkJRVVVzWlVGQlpTeEZRVUZGTEVkQlFVY3NSVUZCUlN4SlFVRkpMRVZCUVVVc1EwRkJReXhEUVVGRE8yRkJReTlFT3p0blFrRkJUU3haUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEhGQ1FVRnhRaXhMUVVGTExFVkJRVVVzUTBGQlF6dFpRVVV6UkN4SlFVRkpMRkZCUVZFc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJReXhOUVVGTkxFZEJRVWNzUTBGQlF5eEZRVUZGTzJkQ1FVTjRSQ3haUVVGWkxFTkJRVU1zWVVGQllTeHBSRUZCWXl4RFFVRkRPMmRDUVVONlF5eFpRVUZaTEVOQlFVTXNZMEZCWXl4SFFVRkhMRzlDUVVGdlFpeERRVUZETzJkQ1FVTnVSQ3hEUVVGRExGbEJRVmtzUTBGQlF5eGpRVUZqTEVWQlFVVXNXVUZCV1N4RFFVRkRMRmxCUVZrc1EwRkJRenR2UWtGRGRrUXNjVUpCUVhGQ0xFVkJRVVVzUTBGQlF6dGhRVU42UWp0cFFrRkJUVHRuUWtGRFRpeFpRVUZaTEVOQlFVTXNZVUZCWVN4clJFRkJaU3hEUVVGRE8yZENRVU14UXl4WlFVRlpMRU5CUVVNc1kwRkJZeXhIUVVGSExGRkJRVkVzUTBGQlF6dGhRVU4yUXp0VFFVTkVPMkZCUVUwc1NVRkJTU3hSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExFVkJRVVU3V1VGREwwTXNUVUZCVFN4VFFVRlRMRWRCUVVjc1NVRkJTU3hsUVVGbExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTTdXVUZGT1VNc1NVRkJTU3hUUVVGVExFTkJRVU1zUjBGQlJ5eERRVUZETEZkQlFWY3NRMEZCUXl4RlFVRkZPMmRDUVVNdlFpeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMRk5CUVZNc1EwRkJReXhIUVVGSExFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTTdaMEpCUTJoRUxGbEJRVmtzUTBGQlF5eExRVUZMTEVkQlFVY3NVMEZCVXl4RFFVRkRMRWRCUVVjc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6dG5Ra0ZETlVNc1dVRkJXU3hEUVVGRExHRkJRV0VzYjBSQlFXbENMRU5CUVVNN1owSkJRelZETEZsQlFWa3NRMEZCUXl4alFVRmpMRWRCUVVjc2IwSkJRVzlDTEVOQlFVTTdZVUZEYmtRN2FVSkJRVTBzU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1YwRkJWeXhEUVVGRExFVkJRVVU3WjBKQlEzWkRMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzVTBGQlV5eERRVUZETEVkQlFVY3NRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJRenRuUWtGRGFFUXNXVUZCV1N4RFFVRkRMRXRCUVVzc1IwRkJSeXgxUWtGQmRVSXNRMEZCUXp0blFrRkROME1zV1VGQldTeERRVUZETEdGQlFXRXNiMFJCUVdsQ0xFTkJRVU03WjBKQlF6VkRMRmxCUVZrc1EwRkJReXhqUVVGakxFZEJRVWNzYjBKQlFXOUNMRU5CUVVNN1lVRkRia1E3VTBGRFJEdGhRVUZOTEVsQlFVa3NVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVU1zUlVGQlJUdFpRVU42UXl4SlFVRkpMRmxCUVZrc1EwRkJReXhQUVVGUExFTkJRVU1zWVVGQllTeERRVUZETEVWQlFVVTdaMEpCUTNoRExGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NiVUpCUVcxQ0xFTkJRVU03WjBKQlF6TkRMRWxCUVVrc1EwRkJReXhYUVVGWE8yOUNRVU5tTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1dVRkJXU3hEUVVGRExFOUJRVThzUTBGQlF5eGhRVUZoTEVOQlFVTXNRMEZCUXpzN2IwSkJRM0pFTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc2EwSkJRV3RDTEVOQlFVTTdaMEpCUlRkRExGbEJRVmtzUTBGQlF5eGpRVUZqTEVkQlFVY3NhVUpCUVdsQ0xFTkJRVU03WjBKQlEyaEVMRmxCUVZrc1EwRkJReXhoUVVGaExHOUVRVUZwUWl4RFFVRkRPMmRDUVVNMVF5eFpRVUZaTEVOQlFVTXNZMEZCWXl4SFFVRkhMR0ZCUVdFc1EwRkJRenRoUVVNMVF6dFRRVU5FTzJGQlFVMHNTVUZCU1N4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExHbENRVUZwUWl4RFFVRkRMRVZCUVVVN1dVRkRhRVFzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4dFFrRkJiVUlzUTBGQlF6dFpRVU16UXl4SlFVRkpMRU5CUVVNc1YwRkJWenRuUWtGRFppeFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRmxCUVZrc1EwRkJReXhQUVVGUExFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTTdPMmRDUVVOeVJDeFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMR3RDUVVGclFpeERRVUZETzFsQlJUZERMRmxCUVZrc1EwRkJReXhqUVVGakxFZEJRVWNzYVVKQlFXbENMRU5CUVVNN1dVRkRhRVFzV1VGQldTeERRVUZETEdGQlFXRXNiMFJCUVdsQ0xFTkJRVU03V1VGRE5VTXNXVUZCV1N4RFFVRkRMR05CUVdNc1IwRkJSeXhoUVVGaExFTkJRVU03VTBGRE5VTTdTMEZEUkR0VFFVRk5MRWxCUVVrc1VVRkJVU3hEUVVGRExGVkJRVlVzUTBGQlF5eFJRVUZSTEVOQlFVTXNSVUZCUlR0UlFVTjZReXhOUVVGTkxFbEJRVWtzUjBGQlJ5eFpRVUZaTEVOQlFVTXNUMEZCVHl4RFFVRkRMR0ZCUVdFc1EwRkJReXhEUVVGRE8xRkJRMnBFTEVsQlFVa3NTMEZCU3l4SFFVRkhMRTFCUVUwc1NVRkJTU3hGUVVGRkxFTkJRVU03VVVGRGVrSXNTVUZCU1N4SlFVRkpMRXRCUVVzc1NVRkJTVHRaUVVGRkxFdEJRVXNzUjBGQlJ5eEZRVUZGTEVOQlFVTTdVVUZET1VJc1NVRkJTU3hEUVVGRExGZEJRVmNzUlVGQlJUdFpRVU5xUWl4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExHMUNRVUZ0UWl4TFFVRkxMRVZCUVVVc1EwRkJRenRaUVVWc1JDeFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRWRCUTNCQ0xFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1N4RFFVRkRMRTlCUVU4c1EwRkJReXhsUVVGbExFTkJRVU1zUTBGQlF5eERRVUZETEV0QlEyNUVMRVZCUVVVc1EwRkJRenRaUVVWSUxGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NRMEZCUXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hsUVVGbExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVsQlFVa3NSVUZCUlN4RFFVRkRMRU5CUVVNN1UwRkRMMFE3TzFsQlFVMHNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXh4UWtGQmNVSXNTMEZCU3l4RlFVRkZMRU5CUVVNN1VVRkZNMFFzU1VGQlNTeFJRVUZSTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1JVRkJSVHRaUVVONFJDeFpRVUZaTEVOQlFVTXNZVUZCWVN4cFJFRkJZeXhEUVVGRE8xbEJRM3BETEZsQlFWa3NRMEZCUXl4alFVRmpMRWRCUVVjc2IwSkJRVzlDTEVOQlFVTTdXVUZEYmtRc1EwRkJReXhaUVVGWkxFTkJRVU1zWTBGQll5eEZRVUZGTEZsQlFWa3NRMEZCUXl4WlFVRlpMRU5CUVVNN1owSkJRM1pFTEhGQ1FVRnhRaXhGUVVGRkxFTkJRVU03VTBGRGVrSTdZVUZCVFR0WlFVTk9MRmxCUVZrc1EwRkJReXhoUVVGaExHdEVRVUZsTEVOQlFVTTdXVUZETVVNc1dVRkJXU3hEUVVGRExHTkJRV01zUjBGQlJ5eFJRVUZSTEVOQlFVTTdVMEZEZGtNN1MwRkRSRHRKUVVORUxGRkJRVkVzUTBGQlF5eFhRVUZYTEVOQlFVTXNXVUZCV1N4RFFVRkRMRU5CUVVNN1FVRkRjRU1zUTBGQlF5eERRVUZETEVOQlFVTTdRVUZGU0N4VFFVRlRMSEZDUVVGeFFqdEpRVU0zUWl4UFFVRlBMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRelZDTEZGQlFWRXNRMEZCUXl4dFFrRkJiVUlzUTBGRE0wSXNVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXd5UWtGQk1rSXNRMEZCUXl4RFFVRkRMRmRCUVZjc1EwRkRMMFFzUlVGRFJDeFJRVUZSTEVOQlFVTXNiVUpCUVcxQ0xFTkJRek5DTEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUVVNc2RVSkJRWFZDTEVOQlFVTXNRMEZCUXl4WFFVRlhMRU5CUXpORUxFTkJRMFFzUTBGQlF6dEJRVU5JTEVOQlFVTWlmUT09Il0sIm5hbWVzIjpbInByZXNlbmNlIiwiUHJlc2VuY2UiLCJjbGllbnRJZCIsImJyb3dzaW5nVGltZXN0YW1wIiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsIm5vdyIsInVwZGF0ZVZpZGVvVGltZXN0YW1wcyIsImdldFRpbWVzdGFtcHMiLCJ0aW1lc3RhbXBGcm9tRm9ybWF0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwidGV4dENvbnRlbnQiLCJvbiIsImFzeW5jIiwicHJlc2VuY2VEYXRhIiwibGFyZ2VJbWFnZUtleSIsInN0YXJ0VGltZXN0YW1wIiwidHlwZSIsInBhdGhuYW1lIiwiaHJlZiIsInNlYXJjaCIsImxvY2F0aW9uIiwicHJpdmFjeU1vZGUiLCJnZXRTZXR0aW5nIiwiZGV0YWlscyIsInN0YXRlIiwic21hbGxJbWFnZUtleSIsInNtYWxsSW1hZ2VUZXh0Iiwic3RhcnRzV2l0aCIsImVuZHNXaXRoIiwiaW5jbHVkZXMiLCJidXR0b25zIiwibGFiZWwiLCJ1cmwiLCJkZXRhIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImRldGFsIiwiSlNPTiIsInBhcnNlIiwidG9waWMiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiZW5kVGltZXN0YW1wIiwidXJsUGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwiaGFzIiwiZ2V0Iiwic2V0QWN0aXZpdHkiXSwic291cmNlUm9vdCI6IiJ9
undefined;