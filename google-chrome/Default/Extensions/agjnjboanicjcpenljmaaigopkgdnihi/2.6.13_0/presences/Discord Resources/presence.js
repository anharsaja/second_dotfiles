var __webpack_exports__={};const presence=new Presence({clientId:"973710731549745152"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/D/Discord%20Resources/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:s,search:t}=window.location;switch(!0){case s.includes("/resources/"):e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/D/Discord%20Resources/assets/1.png",e.smallImageText="Wiki",e.details="Reading a wiki page",e.state=document.title.split("|")[0],e.buttons=[{label:"Read Page",url:location.href}];break;case s.includes("/blog"):if(e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/D/Discord%20Resources/assets/2.png",e.smallImageText="Blog","Blog | Discord Resources"===document.title)e.details="Viewing the main page";else if(s.includes("/tags/")){const t=s.split("/");e.details="Looking for posts tagged with:",e.state=`"${t[t.length-1]}"`}else e.details="Reading a Post",e.state=document.title.split("|")[0],e.buttons=[{label:"Read Post",url:location.href}];break;case"/search"===s:e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText="Searching...",t?(e.details="Searching for:",e.state=document.querySelector("#__docusaurus > div.main-wrapper > div > h1").textContent.split("Search results for ")[1]):e.details="Searching for something...";break;default:e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/D/Discord%20Resources/assets/3.png",e.smallImageText="Unknown",e.details="Viewing an unsupported page"}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;