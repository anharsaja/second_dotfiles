var __webpack_exports__={};const presence=new Presence({clientId:"1034133591938060298"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/G/Google%20Earth/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t}=window.location;if("/web/"===t)e.details="Loading";else{const o=document.querySelector("earth-app").shadowRoot,r=o.querySelector("earth-knowledge-card"),a=o.querySelector("paper-drawer-panel"),i=a.querySelector("earth-drawer").shadowRoot,s=o.querySelector("earth-top-toolbar").shadowRoot,l=document.querySelector("earth-image-lightbox"),n=o.querySelector("earth-voyager"),c=a.querySelector("earth-measure-tool").shadowRoot,d=o.querySelector("earth-balloon-fullscreen");if(t.startsWith("/web/search/")&&o.querySelector("earth-toolbar").shadowRoot.querySelector("#search").hasAttribute("active"))e.details="Searching",e.state=i.querySelector("earth-search").shadowRoot.querySelector("app-header-layout").querySelector("earth-omnibox").shadowRoot.querySelector("iron-input > input").value;else if("true"!==r.getAttribute("hidden")){const t=r.shadowRoot.querySelector("#top-card").shadowRoot;e.details="Looking at a location",e.state=`${t.querySelector("#title").textContent} - ${t.querySelector("#known-for").textContent}`}else if(r.hasAttribute("expanded")){const t=document.querySelector("earth-expanded-card").shadowRoot.querySelector("app-header-layout").querySelector("#card-content");e.details="Viewing more information about a location",e.state=`${t.querySelector("#title").textContent} - ${t.querySelector("#known-for").textContent}`}else switch(s.querySelector("#navigation-action").getAttribute("action")){case"USER_ACTION_NAVIGATION_BACK_VOYAGER_FEED_ITEM":e.details="Viewing a Voyager Feed",e.state=s.querySelector("#toolbar-title").textContent;break;case"USER_ACTION_NAVIGATION_BACK_PLAY_MODE":e.details="Viewing a project presentation",e.state=s.querySelector("#project-title").textContent;break;case"USER_ACTION_NAVIGATION_BACK_STREET_VIEW":e.details="Viewing Street View",e.state=s.querySelector("app-toolbar").getAttribute("aria-label");break;default:if(l&&"none"!==l.style.display)e.details="Viewing a photo",e.largeImageKey=l.shadowRoot.querySelector("#image").shadowRoot.querySelector("#sizedImgDiv").style.backgroundImage.match(/url\("(.+)"\)/)[1];else if(n.hasAttribute("enabled")&&"none"!==n.style.display)e.details="Browsing Voyager";else if(d&&"none"!==d.style.display)e.details="Preparing Voyager";else if("true"!==c.querySelector("#card").getAttribute("hidden"))e.details="Measuring a distance",e.state=c.querySelector("#formatted-distance").textContent;else if(o.querySelector("earth-toolbar").shadowRoot.querySelector("#projects").hasAttribute("active")){const t=i.querySelector("earth-my-places").shadowRoot,o=t.querySelector("earth-document-view"),r=t.querySelector("earth-property-editor");"true"!==o.getAttribute("hidden")?(e.details="Viewing a project",e.state=o.shadowRoot.querySelector("#title").textContent):"true"!==r.getAttribute("hidden")?(e.details="Adding something to a project",e.state=r.shadowRoot.querySelector("#content-panel").shadowRoot.querySelector(".title-input").shadowRoot.querySelector("#input").value):e.details="Browsing their projects"}else e.details="Looking at a point on the map",e.state=o.querySelector("earth-view-status").shadowRoot.querySelector("#pointer-coordinates").textContent.trim()}}presence.info(e.details),e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;