var __webpack_exports__={};const presence=new Presence({clientId:"1211027222815711282"});let videoData;presence.on("iFrameData",(e=>{videoData=e})),presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/A/AnimeDrive/assets/0.png"},{pathname:t,search:a}=document.location;switch(t){case"/":e.details="Főoldal Böngészése";break;case"/search/":e.details="Anime Keresése";break;case"/anime/":if(a.startsWith("?id=")){const t=a.split("?id=")[1].split("&")[0],s=document.querySelector(".col-sm-12.col-md-8.col-lg-9"),i=s?s.querySelector("h2"):null,n=s?s.querySelector("h4"):null;n&&n.textContent.trim()||i&&i.textContent.trim()?(e.details="Adatlap böngészése:",e.state=`${i.textContent.trim()}`):(e.details="Adatlap böngészése:",e.state=`ID: ${t}`),e.buttons=[{label:"Adatlap",url:`https://animedrive.hu/anime/?id=${t}`}]}else e.details="Anime Böngészése";break;case"/watch/":if(a.startsWith("?id=")){const t=a.split("?id=")[1].split("&")[0],s=document.querySelector('a.text-white[href^="https://animedrive.hu/anime/?id="]'),i=s?s.querySelector("h2"):null,n=document.querySelector("a.nk-pagination-current-white");if(i&&i.textContent.trim()?(e.details=`${i.textContent.trim()}`,e.state=`${n.textContent.match(/\d+/)[0]}. rész`):(e.details="Adatlap böngészése:",e.state=`ID: ${t}`),e.buttons=[{label:"Lejátszás",url:`https://animedrive.hu/watch/?id=${t}&ep=${n.textContent.match(/\d+/)[0]}`}],videoData&&(e.smallImageKey=videoData.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=videoData.paused?"Szünet":"Néz",!videoData.paused)){const[t,a]=presence.getTimestamps(videoData.currentTime,videoData.duration);[e.startTimestamp,e.endTimestamp]=[t,a]}}else e.details="Anime Nézése";break;default:e.details="AnimeDrive Böngészése"}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;