var __webpack_exports__={};const presence=new Presence({clientId:"619561001234464789"}),browsingStamp=Math.floor(Date.now()/1e3);let search,recentlyCleared=0;async function getStrings(){return presence.getStrings({play:"general.playing",pause:"general.paused",featured:"spotify.featured",bestPodcasts:"spotify.bestPodcasts",charts:"spotify.charts",genres:"spotify.genres",latest:"spotify.latest",discover:"spotify.discover",browse:"spotify.browse",podcastLike:"spotify.podcastsLike",artistLike:"spotify.artistsLike",albumLike:"spotify.albumLike",songLike:"spotify.songsLike",forMeh:"spotify.madeForYou",playlist:"spotify.playlists",viewPlaylist:"general.viewPlaylist",download:"spotify.download",viewing:"general.viewing",account:"general.viewAccount",search:"general.search",searchFor:"general.searchFor",searchSomething:"general.searchSomething",browsing:"general.browsing",listening:"general.listeningMusic",show:"general.viewShow",artist:"general.buttonViewArtist",viewPodcast:"general.buttonViewPodcast",buttonViewPlaylist:"general.buttonViewPlaylist",viewHome:"general.viewHome",viewPage:"general.buttonViewPage"},await presence.getSetting("lang").catch((()=>"en")))}let strings,oldLang=null;presence.on("UpdateData",(async()=>{let e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/S/Spotify%20Podcasts/assets/logo.png",type:2};const[t,s,i,a,r]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("timestamps"),presence.getSetting("cover"),presence.getSetting("buttons")]),{href:n,pathname:o,hostname:l}=document.location;oldLang===t&&strings||(oldLang=t,strings=await getStrings());const c={"/browse/featured":{details:strings.browse,state:strings.featured,buttons:[{label:strings.viewPage,url:n}]},"/browse/podcasts":{details:strings.browse,state:strings.bestPodcasts,buttons:[{label:strings.viewPage,url:n}]},"/browse/charts":{details:strings.charts,buttons:[{label:strings.viewPage,url:n}]},"/browse/genres":{details:strings.browse,state:strings.genres,buttons:[{label:strings.viewPage,url:n}]},"/browse/latest":{details:strings.browse,state:strings.latest,buttons:[{label:strings.viewPage,url:n}]},"/browse/discover":{details:strings.discover,buttons:[{label:strings.viewPage,url:n}]},"/collection/playlists":{details:strings.browse,state:strings.playlist,buttons:[{label:strings.viewPage,url:n}]},"/collection/made-for-you":{details:strings.browse,state:strings.forMeh,buttons:[{label:strings.viewPage,url:n}]},"/collection/tracks":{details:strings.browse,state:strings.songLike,buttons:[{label:strings.viewPage,url:n}]},"/collection/albums":{details:strings.browse,state:strings.albumLike,buttons:[{label:strings.viewPage,url:n}]},"/collection/artists":{details:strings.browse,state:strings.artistLike,buttons:[{label:strings.viewPage,url:n}]},"/collection/podcasts":{details:strings.browse,state:strings.podcastLike,buttons:[{label:strings.viewPage,url:n}]},"/collection/episodes":{details:strings.browse,state:"my episodes",buttons:[{label:strings.viewPage,url:n}]},"/setting":{details:strings.account,buttons:[{label:strings.viewPage,url:n}]}},g=document.querySelector(":is(a[data-testid=cover-art-link], a[data-testid=context-link])");for(const[t,s]of Object.entries(c))o.includes(t)&&(e={...e,...s});let d=!1;if(g&&/\/(show|episode)\/|your-episodes\?/.test(g.href)){const t="Play"===document.querySelector("[data-testid=control-button-playpause]").getAttribute("aria-label");e.smallImageKey=t?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=t?strings.pause:strings.play,[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(document.querySelector('[data-testid="playback-position"]').textContent),presence.timestampFromFormat(document.querySelector('[data-testid="playback-duration"]').textContent)),!t&&i||(delete e.startTimestamp,delete e.endTimestamp),a&&(e.largeImageKey=g.querySelector("img").src),e.details=document.querySelector(":is(a[nowplaying-track-link], a[data-testid=context-item-link")?.textContent,e.state=document.querySelector(":is(div[data-testid=track-info-artists], a[data-testid=context-item-info-show]")?.textContent,e.buttons=[{label:strings.viewPodcast,url:n}],s&&(e.details=strings.listening,delete e.state)}else{switch(i&&(e.startTimestamp=browsingStamp),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.smallImageText=strings.browsing,l){case"open.spotify.com":if("/"===o)e.details=strings.viewHome;else if(o.includes("/search/"))search=document.querySelector("input"),d=!0,e.details=strings.searchFor,e.state=search.value,search.value.length<=3&&(e.state="something..."),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png";else if(o.includes("/search"))d=!0,e.details=strings.search,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png";else if(o.includes("/playlist/")){const t=document.querySelector("div.Ws8Ec3GREpT5PAUesr9b > div > img.mMx2LUixlnN_Fu45JpFB")?.getAttribute("src");e.details=strings.viewPlaylist,e.state=document.querySelector("div.RP2rRchy4i8TIp1CTmb7 > span.rEN7ncpaUeSGL9z0NGQR > h1")?.textContent,e.buttons=[{label:strings.buttonViewPlaylist,url:n}],t&&(e.largeImageKey=t,e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/S/Spotify%20Podcasts/assets/logo.png")}else o.includes("/show/")&&(e.details=strings.show,e.state=document.querySelector("div.RP2rRchy4i8TIp1CTmb7 > span.rEN7ncpaUeSGL9z0NGQR > h1 > span")?.textContent,e.largeImageKey=document.querySelector("div.klz_XuZpllvTMzpJF1gw > div > img.mMx2LUixlnN_Fu45JpFB")?.getAttribute("src"),e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/S/Spotify%20Podcasts/assets/logo.png",e.buttons=[{label:strings.artist,url:n}]);break;case"accounts.spotify.com":o.includes("/login")&&(e.details="Logging in");break;case"support.spotify.com":case"investors.spotify.com":e.details=strings.browse,e.state="Support Center";break;case"developer.spotify.com":e.details=strings.browse,e.state="Spotify for Developers";break;case"artists.spotify.com":e.details=strings.browse,e.state="Spotify for Artists";break;case"newsroom.spotify.com":e.details=strings.browse,e.state="Spotify for Newsroom";break;case"podcasters.spotify.com":e.details=strings.browse,e.state="Spotify for Podcasters";break;case"www.spotify.com":o.includes("/premium")?(e.details=strings.viewing,e.state="Spotify Premium",delete e.smallImageKey):o.includes("/download")?(e.details=strings.download,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/downloading.png"):o.includes("/account")&&(e.details=strings.account,delete e.smallImageKey)}const t=document.querySelector("div.player-controls__buttons > button");null!==document.querySelector(".now-playing-bar-hidden")||null===t||"control-button-play"===t.dataset.testid?e.details?s?(d?(e.details=strings.searchSomething,delete e.state):(e.details=strings.browsing,delete e.state,delete e.smallImageKey),presence.setActivity(e)):presence.setActivity(e):presence.setActivity():(recentlyCleared<Date.now()-1e3&&presence.clearActivity(),recentlyCleared=Date.now())}!r&&e.buttons&&delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;