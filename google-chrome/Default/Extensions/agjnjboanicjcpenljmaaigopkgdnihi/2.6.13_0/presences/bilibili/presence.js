var __webpack_exports__={};const presence=new Presence({clientId:"639591760791732224"}),browsingTimestamp=Math.floor(Date.now()/1e3),urlpath=document.location.pathname.split("/");let uploader,uploaderName,uploaderLink,title,video,videoPaused,currentTime,duration,timestamps;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/B/bilibili/assets/logo.png"},t=await presence.getSetting("privacy");async function i(){video=document.querySelector("bpx-player-container"),video?(videoPaused=null===document.querySelector(".bpx-state-paused"),currentTime=presence.timestampFromFormat(document.querySelector(".bpx-player-ctrl-time-current").textContent),duration=presence.timestampFromFormat(document.querySelector(".bpx-player-ctrl-time-duration").textContent),timestamps=presence.getTimestamps(currentTime,duration)):(video=document.querySelector("video"),videoPaused=video.paused,timestamps=presence.getTimestampsfromMedia(video)),[e.startTimestamp,e.endTimestamp]=timestamps,e.smallImageKey=videoPaused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",videoPaused&&(delete e.startTimestamp,delete e.endTimestamp)}async function a(){t?e.details="Watching a video":(i(),document.querySelector("div.membersinfo-normal")?(uploader=document.querySelector(".staff-name"),uploaderName=`${uploader.textContent.trim()} + ${parseInt(document.querySelector(".staff-amt").textContent.trim().replaceAll("äºº",""))-1} more`):(uploader=document.querySelector(".up-name"),uploaderName=uploader.textContent.trim()),uploaderLink=uploader.getAttribute("href"),title=document.querySelector(".video-title"),e.details=title.getAttribute("title"),e.state=uploaderName,e.buttons=[{label:"Watch Video",url:`https://www.bilibili.com/video/${urlpath[2]}`},{label:"View Space",url:`https:${uploaderLink}`}])}switch(document.location.hostname){case"www.bilibili.com":switch(urlpath[1]){case"video":a();break;case"opus":if(t){e.details="Viewing a tweet";break}e.details=`Viewing ${document.querySelector(".opus-module-author__name").textContent.trim()}'s tweet`,e.buttons=[{label:"View Tweet",url:`https://www.bilibili.com/opus/${urlpath[2]}`}],e.startTimestamp=browsingTimestamp;break;case"read":if(t){e.details="Reading an article";break}e.details=document.querySelector(".title").textContent.trim(),e.state=document.querySelector(".up-name").textContent.trim(),e.buttons=[{label:"Read Article",url:`https://www.bilibili.com/read/${urlpath[2]}`}];break;case"list":if(t){e.details="Watching a playlist";break}if("watchlater"===urlpath[2]){a();break}i(),e.details=document.querySelector(".list-title").textContent.trim(),e.state=document.querySelector(".video-title").textContent.trim(),e.buttons=[{label:"View Playlist",url:`https://www.bilibili.com/list/${urlpath[2]}`},{label:"Watch Video",url:`https:${document.querySelector(".video-title-href").getAttribute("href")}`}];break;default:e.startTimestamp=browsingTimestamp,e.details="Viewing the homepage"}break;case"space.bilibili.com":uploader=document.querySelector("#h-name"),e.details="User's space",e.state=`${uploader.textContent} | UID:${urlpath[1]}`,e.buttons=[{label:"View Space",url:`https://space.bilibili.com/${urlpath[1]}`}];break;case"t.bilibili.com":e.details="Viewing tweets",e.startTimestamp=browsingTimestamp;break;case"message.bilibili.com":e.details="Viewing messages",e.startTimestamp=browsingTimestamp;break;case"live.bilibili.com":null===document.querySelector(".small-title")?e.details=document.querySelector(".smaller-title").textContent.trim():null===document.querySelector(".smaller-title")&&(e.details=document.querySelector(".small-title").textContent.trim()),e.state=document.querySelector(".room-owner-username").textContent.trim(),e.buttons=[{label:"Watch Stream",url:`https://live.bilibili.com/${urlpath[1]}`}];break;case"search.bilibili.com":if(t){e.details="Searching for something";break}e.details=`Searching for ${document.querySelector(".search-input-el").getAttribute("value")}`,e.state=`Browsing ${document.querySelector(".vui_tabs--nav-item-active").textContent} Category`,e.startTimestamp=browsingTimestamp}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;