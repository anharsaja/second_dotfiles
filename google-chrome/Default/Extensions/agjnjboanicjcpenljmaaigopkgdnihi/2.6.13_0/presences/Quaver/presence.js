var __webpack_exports__={};const presence=new Presence({clientId:"897489206199324713"}),browsingTimestamp=Math.floor(Date.now()/1e3),keys={"4K":"https://cdn.rcd.gg/PreMiD/websites/Q/Quaver/assets/0.png","7K":"https://cdn.rcd.gg/PreMiD/websites/Q/Quaver/assets/1.png"};presence.on("UpdateData",(async()=>{const[e,t,a,s]=await Promise.all([presence.getSetting("time"),presence.getSetting("smallImage"),presence.getSetting("cover"),presence.getSetting("buttons")]),r={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/Q/Quaver/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:l,href:i}=document.location;switch(l.split("/")[1]){case"":r.details="Viewing homepage";break;case"mapset":if("ranking"!==l.split("/")[3]){const e=document.querySelector(".container .dropdown button").textContent.trim().match(/\[(..)\] ([0-9.]+ - .*)/);t&&(r.smallImageKey=keys[e[1]],r.smallImageText=e[2])}r.details=document.querySelector("h1").firstChild.textContent.trim(),r.state=`Created by: ${document.querySelector(".card-body a").textContent.trim()}`,a&&(r.largeImageKey=document.querySelector(".background")),r.buttons=[{label:"View Mapset",url:i},{label:"View Creator",url:document.querySelector(".card-body a").href}];break;case"mapsets":r.details="Viewing ranking queue",t&&"All"!==document.querySelector("[class*='active-keys']").textContent.trim()&&(r.smallImageKey=keys[document.querySelector("[class*='active-keys']").textContent.trim().replace("eys","").replace(" ","")],r.smallImageText=document.querySelector("[class*='active-keys']").textContent.trim());break;case"maps":r.details="Browsing maps";break;case"user":r.details="Viewing profile",r.state=document.querySelector("#user-card .text-white"),a&&(r.largeImageKey=document.querySelector(".avatar-thumbnail img")),t&&(r.smallImageKey=document.querySelector("#user-card img")),r.buttons=[{label:"View Profile",url:i}];break;case"leaderboard":switch(l.split("/")[2]??""){case"":r.details="Browsing leaderboard",t&&(r.smallImageKey=keys[document.querySelector("[class*='active-keys']").textContent.trim().replace("eys","").replace(" ","")],r.smallImageText=document.querySelector("[class*='active-keys']").textContent.trim());break;case"hits":r.details="Browsing hits leaderboard";break;case"multiplayer":r.details="Browsing multiplayer leaderboard",t&&(r.smallImageKey=keys[document.querySelector("[class*='active-keys']").textContent.trim().replace("eys","").replace(" ","")],r.smallImageText=document.querySelector("[class*='active-keys']").textContent.trim());break;case"countries":r.details="Browsing country leaderboard";break;default:r.details=l.split("/")[1],r.state=l.split("/")[2]}break;case"playlist":r.details=document.querySelector("h1").textContent.trim(),r.state=document.querySelector(".card-block a[href='']").parentElement,a&&(r.largeImageKey=document.querySelector(".card .image img")),r.buttons=[{label:"View Playlist",url:i}];break;case"playlists":r.details="Browsing playlists";break;case"multiplayer":switch(l.split("/")[2]){case"games":r.details="Browsing multiplayer games";break;case"game":r.details="Viewing multiplayer game",r.state=document.querySelector("h1").textContent.trim().replace("Multiplayer - ",""),r.buttons=[{label:"View Game",url:i}]}break;case"docs":r.details="Viewing wiki",r.state=document.querySelector("h1").textContent.trim();break;case"team":r.details="Viewing Quaver team";break;default:r.details=l.split("/")[1]}e||delete r.startTimestamp,!s&&r.buttons&&delete r.buttons,presence.setActivity(r)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;