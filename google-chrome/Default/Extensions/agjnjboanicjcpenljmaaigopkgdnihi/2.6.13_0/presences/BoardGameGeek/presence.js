var __webpack_exports__={};const presence=new Presence({clientId:"1194078283919274004"}),slideshow=presence.createSlideshow();let oldPath=document.location.pathname,browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/B/BoardGameGeek/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t,href:a,search:s}=document.location,i=t.split("/").filter(Boolean);oldPath!==t&&(oldPath=t,browsingTimestamp=Math.floor(Date.now()/1e3),slideshow.deleteAllSlides());let r=!1;switch(i[0]??"/"){case"/":e.details="Browsing the homepage";break;case"blog":if("create"===i[1]){e.details="Creating a new blog";break}e.details="Viewing a blog",e.state=document.querySelector(".post_title > a"),e.buttons=[{label:"View Blog",url:a}];break;case"blogs":"myblogs"===i[1]?e.details="Viewing their blogs":e.details="Browsing blogs";break;case"blogpost":{const t=document.querySelector(".post_title > a");e.largeImageKey=document.querySelector("meta[property='og:image']").content,e.details="Reading a blog post",e.state=t,e.buttons=[{label:"Read Post",url:t}];break}case"boardgame":{const t=document.querySelector("h1 > a"),s=t.textContent.trim();switch(e.largeImageKey=document.querySelector(".game-header-image img"),e.buttons=[{label:"View Game",url:t}],i[3]){case"credits":e.details=`Viewing credits for '${s}'`;break;case"expansions":{const t=document.querySelectorAll("linked-items-module .summary-item");e.details=`Viewing expansions for '${s}'`;for(const a of t){const t=a.querySelector(".summary-item-title > a"),s=a.querySelector(".rating-media-overlay"),i={...e,largeImageKey:a.querySelector(".media img"),state:t,smallImageKey:"https://cdn.rcd.gg/PreMiD/websites/B/BoardGameGeek/assets/0.png",smallImageText:`Rating: ${s.childNodes[2].textContent.trim()} (${s.getAttribute("uib-tooltip")})`};i.buttons.push({label:"View Expansion",url:t}),slideshow.addSlide(t.href,i,5e3)}t.length&&(r=!0);break}case"files":e.details=`Viewing files for '${s}'`,e.buttons.push({label:"View Files",url:a});break;case"forums":e.details=`Viewing forums for '${s}'`,e.state=document.querySelector("forums-module h3 span").childNodes[2];break;case"geeklist":{e.details="Viewing a GeekList",e.state=document.querySelector("header h2"),e.buttons=[{label:"View GeekList",url:a}],slideshow.addSlide(a,e,5e3);const t=document.querySelectorAll("gg-geeklist-items-by-geeklist gg-geeklist-item .geeklist-item");for(const e of t){const t=e.querySelector("h2 a"),i={details:`Viewing a GeekList item - ${s}`,state:t,largeImageKey:e.querySelector("gg-image img"),smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/question.png",smallImageText:t,buttons:[{label:"View GeekList",url:a},{label:"View Item",url:t}]};slideshow.addSlide(t.href,i,5e3)}r=!0;break}case"geeklists":{e.details=`Viewing GeekLists for '${s}'`;const t=document.querySelectorAll("geeklists-module .summary-item");for(const a of t){const t=a.querySelector(".summary-item-title > a"),s={...e,state:t};s.buttons.push({label:"View GeekList",url:t}),slideshow.addSlide(t.href,s,5e3)}t.length&&(r=!0);break}case"images":{const t=document.querySelectorAll("images-module .summary-image-item");e.details=`Viewing images for '${s}'`;for(const a of t){const t=a.querySelector(".summary-image-thumbnail"),s={...e,largeImageKey:t.querySelector("img"),smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/question.png",smallImageText:a.querySelector(".summary-item-title")};s.buttons.push({label:"View Image",url:t}),slideshow.addSlide(t.href,s,5e3)}t.length&&(r=!0);break}case"marketplace":e.details=`Viewing stores for '${s}'`;break;case"mentions":e.details=`Viewing mentions for '${s}'`;break;case"mygames":e.details=`Viewing their collections for '${s}'`;break;case"ratings":{const t=document.querySelectorAll("ratings-module ul > li");e.details=`Viewing ratings for '${s}'`;for(const a of t){let t=a.querySelector(".summary-item-callout").textContent.trim();a.querySelector(".comment-body span").textContent&&(t+=` - ${a.querySelector(".comment-body span").textContent.trim()}`);const s=a.querySelector(".comment-header-user").textContent.trim(),i={...e,state:t,smallImageKey:a.querySelector(".avatar")??"https://cdn.rcd.gg/PreMiD/resources/question.png",smallImageText:s};slideshow.addSlide(s,i,5e3)}t.length&&(r=!0);break}case"recommendations":e.details=`Viewing recommendations for '${s}'`;break;case"sleeves":e.details=`Viewing sleeves for '${s}'`;break;case"stats":{e.details=`Viewing stats for '${s}'`;const t=document.querySelectorAll(".game-stats .panel");for(const a of t){const t=a.querySelectorAll(".outline-item");for(const s of t){const t=s.querySelector(".outline-item-title").textContent.trim(),i={...e,state:`${a.querySelector("h3").textContent.trim()}: ${t} - ${s.querySelector(".outline-item-description").textContent.trim()}`};slideshow.addSlide(t,i,5e3)}}r=!0;break}case"tags":e.details=`Viewing tags for '${s}'`;break;case"trading":e.details=`Viewing trades for '${s}'`;break;case"versions":{e.details=`Viewing versions for '${s}'`;const t=document.querySelectorAll("linked-items-module .summary-item-title > a");for(const a of t){const t={...e,state:a};t.buttons.push({label:"View Version",url:a}),slideshow.addSlide(a.href,t,5e3)}t.length&&(r=!0);break}case"videos":{const t=document.querySelectorAll("videos-module .summary-video-item");e.details=`Viewing videos for '${s}'`;for(const a of t){const t=a.querySelector(".summary-video-thumbnail"),s={...e,largeImageKey:t.querySelector("img"),smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/question.png",smallImageText:a.querySelector(".summary-item-title")};s.buttons.push({label:"View Video",url:t}),slideshow.addSlide(t.href,s,5e3)}t.length&&(r=!0);break}case"wiki":e.details=`Viewing the wiki for '${s}'`,e.buttons.push({label:"View Wiki",url:a});break;default:e.details="Viewing a game",e.state=`${s} - ${t.closest("div").querySelector("p").textContent.trim()}`,e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/B/BoardGameGeek/assets/0.png",e.smallImageText=`Rating: ${document.querySelector("overall-rating [ng-show=showRating]").textContent.trim()}`}break}case"browse":e.details="Browsing games";break;case"collection":e.details="Viewing a game collection",e.buttons=[{label:"View Collection",url:a}];break;case"fan":e.details="Viewing fan items";break;case"files":e.details="Browsing files";break;case"findgamers.php":case"map":case"searchform":case"users.php":e.details="Searching users";break;case"forums":"search"===i[1]?e.details="Searching the forums":i[1]?(e.details="Browsing a forum section",e.state=document.querySelector("header h2"),e.buttons=[{label:"View Forum",url:a}]):e.details="Browsing forums";break;case"geekaccount":e.details="Managing their account";break;case"geekaccount.php":e.details="Managing their profile";break;case"geekbuddy.php":e.details="Managing their GeekBuddy";break;case"geekcentral":e.details="Managing their GeekCentral";break;case"geeklist":if("new"===i[1])e.details="Creating a GeekList";else{e.details="Viewing a GeekList",e.state=document.querySelector("header h2"),e.buttons=[{label:"View GeekList",url:a}];const t=document.querySelectorAll("gg-geeklist-items-by-geeklist gg-geeklist-item .geeklist-item");for(const a of t){const t=a.querySelector("h2 a"),s={...e,smallImageKey:a.querySelector("gg-image img"),smallImageText:t};s.buttons.push({label:"View Item",url:t}),slideshow.addSlide(t.href,s,5e3)}r=!0}break;case"geeklists":switch(i[1]){case"bookmarks":e.details="Viewing their bookmarked GeekLists";break;case"mylists":e.details="Viewing their GeekLists";break;default:e.details="Browsing GeekLists"}break;case"geekmail":e.details="Browsing their GeekMail";break;case"geekpreview":{const t=document.querySelector(".geekpreview-header-info h1"),s=document.querySelector(".geekpreview-header-logo img");e.details="Viewing a GeekPreview",e.state=t,e.largeImageKey=s,e.buttons=[{label:"View GeekPreview",url:a}],slideshow.addSlide(a,e,5e3);const i=document.querySelectorAll("geekpreview-singleitem");for(const e of i){const i=e.querySelector(".geekpreview-item-inner-info-header-title a"),r={details:`Viewing a GeekPreview item - ${t.textContent.trim()}`,state:i,largeImageKey:e.querySelector(".geekpreview-item-inner-cover img"),smallImageKey:s,smallImageText:t,buttons:[{label:"View GeekPreview",url:a},{label:"View Item",url:i}]};slideshow.addSlide(i.href,r,5e3)}r=!0;break}case"geeksearch.php":e.details="Searching for a game",e.state=new URLSearchParams(s).get("q");break;case"geekwidget.php":e.details="Editing their GeekWidget";break;case"gonecardboard":e.details="Viewing Gone Cardboard listings";break;case"image":e.details="Viewing an image",e.smallImageKey=document.querySelector("gg-image-nav img"),e.buttons=[{label:"View Image",url:a}];break;case"images":{e.details="Browsing images";const t=document.querySelectorAll("gg-image-browser gg-image img");for(const a of t)slideshow.addSlide(a.src,{...e,largeImageKey:a},5e3);r=!0;break}case"item":e.details="Creating an item";break;case"guild":{const t=()=>{e.details="Viewing a guild",e.state=document.querySelector("#name"),e.buttons=[{label:"View Guild",url:a}]};if(isNaN(+i[1]))switch(i[2]){case"category":e.details="Viewing a guild category",e.state=i[i.length-1];break;case"home":e.details="Browsing guild categories";break;case"list":e.details="Browsing guilds";break;case"view":t()}else t();break}case"market":switch(i[1]){case"browse":{const t=document.querySelector("h3").childNodes[0];e.details="Browsing a product",e.state=t,e.smallImageKey=document.querySelector(".thumbnail"),e.smallImageText=t;break}case"product":e.details="Viewing a product",e.state=document.querySelector("table tr:first-child td:last-child");break;case"search":e.details="Searching the marketplace",e.state=new URLSearchParams(s).get("q");break;default:e.details="Browsing the marketplace"}break;case"microbadge":switch(i[1]){case"edit":e.details="Editing their microbadges";break;case"browse":e.details="Browsing microbadges";break;default:e.details="Viewing a microbadge",e.state=document.querySelector("table td:nth-child(2) > table td:nth-child(2)"),e.smallImageKey=document.querySelector("h2 img"),e.smallImageText=document.querySelector("table td:nth-child(2) > table tr:nth-child(2) td:nth-child(2)")}break;case"microbadges":e.details="Browsing microbadges";break;case"play":{const t=document.querySelector(".go_thumbnail");e.details="Viewing a play",e.state=`${document.querySelector(".username a").textContent.trim()} - ${t.nextElementSibling.textContent.trim()}`,e.largeImageKey=t.querySelector("img"),e.buttons=[{label:"View Play",url:a},{label:"View Game",url:t.nextElementSibling}];break}case"plays":e.details="Viewing a user's plays",e.state=document.querySelector(".username a"),e.buttons=[{label:"View Plays",url:a}];break;case"previews":e.details="Browsing previews";break;case"quickbar":e.details="Managing their QuickBar";break;case"recentadditions":e.details="Viewing recent additions";break;case"subscriptions":e.details="Viewing their subscriptions";break;case"tag":e.details="Viewing a tag",e.state=document.querySelector(".tagtitle a"),e.buttons=[{label:"View Tag",url:a}];break;case"tags":e.details="Browsing tags";break;case"thread":e.details="Viewing a thread",e.state=document.querySelector(".forum-header a"),e.buttons=[{label:"View Thread",url:a}];break;case"threads":switch(i[1]){case"bookmarks":e.details="Viewing their bookmarked threads";break;case"new":e.details="Creating a new thread";break;case"region":e.details="Browsing threads";break;case"reviews":e.details="Viewing reviews";break;case"sessions":e.details="Viewing game sessions"}break;case"user":{const t=document.querySelector(".avatarblock img[data-overtexttype=avatarovertext]");e.details=`Viewing a user's ${document.querySelector(".menu_table .tabOn").textContent.trim()}`,e.state=document.querySelector(".username a"),e.buttons=[{label:"View User",url:a}],t&&(e.smallImageKey=t);break}case"users":e.details="Browsing users";break;case"wiki":e.details="Viewing the wiki",e.state=document.querySelector(".wiki h2")}r?presence.setActivity(slideshow):e.details?presence.setActivity(e):presence.clearActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;