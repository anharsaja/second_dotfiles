var __webpack_exports__={};const presence=new Presence({clientId:"846385772688834591"}),boardTypeMapping={w:"Reading",acl:"View ACl",diff:"View Difference",history:"View History",backlink:"View Backlink",contribution:"View Contribution",Policy:"View Policy",Search:"Searching",edit:"Editing",move:"Move Document",delete:"Delete Confirm",new_edit_request:"Create New Edit Request",discuss:"Dicsussing",thread:"View Discuss",edit_request:"Edit Request",RecentDiscuss:"View Recent Discuss",RecentChanges:"View Recent Changes",NeededPages:"View Needed Pages",OrphanedPages:"View Orphaned Pages",UncategorizedPages:"View Uncategorized Pages",OldPages:"View Old Pages",ShortestPages:"View Shortest Pages",LongestPages:"View Longest Pages",BlockHistory:"View Block History",RandomPage:"View Random Page",Upload:"Upload file",License:"View License"},validateMembershipUrl=/\/member\/(.+)/,membersMapping={login:"Login",recover_password:"Recover Password",signup:"Sign Up",mypage:"My Page",change_email:"Change Email",change_password:"Change Password",activate_otp:"Activate OTP"},changesMapping={all:"All Changes",create:"Created Documents",delete:"Deleted Documents",move:"Moved Documents",revert:"Reverted Documents"},discussMapping={normal_thread:"Normal Thread",old_thread:"Old Thread",closed_thread:"Closed Thread",open_editrequest:"Opened Edit Request",accepted_editrequest:"Accepted Edit Request",closed_editrequest:"Closed Edit Request",old_editrequest:"Old Edit Request"},validateContributeUrl=/\/contribution\/(.+)\/(.+)\/(.+)/;let currentPage=document.location.pathname,currentTime=Date.now();presence.on("UpdateData",(async()=>{const e=await presence.getSetting("privacy"),t=await presence.getSetting("showTimestamp"),a=document.location.pathname,s=document.location.search,[,i]=a.split("/"),n=boardTypeMapping[i],r={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/N/namu.wiki/assets/logo.png"};r.details=n??"Unknown Action";let c=validateContributeUrl.exec(a);if(c)c="author"===c[1]?`User: ${c[2]}`:"IP User";else if(validateMembershipUrl.exec(a))c=validateMembershipUrl.exec(a),r.details="Member Page",c=membersMapping[c[1]];else switch(i){case"Search":c=getParam(s,"q"),0===c.length&&(c="Blank Query...");break;case"RecentDiscuss":c=discussMapping[getParam(s,"logtype")];break;case"RecentChanges":c=changesMapping[getParam(s,"logtype")];break;case"thread":case"edit_request":c=document.querySelector("h1 > a").textContent;break;default:c=n?decodeURI(a.substring(`/${i}/`.length)):null}if("w"===i&&(r.buttons=[{label:"View Page",url:document.location.href}]),c&&(r.state=c.length>128?`${c.slice(0,120)}...`:c),n){const t=document.querySelectorAll("#app > div > div > nav > ul > li > div > div > div");t[1].textContent.includes("Please login!")||(r.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/namu.wiki/assets/0.png",e||(r.smallImageText=t[0].textContent))}currentPage!==a&&(currentPage=a,currentTime=~~(Date.now()/1e3)),r.details?(t&&(r.startTimestamp=currentTime),presence.setActivity(r)):presence.setActivity()}));const getParam=(e,t)=>new URLSearchParams(e).get(t);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;