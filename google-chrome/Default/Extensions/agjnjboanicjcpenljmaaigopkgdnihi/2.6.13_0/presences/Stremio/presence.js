var __webpack_exports__={};const presence=new Presence({clientId:"969208766807547917"}),browsingTimestamp=Math.floor(Date.now()/1e3);var AppVersion;function getAppVersion(e){switch(e){case"web.strem.io":case"web.stremio.com":return AppVersion.V5;case"app.strem.io":return AppVersion.V4;default:return AppVersion.Website}}function _eval(e){return new Promise(((t,s)=>{try{const s="PreMiD_Stremio",n=document.createElement("script");window.addEventListener(s,(e=>{n.remove(),t(e.detail)}),{once:!0}),n.id=s,n.appendChild(document.createTextNode(`\n\t\t\t\tvar core = window.services.core;\n\t\t\t\tvar result = ${e};\n\t\t\t\t\n\t\t\t\tif (result instanceof Promise) {\n\t\t\t\t\tresult.then((awaitedResult) => {\n\t\t\t\t\t\twindow.dispatchEvent(new CustomEvent("${s}", { detail: awaitedResult }));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.dispatchEvent(new CustomEvent("${s}", { detail: result }));\n\t\t\t\t}\t\t\t\t\n\t\t\t`)),document.head.appendChild(n)}catch(e){s(e)}}))}function findVideo(e){const t=document.querySelector("video");if(t){const s={isEmbed:!1,isPaused:t.paused};return isNaN(t?.duration)||([s.startTimestamp,s.endTimestamp]=e.getTimestampsfromMedia(t)),s}if(document.querySelector("div[class*='player-container']")){const t={isEmbed:!0,isPaused:!!document.querySelector("div[class*='control-bar-button'] > svg[icon='ic_play']")},s=document.querySelector('[class*="seek-bar-container"]');return[t.startTimestamp,t.endTimestamp]=e.getTimestamps(Number(e.timestampFromFormat(s?.firstElementChild?.textContent)),Number(e.timestampFromFormat(s?.lastElementChild?.textContent))),t}return null}!function(e){e[e.Website=-1]="Website",e[e.V4=4]="V4",e[e.V5=5]="V5"}(AppVersion||(AppVersion={})),presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/S/Stremio/assets/0.png",startTimestamp:browsingTimestamp},{hash:t,hostname:s,pathname:n,href:i}=document.location,[a,r,o,c]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("thumbnails"),presence.getSetting("buttons"),presence.getSetting("search")]),l=getAppVersion(s);if(!a&&c){let t;t=l===AppVersion.V4?document.querySelector("#global-search-field"):document.querySelector("input[class*='search-input']");const s=t?.value;if(s)return e.details=`Searching for ${s}`,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",void presence.setActivity(e)}switch(l){case AppVersion.V4:case AppVersion.V5:{const s=findVideo(presence);if(a){e.details=null!==s?"Watching":"Browsing";break}switch(t.replace("#/","").split("/").shift().split("?").shift()){case"":e.details="Board",e.buttons=[{label:"View Board",url:i}];break;case"detail":if(l===AppVersion.V4){const t=document.querySelector("#detail > div:nth-child(3) > div > div.sidebar-info-container > div > div.logo > div")?.textContent;e.state=t,e.largeImageKey=document.querySelector("#detail > div.details-less-info > div.details-top > div:nth-child(1)")?.firstElementChild.getAttribute("src")??"https://cdn.rcd.gg/PreMiD/websites/S/Stremio/assets/0.png"}else{const t=document.querySelector("div[class*='meta-info-container'] > img[class*='logo']");e.largeImageKey=t?.getAttribute("src")??"https://cdn.rcd.gg/PreMiD/websites/S/Stremio/assets/0.png",e.state=t?.getAttribute("title")??document.querySelector("div[class*='logo-placeholder']:last-child")?.textContent}e.details=`Viewing a ${t.split("/")[2]}`,e.buttons=[{label:"View Metadata",url:i}];break;case"addons":{const t=document.querySelector(l===AppVersion.V4?"[class='ng-scope selected']":"div[class*='addons-content'] > div[class*='selectable-inputs-container'] > div:nth-child(2) > div")?.textContent,s=document.querySelector(l===AppVersion.V4?"[class='ng-binding ng-scope selected']":"div[class*='addons-content'] > div[class*='selectable-inputs-container'] > div:nth-child(3) > div")?.textContent;e.details=`Browsing ${t?.toLowerCase()?.replace(" addons","")} addons`,e.state=s??"All",e.buttons=[{label:"Browse Addons",url:i}];break}case"settings":{const t=document.querySelector(l===AppVersion.V4?"[class='ng-scope ng-binding active']":"div[class*='settings-content'] div[class*='selected']")?.textContent??"General";e.details=`${t} settings`,e.buttons=[{label:"View Settings",url:i}];break}case"discover":{const t=document.querySelector(l===AppVersion.V4?"[class='ng-binding ng-scope selected']":"div[class*='selectable-inputs-container'] > div:nth-child(1) > div")?.textContent?.toLowerCase(),s=document.querySelector(l===AppVersion.V4?"ul.sort > li.selected":"div[class*='selectable-inputs-container'] > div:nth-child(2) > div")?.textContent,n=document.querySelector(l===AppVersion.V4?"ul.genre-select > li.selected":"div[class*='selectable-inputs-container'] > div:nth-child(3) > div")?.textContent?.replace("Select genre","")||null;e.buttons=[{label:"Browse",url:i}],e.details=`Discovering ${t??"content"}${"series"===t?"":"s"}`,e.state=`${s??"All"}${n?` | ${n}`:""}`;break}case"library":{const t=document.querySelector(l===AppVersion.V4?"[class='ng-binding ng-scope selected']":"div[class*='selectable-inputs-container'] > div > div")?.textContent;e.details="Library",e.state=t??"All",e.buttons=[{label:"View Library",url:i}];break}case"calendar":e.details="Calendar",e.buttons=[{label:"View Calendar",url:i}];break;case"search":e.details="Search";break;case"player":{if(null===s)break;let t,n;if(e.endTimestamp=s.endTimestamp,delete e.startTimestamp,(l===AppVersion.V4?document.querySelector("#loading-logo").className.includes("flashing"):document.querySelector("div[class*='buffering-loader-container']"))||s.isPaused?(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText="Player is paused",e.state="Paused"):(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText="Player is playing",e.state="Watching"),l===AppVersion.V4)n=document.querySelector("head > title")?.textContent?.replace("Stremio -","")?.trim(),t=i.substring(0,i.lastIndexOf("/")).replace("player","detail"),e.largeImageKey=document.querySelector("#loading-logo")?.getAttribute("data-image")??"https://cdn.rcd.gg/PreMiD/websites/S/Stremio/assets/0.png";else{const s=await _eval("core.transport.getState('player')");if("ready"===s?.metaItem?.type?.toLowerCase()){const{metaItem:{content:i},seriesInfo:a}=s;({title:n}=s),t=`${window.location.origin}/#/detail/${i.type}/${i.id}`,"series"===i.type&&(t+=`/${i.id}:${a.season}:${a.episode}`),e.largeImageKey=i.logo??"https://cdn.rcd.gg/PreMiD/websites/S/Stremio/assets/0.png"}}e.details=n??"Player",t&&(e.buttons=[{label:"Watch",url:t}]);break}}break}case AppVersion.Website:switch(e.details="Visiting stremio.com",n){case"/addon-sdk":e.state="Addon SDK";break;case"/contribute":e.state="Contribute";break;case"/community":e.state="Community";break;case"/technology":e.state="Technology";break;case"/competition":e.state="Competition";break;case"/careers":e.state="Careers";break;default:{const t=document.querySelector("[class='active']");if(null===t||"langs"===t.parentElement?.className)break;e.state=t.textContent}}}o||delete e.buttons,r||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/S/Stremio/assets/0.png"),e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;