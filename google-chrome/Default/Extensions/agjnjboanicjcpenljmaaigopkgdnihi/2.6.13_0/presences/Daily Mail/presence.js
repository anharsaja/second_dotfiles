"use strict";var __webpack_exports__={};const byHref={"auhome/index.html":{subsectionTitle:"Australia"},"games/daily-crossword":{subsectionTitle:"Games",customMsg:"Playing games!"},"for-you/index.html":{subsectionTitle:"For You",customMsg:"Browsing personalized feed"},"femail/fashionfinder/index.html":{subsectionTitle:"Fashion Finder",customMsg:"Browsing fashion"},"news/mostread/index.html":{subsectionTitle:"Most read"},"home/latest/index.html#{any(SECTS)}":{subsectionTitle:"{any(SECTS)}"},"news/royals/index.html":{subsectionTitle:"Royals",customMsg:"Browsing Royal News"},"video/index.html":{template:".vjs-title-text",subsectionTitle:"Video"},"news/joe-biden/index.html":{subsectionTitle:"Joe Biden",template:".news > .listTitle",format:"TRENDING {NAME[]} NEWS"},"news/donald_trump/index.html":{subsectionTitle:"Donald Trump",template:".news > .listTitle",format:"TRENDING {NAME[]} NEWS"},"news/us-economy/index.html":{subsectionTitle:"Economy",template:".news > .listTitle",format:"TRENDING {NAME[]} NEWS"},"news/king-charles-iii/index.html":{subsectionTitle:"King Charles III",template:".topicHeaderTitle",format:"TRENDING {NAME[]} NEWS"},"news/prince_harry/index.html":{subsectionTitle:"Prince Harry",template:".topicHeaderTitle",format:"TRENDING {NAME[]} NEWS"},"tvshowbiz/taylor_swift/index.html":{subsectionTitle:"Taylor Swift",template:".tvshowbiz > .topicHeaderTitle",format:"{NAME[]}"},"tvshowbiz/kim_kardashian/index.html":{subsectionTitle:"Kim Kardashian",template:".tvshowbiz > .topicHeaderTitle",format:"{NAME[]}"},"news/prince-andrew/index.html":{subsectionTitle:"Prince Andrew",template:".tvshowbiz > .topicHeaderTitle",format:"{NAME[]}"},"tvshowbiz/jeremy-renner/index.html":{subsectionTitle:"Jeremy Renner",template:".tvshowbiz > .topicHeaderTitle",format:"Trending {NAME[]} News"},"tvshowbiz/tiktok/index.html":{subsectionTitle:"TikTok",template:".tvshowbiz > .topicHeaderTitle",format:"Trending {NAME[]} News"},"tvshowbiz/meghan-markle/index.html":{subsectionTitle:"Meghan Markle",template:".topicHeaderTitle",format:"{NAME}"},"news/kate_middleton/index.html":{subsectionTitle:"Kate Middleton",template:".topicHeaderTitle",format:"{NAME}"},"news/prince_william/index.html":{subsectionTitle:"Prince William",template:".topicHeaderTitle",format:"{NAME}"},"news/camilla-parker-bowles-duchess-of-cornwall/index.html":{subsectionTitle:"The Queen Consort",template:".topicHeaderTitle",format:"{NAME}"},sport:{subsectionTitle:"Sports",subsections:[{template:".sport > .listTitle",format:"TRENDING {NAME[]} NEWS",pages:[{subsectionTitle:"Premier League",href:"sport/premierleague/index.html"},{subsectionTitle:"MLS",href:"sport/major-league-soccer/index.html"},{subsectionTitle:"Super Bowl",href:"sport/super_bowl/index.html"},{subsectionTitle:"NBA",href:"sport/nba/index.html"},{subsectionTitle:"MLB",href:"sport/mlb/index.html"}]}]},"sport/wwe/index.html":{subsectionTitle:"WWE",template:".sport > .listTitle",format:"TRENDING {NAME[]} NEWS"},"sport/football/index.html":{subsectionTitle:"Soccer"},"sport/nfl/index.html":{subsectionTitle:"NFL"},"sport/nhl/index.html":{subsectionTitle:"NHL"},"sport/boxing/index.html":{subsectionTitle:"Boxing"},"sport/mma/index.html":{subsectionTitle:"MMA"},"sport/golf/index.html":{subsectionTitle:"Golf"},"sport/tennis/index.html":{subsectionTitle:"Tennis"},"sport/formulaone/index.html":{subsectionTitle:"F1"},"sport/othersports/index.html":{subsectionTitle:"More"},"news/coronavirus/index.html":{subsectionTitle:"Covid-19",template:".news > .listTitle",format:"TRENDING {NAME[]} NEWS"},"health/flu/index.html":{subsectionTitle:"Flu",template:".news > .listTitle",format:"TRENDING {NAME[]} NEWS"},"health/rsv/index.html":{subsectionTitle:"RSV",template:".news > .listTitle",format:"TRENDING {NAME[]} NEWS"},"health/monkeypox/index.html":{subsectionTitle:"Monkeypox",template:".news > .listTitle",format:"TRENDING {NAME[]} NEWS"},"health/dementia/index.html":{subsectionTitle:"Dementia",template:".news > .listTitle",format:"TRENDING {NAME[]} NEWS"},"news/cancer/index.html":{subsectionTitle:"Cancer",template:".news > .listTitle",format:"TRENDING {NAME[]} NEWS"},"news/weight_loss/index.html":{subsectionTitle:"Weight Loss",template:".news > .listTitle",format:"TRENDING {NAME[]} NEWS"},"news/centers-for-disease-control-and-prevention-cdc/index.html":{subsectionTitle:"CDC",template:".news > .listTitle",format:"TRENDING {NAME[]} NEWS"},"news/world-health-organization/index.html":{subsectionTitle:"WHO",template:".news > .listTitle",format:"TRENDING {NAME[]} NEWS"},"news/us-politics/index.html":{subsectionTitle:"",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"sciencetech/nasa/index.html":{subsectionTitle:"NASA",template:".sciencetech > .listTitle",format:"TRENDING {COMPANYNAME} NEWS"},"sciencetech/index.html":{subsectionTitle:"SCIENCE",template:"USETITLE"},"sciencetech/apple/index.html":{subsectionTitle:"Apple",template:".sciencetech > .listTitle",format:"TRENDING {COMPANYNAME} NEWS"},"sciencetech/twitter/index.html":{subsectionTitle:"Twitter",template:".sciencetech > .listTitle",format:"TRENDING {COMPANYNAME} NEWS"},"news/russia-ukraine-conflict/index.html":{subsectionTitle:"Russia-Ukraine",template:".news > listTitle",format:"TRENDING {NAME} NEWS"},"news/bryan-kohberger/index.html":{subsectionTitle:"Bryan Kohberger",template:".news > listTitle",format:"TRENDING {NAME} NEWS"},"wellness-us/index.html":{subsectionTitle:"",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"yourmoney/retirement/index.html":{subsectionTitle:"Retirement",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"yourmoney/consumer/index.html":{subsectionTitle:"Consumer",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"yourmoney/savings/index.html":{subsectionTitle:"Savings",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"yourmoney/cars/index.html":{subsectionTitle:"Cars",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"yourmoney/property/index.html":{subsectionTitle:"Property",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"tvshowbiz/index.html":{subsectionTitle:"U.K. Showbiz",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"health/diets/index.html":{subsectionTitle:"Diet",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"news/worldnews/index.html":{subsectionTitle:"World News",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"home/weather/index.html":{subsectionTitle:"UK Forecast",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"home/weatherlocation/{LOC-DATA}":{subsectionTitle:"UK Forecast",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"travel/escape/index.html":{subsectionTitle:"Escape",template:"USETITLE",format:"{NAME} | Daily Mail Online"},"travel/destinations/index.html":{subsectionTitle:"Destinations",template:"OTHER"},"travel/holidaytypes/index.html":{subsectionTitle:"Holiday Types",template:"OTHER"},"travel/travelreviews/index.html":{subsectionTitle:"Expert Reviews",template:"OTHER"},"travel/travelreviewshub/celebrity-travel.html":{subsectionTitle:"Celebrity Travel",template:"OTHER"}};function handleFootball(e,t){switch(t.state="Football",e){case"results.html":t.state+=" Results";break;case"fixtures.html":t.state+=" Fixtures";break;case"tables.html":t.state+=" Tables"}}function handleSport(e,t){t.details="Browsing Sports";const i=e.split("/"),l=document.querySelector(".sport")?.querySelector(".listTitle")?.textContent;"football"===i[1]?handleFootball(i[i.length-1],t):t.state=l||document.title.split("|")[0].trim()}function noTemplate(e,t){switch(e.split("/")[0]){case"for-you":t.details="browsing personalized feed";break;case"games":t.details="playing games!";break;default:t.details="Browsing the news"}}const formatTitle=e=>{e.details="Browsing Section",e.state=document.title.split("|")[0].trim()};function extractNameFromString(e,t){let i,l="";for(;null!==(i=/(?:{[^}]*})|([^{}]+)/g.exec(t));)i[1]&&(l+=i[1]);return e.replace(new RegExp(l.split(" ").filter((e=>e)).map((e=>e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"))).join("|"),"g"),"")}function findPage(e,t){const i=byHref[e];if(e.startsWith("sport"))handleSport(e,t);else if(i&&i.customMsg)t.details=i.customMsg;else if(i&&i.template)if("OTHER"===i.template)t.details="Browsing Section",t.state=i.subsectionTitle;else if("USETITLE"===i.template)formatTitle(t);else{let e=document.body;for(const t of i.template.split(" > "))e=e?.querySelector(t);const l=i.format&&e?.textContent?extractNameFromString(e.textContent,i.format):e?.textContent;t.details=l||"the news"}else noTemplate(e,t);if("video/index.html"===e){t.details=`Watching ${t.details}`,t.buttons=[{label:"Watch Along",url:document.location.href}];const e=document.querySelector("video");e.paused||e.ended?t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png":t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png"}else t.buttons=[{label:"Browse Along",url:document.location.href}]}function handleArticle(e,t){const i=document.querySelector("#js-article-text").querySelector("h1");e.buttons=[{label:"Read Article",url:document.location.href}],i.querySelector(".is-exclusive")?(e.details="Reading Article",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/D/Daily%20Mail/assets/0.png",e.smallImageText="Exclusive!"):(e.details="Reading Article",delete e.smallImageKey),e.largeImageKey=t?document.querySelector('[property="twitter:image"]')?.getAttribute("content"):"https://cdn.rcd.gg/PreMiD/websites/D/Daily%20Mail/assets/logo.png",e.state=document.querySelector('[property="twitter:title"]')?.getAttribute("content")||i.textContent.replace("EXCLUSIVE","")}function handleNewsPage(e,t){document.location.pathname.split("/").find((e=>e&&"news"!==e)).includes("article-")||document.location.pathname.split("/")[3]?.startsWith("article-")?handleArticle(e,t):findPage(document.location.pathname.substring(1),e)}const presence=new Presence({clientId:"1224125578504966165"}),sTs=Math.floor(Date.now()/1e3),catToCountry=e=>e.startsWith("us")?[e.replace("us",""),"Daily Mail (US)"]:e.startsWith("au")?[e.replace("au",""),"Daily Mail (US)"]:[e.replace("us",""),"Daily Mail"];presence.on("UpdateData",(async()=>{if(!document.location.toString())return;const[e,t]=(l=document.location.pathname.split("/")[1]).startsWith("us")?[l.replace("us",""),"Daily Mail (US)"]:l.startsWith("au")?[l.replace("au",""),"Daily Mail (US)"]:[l.replace("us",""),"Daily Mail"],i={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/D/Daily%20Mail/assets/logo.png",name:t,type:0,startTimestamp:sTs};var l;switch(await presence.getSetting("showtimestamp")||delete i.startTimestamp,e){case"home":{const e=document.querySelector("[data-mol-fe-latest-headlines--active]")?.querySelector("a")?.textContent?.toLowerCase();e&&["all","news","home"].includes(e)?i.details=`Browsing the latest ${e} news`:i.details="Browsing the latest news"}break;case"news":handleNewsPage(i,await presence.getSetting("usearticlethumbnail"));break;default:document.location.pathname.split("/")[3]?.startsWith("article-")?handleNewsPage(i,await presence.getSetting("usearticlethumbnail")):findPage(document.location.pathname.substring(1),i)}presence.setActivity(i)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;