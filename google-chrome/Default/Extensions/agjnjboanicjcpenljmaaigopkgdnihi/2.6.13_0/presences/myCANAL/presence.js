var __webpack_exports__={};const presence=new Presence({clientId:"844106861711196179"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused",live:"general.live"}),browsingTimestamp=Math.floor(Date.now()/1e3),containsTerm=e=>document.location.pathname.includes(e);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/myCANAL/assets/0.png"},t=document.querySelector(".iIZX3IGkM2eBzzWle1QQ"),a=await presence.getSetting("cover"),s=document.querySelector(".bodyTitle___HwRP2");switch(document.location.pathname){case"/mes-videos/":e.state="Mes Vidéos";break;case"/chaines/":e.state="Chaînes";break;case"/programme-tv/":e.state="Programme TV";break;case"/cinema/":e.state="Films";break;case"/series/":e.state="Séries";break;case"/live/":e.state="Chaînes en direct"}if(t&&!isNaN(t.duration)){const s=document.querySelectorAll(".MGrm26svmXpUhj6dfbGN");let r=new URLSearchParams(window.location.search).get("channel");switch(!0){case containsTerm("live"):r=`${r.charAt(0)} ${r.substring(1)}`,e.details=document.querySelector(".A6AH2oNkXUuOKJN5IYrL").textContent,e.state=`sur ${document.querySelector(`#\\3${r}_onclick > div > div.card__content_0dae1b.cardContent___DuNAN.ratio--169 > div[class*="cardLogoChannel"] > div > img`)?.alt}`,[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(t.currentTime,t.duration),e.largeImageKey=a?document.querySelector(`#\\3${r}_onclick > div > div.card__content_0dae1b.cardContent___DuNAN.ratio--169 > div[class*="cardLogoChannel"] > div > img`)?.src:"https://cdn.rcd.gg/PreMiD/websites/M/myCANAL/assets/0.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/live.png",e.smallImageText="En direct",delete e.startTimestamp,delete e.endTimestamp,e.startTimestamp=browsingTimestamp;break;case containsTerm("cinema"):e.details=document.querySelector(".A6AH2oNkXUuOKJN5IYrL").textContent,[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(t.currentTime,t.duration),e.largeImageKey=a?e.largeImageKey=document.querySelector("[property='og:image']")?.content:"https://cdn.rcd.gg/PreMiD/websites/M/myCANAL/assets/0.png",e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=t.paused?(await strings).pause:(await strings).play;break;case containsTerm("series"):e.details=s[0].textContent.trim(),e.state=s[1].textContent.trim(),[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(t.currentTime,t.duration),e.largeImageKey=a?e.largeImageKey=document.querySelector("[property='og:image']")?.content:"https://cdn.rcd.gg/PreMiD/websites/M/myCANAL/assets/0.png",e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=t.paused?(await strings).pause:(await strings).play}t.paused&&(delete e.startTimestamp,delete e.endTimestamp)}else s?(e.details="Regarde...",e.state=s.textContent):e.details="Navigue...";presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;