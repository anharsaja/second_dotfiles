var __webpack_exports__={};const presence=new Presence({clientId:"777530802887983124"});function parseLength(e){let t=0;for(const[n,s]of e.split(":").reverse().entries())isNaN(Number(s))||(t+=Number(s)*Math.pow(60,n));return t}presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/G/Google%20Podcasts/assets/logo.png"},t=document.querySelectorAll(".Ut8Gr").length>0&&document.querySelectorAll(".Ut8Gr")[1].textContent;if(t){e.details=document.querySelector(".GmW3rb > .BhVIWc").alt,e.state=t;const n="none"!==document.querySelector(".DPvwYc.ERYGad").style.display;if(e.smallImageKey=n?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",!n){e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png";const t=Math.round(Date.now()/1e3),n=parseLength(document.querySelector(".oG0wpe").children[0].textContent);e.startTimestamp=t-n,e.endTimestamp=t+parseLength(document.querySelector(".oG0wpe").children[1].textContent)-n}}else if("/"===document.location.pathname)e.details="Browsing podcasts";else if(document.location.pathname.includes("feed/")){e.details="Viewing podcast";for(const t of document.querySelectorAll(".dbCu3e"))t.children[0].textContent===document.title&&(e.state=`${document.title} by ${t.children[1].textContent}`)}else document.location.pathname.includes("/subscriptions")?e.details="Browsing subscriptions":document.location.pathname.includes("/queue")?e.details="Browsing queue":document.location.pathname.includes("/subscribe-by-rss-feed")?e.details="Subscribing by RSS feed":document.location.pathname.includes("/settings")?e.details="Browsing settings":document.location.pathname.includes("search/")&&(e.details="Searching for podcast",e.state=document.location.pathname.replace("/search/",""));e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;