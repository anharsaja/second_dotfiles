var __webpack_exports__={};const presence=new Presence({clientId:"762522704128901131"}),browsingTimestamp=Math.floor(Date.now()/1e3);let menu,file;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/MEGA/assets/logo.png",startTimestamp:browsingTimestamp},[t,i]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("buttons")]),{pathname:n,hostname:s,href:c}=document.location;if(t)e.details="Browsing";else if(s.includes("mega.io"))menu=document.querySelector("[class='pages-menu submenu-link clickurl']"),"/"===n||n.includes("/startpage")?e.details="Home page":menu&&(e.details=menu.getAttribute("href"),e.buttons=[{label:"View Features",url:c}]);else if(s.includes("mega.nz"))if(menu=document.querySelector(".top-menu-item.active")??document.querySelector(".btn-myfiles.js-lpbtn.active"),"/"===n||n.includes("/startpage"))e.details="Home page";else if(n.includes("/file/")){const t=document.querySelector("[class='extension']").textContent;e.details=`Viewing a ${t} file`,e.state=` (${document.querySelector("[class='file-size-block']").textContent.trim()}) ${document.querySelector("[class='filename']").textContent}${t}`,e.buttons=[{label:"View File",url:c}]}else if(n.includes("/account"))e.details=`Viewing ${document.querySelector("[class='content-panel account active']").querySelector("[class*='active']").firstElementChild.textContent.trim()} Settings`;else if(n.includes("/fm/")&&!n.includes("/fm/chat")){const t=document.querySelector('[class*="ui-selected"]')?.getAttribute("title")??document.querySelector('[class*="data-block-view ui-selected"]')?.getAttribute("title");if(t){const i=t.replace(/[0-9]* .B/gm,"");file=t.replace(i,""),file&&(file=`(${file})`),e.details="Viewing file",e.state=`${file} ${i}`}else document.querySelector("#bodyel > section.media-viewer-container.theme-dark-forced")?.className.includes("hidden")?e.details=`Viewing ${document.querySelector(".btn-galleries.js-lpbtn.active")?.textContent??document.querySelector(".btn-myfiles.js-lpbtn.active")?.textContent??"Dashboard"}`:(e.details="Viewing file",e.state=document.querySelector("[class='file-name']").textContent)}else if(n.includes("/fm/chat")){const t=document.querySelector("#fmholder > div.main-blur-block > div.fm-main.default > div.section.conversations > div > div.fm-right-files-block.in-chat > div.conversation-panels > div > div > div.chat-topic-block.chat-topic-block > div.chat-topic-info > div.chat-topic-text > span:nth-child(1) > span"),i=document?.querySelector('[class*="contacts-navigation"]')?.querySelector('[class*="active"]')??document?.querySelector('[class*=" active groupchat public"]');t?(e.details="Viewing chat",e.state=t.textContent):e.details=i?i.textContent:"Viewing All chats"}else if(document.querySelector("[class*=' ui-selected']")){const t=document.querySelector("[class*=' ui-selected']").childNodes[1];document.querySelector("[class*=' ui-selected']").innerHTML.includes("folder")?(e.details="Viewing folder",e.state=t.textContent):(e.details="Viewing file",e.state=`${t.textContent} (Size: ${document.querySelector("[class*=' ui-selected']").getAttribute("title").replace(t.textContent,"").trim()})`)}else document.querySelector("[class='fm-breadcrumbs-block']")&&document.querySelector('[class="next-arrow sprite-fm-mono icon-arrow-right icon16"]')?(e.details="Viewing contents of folder",e.state=document.querySelector("[class='fm-breadcrumbs-block']").lastChild.textContent.trim()):menu?e.details=`Viewing ${menu.textContent}`:"/business"===n&&(e.details="Viewing Business");i||delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;