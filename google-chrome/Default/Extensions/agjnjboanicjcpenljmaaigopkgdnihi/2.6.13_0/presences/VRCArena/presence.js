var __webpack_exports__={};const presence=new Presence({clientId:"795235371029233684"});presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/V/VRCArena/assets/logo.jpg"},t=await presence.getSetting("privacy");if("www.vrcarena.com"===document.location.hostname)if(t||(e.buttons=[{label:"View on VRCArena",url:document.URL.split("?")[0]}]),document.location.pathname.includes("/category"))switch(document.location.pathname){case"/category/accessory":e.details="Browsing accessoires",presence.setActivity(e);break;case"/category/animation":e.details="Browsing animations",presence.setActivity(e);break;case"/category/avatar":e.details="Browsing avatars",presence.setActivity(e);break;case"/category/tutorial":e.details="Browsing tutorials",presence.setActivity(e);break;case"/category/world":e.details="Browsing worlds",presence.setActivity(e);break;case"/category/tool":e.details="Browsing tools",presence.setActivity(e);break;case"/category/alteration":e.details="Browsing alterations",presence.setActivity(e)}else if(document.location.pathname.includes("/assets"))document.location.pathname.includes("/create")?e.details="Creating an asset":!1===t?(e.details=document.querySelector("h1.MuiTypography-root > a").textContent,e.state=document.querySelector("h1.MuiTypography-root").parentNode.querySelector("div > div").textContent):e.details="Looking at an asset",presence.setActivity(e);else if(document.location.pathname.includes("/users")){const s=document.querySelector("h1.MuiTypography-root").textContent;"All Users"===s?e.details="Browsing users":!1===t?(e.details="Viewing user",e.state=s):e.details="Browsing users",presence.setActivity(e)}else if(document.location.pathname.includes("/species")){const s=document.querySelector("h1.MuiTypography-root").textContent;e.details="Browsing species","All Species"!==s&&!1===t&&(e.state=s),presence.setActivity(e)}else{switch(document.location.pathname){case"/discord-servers":e.details="Browsing Discord servers";break;case"/news":e.details="Browsing news";break;case"/authors":e.details="Browsing authors";break;case"/about":e.details="Browsing about page";break;case"/requests":e.details="Browsing requests";break;case"/requests/create":e.details="Creating a request";break;case"/patreon":e.details="Browsing patrons";break;case"/streams":e.details="Browsing streams";break;case"/activity":e.details="Browsing activity";break;case"/my-account":e.details="Account settings";break;case"/nsfw":e.details=!1===t?"Browsing NSFW":"Browsing VRCArena";break;default:e.details="Browsing VRCArena"}presence.setActivity(e)}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;