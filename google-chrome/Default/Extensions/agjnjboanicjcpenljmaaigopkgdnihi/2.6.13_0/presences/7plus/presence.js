var __webpack_exports__={};const presence=new Presence({clientId:"843060416208306196"});let showName;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/0-9/7plus/assets/logo.png"},{pathname:t,href:s}=document.location,[r,a,l]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("covers")]),o=document.querySelector("video");if(r&&!o)e.details="Browsing";else if(t.includes("/home/")||"/"===t)e.details="Viewing 7plus home";else switch(t){case"/shows-a-z":e.details="Browsing 7plus Shows",e.buttons=[{label:"Browse Shows",url:s}];break;case"/sport":e.details="Browsing 7plus Sports",e.buttons=[{label:"Browse All Sports",url:s}];break;case"/search":e.details="Searching for",e.state=document.querySelector('[placeholder="Search for shows"]')?.value??"Nothing";break;case"/live-tv":showName=document.querySelector("h2.h3§3Lep4.fw700§1YAxq.truncate2§d57BK.truncateMobile§1Yywu"),e.largeImageKey=document.querySelector('[property="og:image"]')?.content??"https://cdn.rcd.gg/PreMiD/websites/0-9/7plus/assets/logo.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/live.png",e.smallImageText="Live",e.details=document.querySelector('[class="swiper-slide swiper-slide-active"]').querySelector('[class*="title"]').textContent,e.state=`Watching: ${showName.textContent}`,e.buttons=[{label:"Tune In Live",url:s}];break;case"/query":e.details="Searching 7plus!";break;default:r&&o&&document.querySelector('[class*="showPlayer"]')?e.details="Watching":r&&o?e.details="Browsing":o&&document.querySelector('[class*="showPlayer"]')?(e.buttons=[{label:"View The Video",url:s}],o.paused&&(delete e.endTimestamp,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png"),[e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(o),e.details=document.querySelector('[class="vjs-top-bar-title"]').textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.largeImageKey=o.getAttribute("poster")??"https://cdn.rcd.gg/PreMiD/websites/0-9/7plus/assets/logo.png"):(e.buttons=[{label:"View Show",url:s}],e.largeImageKey=document.querySelector('[class="logoWrapper"]')?.getAttribute("src")??document.querySelector('[property="og:image"]')?.content??"https://cdn.rcd.gg/PreMiD/websites/0-9/7plus/assets/logo.png",e.details=`Viewing "${document.querySelector('[class="vjs-top-bar-title"]')?.textContent??document.querySelector('[class*="tintable"]')?.textContent}"`)}l||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/0-9/7plus/assets/logo.png"),a||delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;