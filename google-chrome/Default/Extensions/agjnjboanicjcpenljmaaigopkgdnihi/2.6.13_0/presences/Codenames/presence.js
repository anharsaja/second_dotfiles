var __webpack_exports__={};const presence=new Presence({clientId:"817859401477259315"}),slideshow=presence.createSlideshow(),icons={red:["https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/22.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/20.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/23.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/4.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/19.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/1.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/21.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/3.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/16.png"],blue:["https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/2.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/14.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/15.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/6.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/9.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/13.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/12.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/8.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/10.png"],beige:["https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/24.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/11.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/5.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/17.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/0.png","https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/18.png"]};let browsingTimestamp=Math.floor(Date.now()/1e3),lastTeamLog="beige",currentlySetColor="beige";presence.on("UpdateData",(async()=>{let e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/C/Codenames/assets/logo.png"};const s=await presence.getSetting("buttons");if(document.querySelector("#gamescene"))if(s&&(e.buttons=[{label:"Join room",url:document.URL}]),document.querySelector(".justify-start.items-center"))e.details="Waiting for game",e.state="to start...","beige"!==lastTeamLog&&(browsingTimestamp=Math.floor(Date.now()/1e3),lastTeamLog="beige"),e.startTimestamp=browsingTimestamp,slideshow.getSlides().length&&(presence.info("Removing all cards from SlideShow."),slideshow.deleteAllSlides());else{const s=document.querySelector(".scrollTarget").children.length;if(s){const e=document.querySelector(".scrollTarget").children[s-1].className.split("team-")[1].split(" ")[0];e!==lastTeamLog&&(browsingTimestamp=Math.floor(Date.now()/1e3),slideshow.deleteAllSlides(),presence.info("Removing all cards from SlideShow."),lastTeamLog=e)}e.startTimestamp=browsingTimestamp;const t=Array.from(document.querySelectorAll("section")).filter((e=>e.className?.includes("items-center"))),n=Array.from(document.querySelectorAll("section")).filter((e=>e.className?.includes("items-center"))).filter((e=>{const s=e.parentElement.parentElement.style.transform;return!Array.from(document.querySelectorAll(".coverToken")).find((e=>e.style.transform.split("scale")[0]===s.split("scale")[0]))})),r=t.filter((e=>!n.includes(e))),i=Array.from(document.querySelectorAll("div")).filter((e=>e.className?.includes("items-center text"))),o=Array.from(document.querySelectorAll("button")).find((e=>e.className?.includes("text-base color-"))).attributes.getNamedItem("color").textContent;o!==currentlySetColor&&(slideshow.deleteAllSlides(),presence.info("Removing all cards from SlideShow."),currentlySetColor=o);let a=0;for(const[e,s]of n.entries()){const t=s.textContent;slideshow.hasSlide(t)||(presence.info(`Adding ${t} card to SlideShow.`),a>icons[o].length&&(a=0),slideshow.addSlide(t,{smallImageKey:icons[o][a],smallImageText:`Available cards: ${t} (${e+1}/${n.length})`},5e3),a++)}for(const e of r){const s=e.textContent;slideshow.hasSlide(s)&&(presence.info(`Removing ${s} card from SlideShow.`),slideshow.deleteSlide(s))}e={...e,...slideshow.currentSlide},"beige"===o?i.length?(e.details="Spectating... Current clue:",e.state=`${i[0].firstElementChild.textContent} (Matches ${i[0].children[1].textContent} cards)`):e.details="Spectating...":document.querySelector("input")?(e.details="Giving a clue",e.state="to their operatives..."):document.querySelector(".cursor-pointer")?(e.details="Guessing clue:",e.state=`${i[0].firstElementChild.textContent} (Matches ${i[0].children[1].textContent} cards)`):i.length?(e.details="Waiting for operatives to guess clue:",e.state=`${i[0].firstElementChild.textContent} (Matches ${i[0].children[1].textContent} cards)`):(e.details="Waiting for spymaster(s)",e.state="to give clue...")}else e.startTimestamp=browsingTimestamp,slideshow.getSlides().length&&(presence.info("Removing all cards from SlideShow."),slideshow.deleteAllSlides()),document.location.pathname.includes("/room/create")?(e.details="Creating a room...",s&&(e.buttons=[{label:"Join room",url:document.URL}])):document.location.pathname.includes("/room/")?(e.details="Joining a room...",s&&(e.buttons=[{label:"Join room",url:document.URL}])):e.details="Browsing...";presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;