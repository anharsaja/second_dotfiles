var __webpack_exports__={};const presence=new Presence({clientId:"858292108195921920"}),startedAt=Date.now(),supportedLanguages=["js","md","json","gitignore","txt","html","css"],assets={"lang-html":"https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/4.png","lang-css":"https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/5.png","lang-js":"https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/6.png","lang-json":"https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/7.png","lang-txt":"https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/8.png","lang-md":"https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/9.png","lang-gitignore":"https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/10.png"};presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/logo.jpg",startTimestamp:startedAt},{pathname:t,hostname:s}=window.location,n=t.split("/").slice(1),[a,i,c]=await Promise.all([presence.getSetting("editingDetails"),presence.getSetting("editingState"),presence.getSetting("timestamp")]);if(t.includes("/snippet"))n.length>=3?e.details=document.querySelector("h1.snippet-title.h3").textContent.trim():e.details="Looking for Snippets",e.state=`${s}/${n[0]}`,e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/0.png";else if(t.includes("/app"))n.length>=3?e.details=document.querySelector("h1.jumbo").textContent.trim():e.details="Looking for Apps",e.state=`${s}/${n[0]}`,e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/1.png";else if(t.includes("/lib"))n.length>=3?e.details=`Reading ${n[1]} docs`:e.details="Looking for Docs",e.state=`${s}/${n[0]}`,e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/2.png";else if(t.includes("/mp/")){const t=document.querySelector("div.filename > [data-filename]")?.textContent?.split("/")?.pop();if(t){const s=t.match(/\.\w+/g)?.[0]?.replace(".",""),[c,g]=document.querySelector("div.filename > [data-cursor]").textContent.split(":"),d=e=>"{0}"===e?void 0:e.replace("%project%",n[2]).replace("%file%",t).replace("%line%",c).replace("%column%",g);e.details=d(a),e.state=d(i),e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/3.png",s&&supportedLanguages.includes(s)?e.largeImageKey=assets[`lang-${s}`]:e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Autocode/assets/3.png"}}c||delete e.startTimestamp,e.details||e.state?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;