var __webpack_exports__={};const presence=new Presence({clientId:"821104573329440848"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{let e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/TruckersMP/assets/logo.png"};const[t,a,n]=await Promise.all([presence.getSetting("buttons"),presence.getSetting("timestamp"),presence.getSetting("privacy")]),i={"/team":{details:"Viewing the staff team"},"/status":{details:"Viewing the server status"},"/knowledge-base":{details:"Browsing the knowledge base"},"/support":{details:"Viewing the support center"},"/rules":{details:"Reading the rules"},"/download":{details:"Viewing the downloads page"},"/profile/settings":{details:"Viewing profile settings"},"/vtc":{details:"Viewing the VTC center"},"/vtc/search":{details:"Searching for a VTC"},"/vtc/create":{details:"Creating a VTC"},"/blog":{details:"Browsing the blog"},"/events":{details:"Viewing the events system"},"/events/manage":{details:"Managing their events"},"/events/manage/past":{details:"Viewing their past events"},"/events/create":{details:"Creating an event"},"/events/search":{details:"Searching for an event"},"/api":{details:"Viewing the API"},"/live":{details:"Viewing the live stats"},"/history":{details:"Viewing the history"},"/settings":{details:"Viewing the settings"}};for(const[t,a]of Object.entries(i))document.location.pathname.includes(t)&&(e={...e,...a});switch(document.location.host){case"truckersmp.com":switch(!0){case document.location.pathname.includes("/blog/"):e.details="Reading a blog post",e.state=document.querySelector("div.container-fluid > h1").textContent,e.buttons=[{label:"Read Post",url:document.URL}];break;case document.location.pathname.includes("/events/"):e.details="Viewing an event",e.state=document.querySelectorAll("h1")[1].textContent,e.buttons=[{label:"View Event",url:document.URL}];break;case document.location.pathname.includes("/members/"):e.details="Viewing a VTC members list",e.state=document.querySelector("h2").textContent;break;case document.location.pathname.includes("/vtc/"):e.details="Viewing a VTC",e.state=document.querySelector("h2").textContent,e.buttons=[{label:"View VTC",url:document.URL}];break;case document.location.pathname.includes("/user/"):e.details="Viewing a user's profile",e.state=document.querySelector("div.col-md-12 > h1 > span").textContent,e.buttons=[{label:"View Profile",url:document.URL}];break;case document.location.pathname.includes("/article/"):e.details="Viewing a knowledge base article",e.state=document.querySelector("h1").textContent,e.buttons=[{label:"Read Article",url:document.URL}];break;case"/"===document.location.pathname:e.details="Browsing the homepage"}break;case"forum.truckersmp.com":switch(!0){case document.location.pathname.includes("/index.php?/profile"):e.details="Viewing a forum user",e.state=document.querySelectorAll("main > div > div > div> div > header > div  > div > div")[1].querySelector("div > h1 > span").textContent,e.buttons=[{label:"View Profile",url:document.URL}];break;case document.location.pathname.includes("/index.php?/topic"):e.details="Viewing a forum topic",e.state=document.querySelector("main > div > div > div > div > header > div > div > div > h1").textContent,e.buttons=[{label:"View Topic",url:document.URL}];break;case document.location.pathname.includes("/forum"):e.details="Browsing the forum",e.state=document.querySelector("header > h1").textContent,e.buttons=[{label:"View Forum Category",url:document.URL}];break;default:e.details="Browsing the forum"}break;case"map.truckersmp.com":e.details="Viewing the TruckersMP Map",document.location.pathname.includes("?follow=")&&(e.details="TruckersMP Map",e.state=`Following ${document.querySelector("div.player-name").textContent}`)}t||delete e.buttons,n&&delete e.state,a&&(e.startTimestamp=browsingTimestamp),presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;