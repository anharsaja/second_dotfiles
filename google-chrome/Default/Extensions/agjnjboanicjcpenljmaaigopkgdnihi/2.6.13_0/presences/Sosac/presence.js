var __webpack_exports__={};const presence=new Presence({clientId:"1079537235076071524"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused",browsing:"general.browsing"});let video={duration:0,currentTime:0,paused:!0};presence.on("iFrameData",(e=>{video=e})),presence.on("UpdateData",(async()=>{const e=await strings,t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/S/Sosac/assets/logo.png"};if(video&&!isNaN(video.duration)&&document.location.pathname.includes("/player")){[t.startTimestamp,t.endTimestamp]=presence.getTimestamps(Math.floor(video.currentTime),Math.floor(video.duration));const a=document.querySelector("h3"),s=document.location.href.match(/^(?:https?:\/\/)?([^/]+)/i)[1].split(".")[0];if(a){const e=a.textContent,s=e.match(/\d+x\d+/);t.details=`${e.match(/^([^\n]+)/)[1]} ${s?s[0]:" "}`}t.largeImageKey=await uploadImage(`https://${s}.sosac.tv/images/75x109/${"movies"===s?"movie":"serial"}-${document.querySelector(".track").getAttribute("onclick").match(/\d+/)[0]}.jpg`),t.smallImageKey=video.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",t.smallImageText=video.paused?e.pause:e.play,video.paused&&(delete t.startTimestamp,delete t.endTimestamp),t.buttons=[{label:"Watch on Sosac",url:document.location.href}],presence.setActivity(t,!video.paused)}else t.details=e.browsing,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",t.smallImageText=e.browsing,presence.setActivity(t)}));let isUploading=!1;const uploadedImages={};async function uploadImage(e){if(isUploading)return"https://cdn.rcd.gg/PreMiD/websites/S/Sosac/assets/logo.png";if(uploadedImages[e])return uploadedImages[e];isUploading=!0;const t=await fetch(e).then((e=>e.blob())),a=new FormData;a.append("file",t,"file");const s=await fetch("https://pd.premid.app/create/image",{method:"POST",body:a}),i=await s.text();return isUploading=!1,uploadedImages[e]=i,i}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;