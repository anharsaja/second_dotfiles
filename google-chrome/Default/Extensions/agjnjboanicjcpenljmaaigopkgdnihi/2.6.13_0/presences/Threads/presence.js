var __webpack_exports__={};const presence=new Presence({clientId:"1237798561739968513"}),browsingTimestamp=Math.floor(Date.now()/1e3),capitalize=e=>e.replace(/[[{(_)}\]]/g," ").replace(/^\w/,(e=>e.toUpperCase()));presence.on("UpdateData",(async()=>{const[e,t]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("time")]),{pathname:a,href:s,search:i}=document.location,l={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/Threads/assets/logo.png",details:"Browsing..."};a.match("/following")?l.state="Following feed":a.match("/saved")?l.state="Saved threads":a.match("/liked")?l.state="Liked threads":a.match("/login")||a.match("/nonconsent")?l.details="Logging in":a.match("/search")&&!e?(l.details="Searching for:",l.state=new URLSearchParams(i).get("q"),l.state||(l.details="Search")):a.startsWith("/@")?(l.state=a.split("/")[1],e||(l.smallImageKey=document.querySelector(`img[alt*="${l.state.split("@")[1]}"]`).src,l.smallImageText=l.state.split("@")[1]),"post"===a.split("/")[2]?(l.details="Viewing a thread",e||(l.buttons=[{label:"View Thread",url:s}])):(l.details="Viewing a profile",e||(l.buttons=[{label:"View Profile",url:s}]))):a.split("/")[1]?(l.details=capitalize(a.split("/")[1]),l.state=capitalize(a.split("/")[2]||"")):l.state="For You feed",e&&delete l.state,t&&(l.startTimestamp=browsingTimestamp),presence.setActivity(l)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;