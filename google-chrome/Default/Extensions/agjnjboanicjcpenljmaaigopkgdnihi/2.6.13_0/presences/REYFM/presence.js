var __webpack_exports__={};const presence=new Presence({clientId:"748660637021896835"}),browsingTimestamp=Math.floor(Date.now()/1e3);let totalListeners,channels=[];function newStats(){fetch("https://api.reyfm.de/v4?voting=true").then((e=>e.json())).then((e=>{totalListeners=e.all_listeners;const t=e.sequence,s=[];for(const e of t)s.push({id:e,name:"",track:"",artist:"",cover:"",listeners:0,timeStart:"",timeEnd:""});for(const t of s){const s=e.channels[`${t.id}`];t.name=s.name,t.listeners=s.listeners,t.track=s.now.title,t.artist=s.now.artist,t.cover=s.now.cover_urls["500x500"],t.timeStart=s.now.time.start,t.timeEnd=s.now.time.end}channels=s}))}function findChannel(){try{for(const e of document.querySelector("#container > div.channels").children)for(const t of e.children)if(!t.className.includes("desktop")&&t.firstElementChild.children[2].firstElementChild.src.includes("stop.png"))return t.firstElementChild.id.replace("channel-","");return"YOU FAILED"}catch(e){return"YOU FAILED"}}newStats(),setInterval((()=>{newStats()}),1e4),presence.on("UpdateData",(async()=>{const[e,t,s,n,a,r,i]=await Promise.all([presence.getSetting("sInfo"),presence.getSetting("tElapsed"),presence.getSetting("sFormat1"),presence.getSetting("sFormat2"),presence.getSetting("sListeners"),presence.getSetting("buttons"),presence.getSetting("logo")]),c={largeImageKey:["https://cdn.rcd.gg/PreMiD/websites/R/REYFM/assets/0.png","https://cdn.rcd.gg/PreMiD/websites/R/REYFM/assets/1.png","https://cdn.rcd.gg/PreMiD/websites/R/REYFM/assets/2.png","https://cdn.rcd.gg/PreMiD/websites/R/REYFM/assets/5.png","https://cdn.rcd.gg/PreMiD/websites/R/REYFM/assets/4.png","https://cdn.rcd.gg/PreMiD/websites/R/REYFM/assets/3.png","https://cdn.rcd.gg/PreMiD/websites/R/REYFM/assets/7.png","https://cdn.rcd.gg/PreMiD/websites/R/REYFM/assets/6.png","https://cdn.rcd.gg/PreMiD/websites/R/REYFM/assets/8.png"][i]||"https://cdn.rcd.gg/PreMiD/websites/R/REYFM/assets/0.png",smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/reading.png"};let l=!1;if(e&&("status.rey.fm"===document.location.hostname?c.details="Viewing status page":"rey.fm"===document.location.hostname&&(document.location.pathname.includes("/bots")?(c.details="Viewing bots",c.buttons=[{label:"View Bots",url:"https://rey.fm/bots"}]):document.location.pathname.includes("/discord-bot")?(c.details="Viewing the Discord bot",c.buttons=[{label:"View Bot",url:"https://rey.fm/discord-bot"}]):document.location.pathname.includes("/partner")?c.details="Viewing partners":document.location.pathname.includes("/stream-urls")?c.details="Viewing streams":document.location.pathname.includes("/apply")?c.details="Viewing job postings":document.location.pathname.includes("/datenschutz")?c.details="Reading the datenschutz":document.location.pathname.includes("/impressum")?c.details="Reading the impressum":document.location.pathname.includes("/stats")?c.details="Viewing the statistics":"/"===document.location.pathname&&(c.details="Browsing..."))),t&&(c.startTimestamp=browsingTimestamp),"rey.fm"===document.location.hostname&&"/"===document.location.pathname){if("display: none;"!==document.querySelector("#player").style.cssText){let e,t,r;if(document.querySelector("#miniplayer-play").src.includes("play.png"))t=document.querySelector("#player > div.wrapper > div.current > span.artist").textContent,e=document.querySelector("#player > div.wrapper > div.current > span.title").textContent,r=document.querySelector("#player > div.wrapper > div.cover > img#player-coverart").getAttribute("src"),c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",c.smallImageText=`Total Listeners: ${totalListeners}`,delete c.startTimestamp;else{const s=findChannel();if("YOU FAILED"!==s){const n=channels.find((e=>e.id===s));({track:e,artist:t,cover:r}=n),c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",c.smallImageText=a.replace("%listeners%",`${n.listeners}`).replace("%totalListeners%",`${totalListeners}`),c.startTimestamp=Date.parse(n.timeStart),c.endTimestamp=Date.parse(n.timeEnd),l=!0,c.buttons=[{label:"Listen along!",url:`https://rey.fm/station/${n.name}`}]}else t=document.querySelector("#player > div.wrapper > div.current > span.artist").textContent,e=document.querySelector("#player > div.wrapper > div.current > span.title").textContent,r=document.querySelector("#player > div.wrapper > div.cover > img#player-coverart").getAttribute("src"),c.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",c.smallImageText="Loading statistics..."}c.details=s.replace("%title%",e).replace("%artist%",t),c.state=n.replace("%title%",e).replace("%artist%",t),c.largeImageKey=r}}else if("rey.fm"===document.location.hostname&&null!==document.querySelector("#channel-player")){const e=channels.find((e=>e.id===document.querySelector("#channel-player").className.replace("shadow channel-color-",""))),t=document.querySelector("#play").src.includes("play.png");c.smallImageKey=t?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",c.details=s.replace("%title%",e.track).replace("%artist%",e.artist),c.state=n.replace("%title%",e.track).replace("%artist%",e.artist),c.smallImageText=a.replace("%listeners%",`${e.listeners}`).replace("%totalListeners%",`${totalListeners}`),c.largeImageKey=e.cover,l=!0,c.buttons=[{label:"Listen along!",url:document.URL}],t?(delete c.startTimestamp,delete c.endTimestamp):(c.startTimestamp=Date.parse(e.timeStart),c.endTimestamp=Date.parse(e.timeEnd))}l?presence.showSetting("sListeners"):presence.hideSetting("sListeners"),r||delete c.buttons,c.details?presence.setActivity(c):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;