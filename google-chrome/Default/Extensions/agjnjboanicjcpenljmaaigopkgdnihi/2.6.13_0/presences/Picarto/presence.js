var __webpack_exports__={};const presence=new Presence({clientId:"630771716058120192"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused"}),presenceData={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Picarto/assets/logo.png"},browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e=document.querySelector(".mistvideo-video");if(e&&!isNaN(e.duration)){const t=document.querySelector(".styled__StreamTitle-sc-sf47ty-9"),s=document.querySelector(".ChannelToolbarTitle__ChannelTitle-sc-146631g-3");presenceData.details=t?t.textContent:"Title not found...",presenceData.state=s?s.textContent:"Uploader not found...",presenceData.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Picarto/assets/logo.png",presenceData.smallImageKey=e.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",presenceData.smallImageText=e.paused?(await strings).pause:(await strings).play,presenceData.startTimestamp=browsingTimestamp,e.paused&&(delete presenceData.startTimestamp,delete presenceData.endTimestamp),t&&s&&presence.setActivity(presenceData,!e.paused)}else presence.setActivity({details:"Browsing..",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Picarto/assets/logo.png"})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLFNBQVcsSUFBSUMsU0FBUyxDQUMxQkMsU0FBVSx1QkFDVkMsUUFBVUgsU0FBU0ksV0FBVyxDQUM5QkMsS0FBTSxrQkFDTkMsTUFBTyxtQkFDUEMsYUFBZSxDQUNmQyxjQUFlLGdFQUNoQkMsa0JBQW9CQyxLQUFLQyxNQUFNQyxLQUFLQyxNQUFRLEtBQy9DYixTQUFTYyxHQUFHLGNBQWNDLFVBQ3RCLE1BQU1DLEVBQVFDLFNBQVNDLGNBQWMsb0JBQ3JDLEdBQUlGLElBQVVHLE1BQU1ILEVBQU1JLFVBQVcsQ0FDakMsTUFBTUMsRUFBUUosU0FBU0MsY0FBYyxvQ0FBcUNJLEVBQVdMLFNBQVNDLGNBQWMsbURBQzVHWCxhQUFhZ0IsUUFBVUYsRUFBUUEsRUFBTUcsWUFBYyxxQkFDbkRqQixhQUFha0IsTUFBUUgsRUFDZkEsRUFBU0UsWUFDVCx3QkFDTmpCLGFBQWFDLGNBQ1QsK0RBQ0pELGFBQWFtQixjQUFnQlYsRUFBTVcsT0FBUyxnREFBa0QsK0NBQzlGcEIsYUFBYXFCLGVBQWlCWixFQUFNVyxjQUN2QnhCLFNBQVNHLGFBQ1RILFNBQVNFLEtBQ3RCRSxhQUFhc0IsZUFBaUJwQixrQkFDMUJPLEVBQU1XLGdCQUNDcEIsYUFBYXNCLHNCQUNidEIsYUFBYXVCLGNBRXBCVCxHQUFTQyxHQUNUdEIsU0FBUytCLFlBQVl4QixjQUFlUyxFQUFNVyxPQUNsRCxNQUVJM0IsU0FBUytCLFlBQVksQ0FDakJSLFFBQVMsYUFDVGYsY0FBZSxnRUFFdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wcmVzZW5jZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwcmVzZW5jZSA9IG5ldyBQcmVzZW5jZSh7XG4gICAgY2xpZW50SWQ6IFwiNjMwNzcxNzE2MDU4MTIwMTkyXCIsXG59KSwgc3RyaW5ncyA9IHByZXNlbmNlLmdldFN0cmluZ3Moe1xuICAgIHBsYXk6IFwiZ2VuZXJhbC5wbGF5aW5nXCIsXG4gICAgcGF1c2U6IFwiZ2VuZXJhbC5wYXVzZWRcIixcbn0pLCBwcmVzZW5jZURhdGEgPSB7XG4gICAgbGFyZ2VJbWFnZUtleTogXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL1AvUGljYXJ0by9hc3NldHMvbG9nby5wbmdcIixcbn0sIGJyb3dzaW5nVGltZXN0YW1wID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCk7XG5wcmVzZW5jZS5vbihcIlVwZGF0ZURhdGFcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHZpZGVvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5taXN0dmlkZW8tdmlkZW9cIik7XG4gICAgaWYgKHZpZGVvICYmICFpc05hTih2aWRlby5kdXJhdGlvbikpIHtcbiAgICAgICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnN0eWxlZF9fU3RyZWFtVGl0bGUtc2Mtc2Y0N3R5LTlcIiksIHVwbG9hZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5DaGFubmVsVG9vbGJhclRpdGxlX19DaGFubmVsVGl0bGUtc2MtMTQ2NjMxZy0zXCIpO1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IHRpdGxlID8gdGl0bGUudGV4dENvbnRlbnQgOiBcIlRpdGxlIG5vdCBmb3VuZC4uLlwiO1xuICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSB1cGxvYWRlclxuICAgICAgICAgICAgPyB1cGxvYWRlci50ZXh0Q29udGVudFxuICAgICAgICAgICAgOiBcIlVwbG9hZGVyIG5vdCBmb3VuZC4uLlwiO1xuICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9XG4gICAgICAgICAgICBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvUC9QaWNhcnRvL2Fzc2V0cy9sb2dvLnBuZ1wiO1xuICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IHZpZGVvLnBhdXNlZCA/IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvcGF1c2UucG5nXCIgOiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3BsYXkucG5nXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlVGV4dCA9IHZpZGVvLnBhdXNlZFxuICAgICAgICAgICAgPyAoYXdhaXQgc3RyaW5ncykucGF1c2VcbiAgICAgICAgICAgIDogKGF3YWl0IHN0cmluZ3MpLnBsYXk7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCA9IGJyb3dzaW5nVGltZXN0YW1wO1xuICAgICAgICBpZiAodmlkZW8ucGF1c2VkKSB7XG4gICAgICAgICAgICBkZWxldGUgcHJlc2VuY2VEYXRhLnN0YXJ0VGltZXN0YW1wO1xuICAgICAgICAgICAgZGVsZXRlIHByZXNlbmNlRGF0YS5lbmRUaW1lc3RhbXA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRpdGxlICYmIHVwbG9hZGVyKVxuICAgICAgICAgICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkocHJlc2VuY2VEYXRhLCAhdmlkZW8ucGF1c2VkKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHByZXNlbmNlLnNldEFjdGl2aXR5KHtcbiAgICAgICAgICAgIGRldGFpbHM6IFwiQnJvd3NpbmcuLlwiLFxuICAgICAgICAgICAgbGFyZ2VJbWFnZUtleTogXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL1AvUGljYXJ0by9hc3NldHMvbG9nby5wbmdcIixcbiAgICAgICAgfSk7XG4gICAgfVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljSEpsYzJWdVkyVXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lKd2NtVnpaVzVqWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEZGQlFWRXNRMEZCUXp0SlFVTTFRaXhSUVVGUkxFVkJRVVVzYjBKQlFXOUNPME5CUXpsQ0xFTkJRVU1zUlVGRFJpeFBRVUZQTEVkQlFVY3NVVUZCVVN4RFFVRkRMRlZCUVZVc1EwRkJRenRKUVVNM1FpeEpRVUZKTEVWQlFVVXNhVUpCUVdsQ08wbEJRM1pDTEV0QlFVc3NSVUZCUlN4blFrRkJaMEk3UTBGRGRrSXNRMEZCUXl4RlFVTkdMRmxCUVZrc1IwRkJhVUk3U1VGRE5VSXNZVUZCWVN4RlFVTmFMRGhFUVVFNFJEdERRVU12UkN4RlFVTkVMR2xDUVVGcFFpeEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXl4RFFVRkRPMEZCUlc1RUxGRkJRVkVzUTBGQlF5eEZRVUZGTEVOQlFVTXNXVUZCV1N4RlFVRkZMRXRCUVVzc1NVRkJTU3hGUVVGRk8wbEJRM0JETEUxQlFVMHNTMEZCU3l4SFFVRkhMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVzFDTEd0Q1FVRnJRaXhEUVVGRExFTkJRVU03U1VGRE0wVXNTVUZCU1N4TFFVRkxMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRXNRMEZCUXl4RlFVRkZPMUZCUTNCRExFMUJRVTBzUzBGQlN5eEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUTJ4RExHdERRVUZyUXl4RFFVTnNReXhGUVVORUxGRkJRVkVzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVTm9ReXhwUkVGQmFVUXNRMEZEYWtRc1EwRkJRenRSUVVOSUxGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zVjBGQlZ5eERRVUZETEVOQlFVTXNRMEZCUXl4dlFrRkJiMElzUTBGQlF6dFJRVU40UlN4WlFVRlpMRU5CUVVNc1MwRkJTeXhIUVVGSExGRkJRVkU3V1VGRE5VSXNRMEZCUXl4RFFVRkRMRkZCUVZFc1EwRkJReXhYUVVGWE8xbEJRM1JDTEVOQlFVTXNRMEZCUXl4MVFrRkJkVUlzUTBGQlF6dFJRVU16UWl4WlFVRlpMRU5CUVVNc1lVRkJZVHRaUVVONlFpdzRSRUZCT0VRc1EwRkJRenRSUVVOb1JTeFpRVUZaTEVOQlFVTXNZVUZCWVN4SFFVRkhMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eHBSRUZCWXl4RFFVRkRMQ3REUVVGWkxFTkJRVU03VVVGRGRrVXNXVUZCV1N4RFFVRkRMR05CUVdNc1IwRkJSeXhMUVVGTExFTkJRVU1zVFVGQlRUdFpRVU42UXl4RFFVRkRMRU5CUVVNc1EwRkJReXhOUVVGTkxFOUJRVThzUTBGQlF5eERRVUZETEV0QlFVczdXVUZEZGtJc1EwRkJReXhEUVVGRExFTkJRVU1zVFVGQlRTeFBRVUZQTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNN1VVRkRlRUlzV1VGQldTeERRVUZETEdOQlFXTXNSMEZCUnl4cFFrRkJhVUlzUTBGQlF6dFJRVVZvUkN4SlFVRkpMRXRCUVVzc1EwRkJReXhOUVVGTkxFVkJRVVU3V1VGRGFrSXNUMEZCVHl4WlFVRlpMRU5CUVVNc1kwRkJZeXhEUVVGRE8xbEJRMjVETEU5QlFVOHNXVUZCV1N4RFFVRkRMRmxCUVZrc1EwRkJRenRUUVVOcVF6dFJRVVZFTEVsQlFVa3NTMEZCU3l4SlFVRkpMRkZCUVZFN1dVRkJSU3hSUVVGUkxFTkJRVU1zVjBGQlZ5eERRVUZETEZsQlFWa3NSVUZCUlN4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF6dExRVU42UlR0VFFVRk5PMUZCUTA0c1VVRkJVU3hEUVVGRExGZEJRVmNzUTBGQlF6dFpRVU53UWl4UFFVRlBMRVZCUVVVc1dVRkJXVHRaUVVOeVFpeGhRVUZoTEVWQlExb3NPRVJCUVRoRU8xTkJReTlFTEVOQlFVTXNRMEZCUXp0TFFVTklPMEZCUTBZc1EwRkJReXhEUVVGRExFTkJRVU1pZlE9PSJdLCJuYW1lcyI6WyJwcmVzZW5jZSIsIlByZXNlbmNlIiwiY2xpZW50SWQiLCJzdHJpbmdzIiwiZ2V0U3RyaW5ncyIsInBsYXkiLCJwYXVzZSIsInByZXNlbmNlRGF0YSIsImxhcmdlSW1hZ2VLZXkiLCJicm93c2luZ1RpbWVzdGFtcCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJvbiIsImFzeW5jIiwidmlkZW8iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJpc05hTiIsImR1cmF0aW9uIiwidGl0bGUiLCJ1cGxvYWRlciIsImRldGFpbHMiLCJ0ZXh0Q29udGVudCIsInN0YXRlIiwic21hbGxJbWFnZUtleSIsInBhdXNlZCIsInNtYWxsSW1hZ2VUZXh0Iiwic3RhcnRUaW1lc3RhbXAiLCJlbmRUaW1lc3RhbXAiLCJzZXRBY3Rpdml0eSJdLCJzb3VyY2VSb290IjoiIn0=
undefined;