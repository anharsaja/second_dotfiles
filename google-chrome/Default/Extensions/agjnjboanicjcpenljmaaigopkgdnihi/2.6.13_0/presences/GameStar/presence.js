var __webpack_exports__={};const presence=new Presence({clientId:"640969147911503910"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused"}),browsingTimestamp=Math.floor(Date.now()/1e3);let user;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/G/GameStar/assets/logo.png"};if("www.gamestar.de"===document.location.hostname)if("/"===document.location.pathname)e.startTimestamp=browsingTimestamp,e.details="Betrachtet die Startseite";else if(document.location.pathname.includes("/artikel/"))e.startTimestamp=browsingTimestamp,user=document.querySelector("#content > div:nth-child(3) > div > div > div.col-xs-12.div-article-title > div:nth-child(6) > div:nth-child(1) > h1"),e.details="Liest Artikel:",e.state=user.textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";else if(document.location.pathname.includes("/videos/")){const t=document.querySelector("#playerID > div.jw-wrapper.jw-reset > div.jw-media.jw-reset > video"),s=document.querySelector("#content > div:nth-child(3) > div > div > div > div:nth-child(3) > div > h1").textContent;isNaN(t.duration)?isNaN(t.duration)&&(e.startTimestamp=browsingTimestamp,e.details="Betrachtet:",e.state=s):(e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=t.paused?(await strings).pause:(await strings).play,[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(Math.floor(t.currentTime),Math.floor(t.duration)),[e.details]=s.split("-"),e.state=s.replace(`${s.split("-")[0]}- `,""),t.paused&&(delete e.startTimestamp,delete e.endTimestamp))}e.details||(e.startTimestamp=browsingTimestamp,e.details="Betrachtet Seite:",e.state=document.querySelector("head > title").textContent),presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;