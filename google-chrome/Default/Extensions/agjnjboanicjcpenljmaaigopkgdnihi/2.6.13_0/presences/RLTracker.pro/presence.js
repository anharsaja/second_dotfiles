var __webpack_exports__={};const presence=new Presence({clientId:"636659890927960064"}),browsingTimestamp=Math.floor(Date.now()/1e3);let title;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/R/RLTracker.pro/assets/logo.png"};"/"===document.location.pathname?(e.startTimestamp=browsingTimestamp,e.details="Viewing the home page"):document.location.pathname.includes("/profiles/search")?(e.startTimestamp=browsingTimestamp,e.details="Searching a profile",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):document.location.pathname.includes("/profiles/")?(e.startTimestamp=browsingTimestamp,title=document.querySelector("#rip_col > div.fav_no_category.main_box.main_stats_box > h4"),e.details="Viewing stats of:",[e.state]=title.textContent.split("Last update")):document.location.pathname.includes("/trades")?(e.startTimestamp=browsingTimestamp,e.details="Viewing trades"):document.location.pathname.includes("live_tracker")?(e.startTimestamp=browsingTimestamp,e.details="Viewing the live tracker"):document.location.pathname.includes("/prices")&&(e.startTimestamp=browsingTimestamp,e.details="Viewing the price changes"),e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLFNBQVcsSUFBSUMsU0FBUyxDQUMxQkMsU0FBVSx1QkFDVkMsa0JBQW9CQyxLQUFLQyxNQUFNQyxLQUFLQyxNQUFRLEtBQ2hELElBQUlDLE1BQ0pSLFNBQVNTLEdBQUcsY0FBY0MsVUFDdEIsTUFBTUMsRUFBZSxDQUNqQkMsY0FBZSxzRUFFZ0IsTUFBL0JDLFNBQVNDLFNBQVNDLFVBQ2xCSixFQUFhSyxlQUFpQmIsa0JBQzlCUSxFQUFhTSxRQUFVLHlCQUVsQkosU0FBU0MsU0FBU0MsU0FBU0csU0FBUyxxQkFDekNQLEVBQWFLLGVBQWlCYixrQkFDOUJRLEVBQWFNLFFBQVUsc0JBQ3ZCTixFQUFhUSxjQUFnQixrREFFeEJOLFNBQVNDLFNBQVNDLFNBQVNHLFNBQVMsZUFDekNQLEVBQWFLLGVBQWlCYixrQkFDOUJLLE1BQVFLLFNBQVNPLGNBQWMsK0RBQy9CVCxFQUFhTSxRQUFVLHFCQUN0Qk4sRUFBYVUsT0FBU2IsTUFBTWMsWUFBWUMsTUFBTSxnQkFFMUNWLFNBQVNDLFNBQVNDLFNBQVNHLFNBQVMsWUFDekNQLEVBQWFLLGVBQWlCYixrQkFDOUJRLEVBQWFNLFFBQVUsa0JBRWxCSixTQUFTQyxTQUFTQyxTQUFTRyxTQUFTLGlCQUN6Q1AsRUFBYUssZUFBaUJiLGtCQUM5QlEsRUFBYU0sUUFBVSw0QkFFbEJKLFNBQVNDLFNBQVNDLFNBQVNHLFNBQVMsYUFDekNQLEVBQWFLLGVBQWlCYixrQkFDOUJRLEVBQWFNLFFBQVUsNkJBRXZCTixFQUFhTSxRQUNiakIsU0FBU3dCLFlBQVliLEdBRXJCWCxTQUFTd0IsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3ByZXNlbmNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHByZXNlbmNlID0gbmV3IFByZXNlbmNlKHtcbiAgICBjbGllbnRJZDogXCI2MzY2NTk4OTA5Mjc5NjAwNjRcIixcbn0pLCBicm93c2luZ1RpbWVzdGFtcCA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApO1xubGV0IHRpdGxlO1xucHJlc2VuY2Uub24oXCJVcGRhdGVEYXRhXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBwcmVzZW5jZURhdGEgPSB7XG4gICAgICAgIGxhcmdlSW1hZ2VLZXk6IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9SL1JMVHJhY2tlci5wcm8vYXNzZXRzL2xvZ28ucG5nXCIsXG4gICAgfTtcbiAgICBpZiAoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUgPT09IFwiL1wiKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCA9IGJyb3dzaW5nVGltZXN0YW1wO1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyB0aGUgaG9tZSBwYWdlXCI7XG4gICAgfVxuICAgIGVsc2UgaWYgKGRvY3VtZW50LmxvY2F0aW9uLnBhdGhuYW1lLmluY2x1ZGVzKFwiL3Byb2ZpbGVzL3NlYXJjaFwiKSkge1xuICAgICAgICBwcmVzZW5jZURhdGEuc3RhcnRUaW1lc3RhbXAgPSBicm93c2luZ1RpbWVzdGFtcDtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlNlYXJjaGluZyBhIHByb2ZpbGVcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3NlYXJjaC5wbmdcIjtcbiAgICB9XG4gICAgZWxzZSBpZiAoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUuaW5jbHVkZXMoXCIvcHJvZmlsZXMvXCIpKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCA9IGJyb3dzaW5nVGltZXN0YW1wO1xuICAgICAgICB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcmlwX2NvbCA+IGRpdi5mYXZfbm9fY2F0ZWdvcnkubWFpbl9ib3gubWFpbl9zdGF0c19ib3ggPiBoNFwiKTtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgc3RhdHMgb2Y6XCI7XG4gICAgICAgIFtwcmVzZW5jZURhdGEuc3RhdGVdID0gdGl0bGUudGV4dENvbnRlbnQuc3BsaXQoXCJMYXN0IHVwZGF0ZVwiKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUuaW5jbHVkZXMoXCIvdHJhZGVzXCIpKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCA9IGJyb3dzaW5nVGltZXN0YW1wO1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyB0cmFkZXNcIjtcbiAgICB9XG4gICAgZWxzZSBpZiAoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUuaW5jbHVkZXMoXCJsaXZlX3RyYWNrZXJcIikpIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXJ0VGltZXN0YW1wID0gYnJvd3NpbmdUaW1lc3RhbXA7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHRoZSBsaXZlIHRyYWNrZXJcIjtcbiAgICB9XG4gICAgZWxzZSBpZiAoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUuaW5jbHVkZXMoXCIvcHJpY2VzXCIpKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCA9IGJyb3dzaW5nVGltZXN0YW1wO1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyB0aGUgcHJpY2UgY2hhbmdlc1wiO1xuICAgIH1cbiAgICBpZiAocHJlc2VuY2VEYXRhLmRldGFpbHMpXG4gICAgICAgIHByZXNlbmNlLnNldEFjdGl2aXR5KHByZXNlbmNlRGF0YSk7XG4gICAgZWxzZVxuICAgICAgICBwcmVzZW5jZS5zZXRBY3Rpdml0eSgpO1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljSEpsYzJWdVkyVXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lKd2NtVnpaVzVqWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEZGQlFWRXNRMEZCUXp0SlFVTTFRaXhSUVVGUkxFVkJRVVVzYjBKQlFXOUNPME5CUXpsQ0xFTkJRVU1zUlVGRFJpeHBRa0ZCYVVJc1IwRkJSeXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRVZCUVVVc1IwRkJSeXhKUVVGSkxFTkJRVU1zUTBGQlF6dEJRVVZ1UkN4SlFVRkpMRXRCUVd0Q0xFTkJRVU03UVVGRmRrSXNVVUZCVVN4RFFVRkRMRVZCUVVVc1EwRkJReXhaUVVGWkxFVkJRVVVzUzBGQlN5eEpRVUZKTEVWQlFVVTdTVUZEY0VNc1RVRkJUU3haUVVGWkxFZEJRV2xDTzFGQlEyeERMR0ZCUVdFc1JVRkRXaXh2UlVGQmIwVTdTMEZEY2tVc1EwRkJRenRKUVVWR0xFbEJRVWtzVVVGQlVTeERRVUZETEZGQlFWRXNRMEZCUXl4UlFVRlJMRXRCUVVzc1IwRkJSeXhGUVVGRk8xRkJRM1pETEZsQlFWa3NRMEZCUXl4alFVRmpMRWRCUVVjc2FVSkJRV2xDTEVOQlFVTTdVVUZEYUVRc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eDFRa0ZCZFVJc1EwRkJRenRMUVVNdlF6dFRRVUZOTEVsQlFVa3NVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJReXhSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETEd0Q1FVRnJRaXhEUVVGRExFVkJRVVU3VVVGRGJrVXNXVUZCV1N4RFFVRkRMR05CUVdNc1IwRkJSeXhwUWtGQmFVSXNRMEZCUXp0UlFVTm9SQ3haUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEhGQ1FVRnhRaXhEUVVGRE8xRkJRemRETEZsQlFWa3NRMEZCUXl4aFFVRmhMRzFFUVVGblFpeERRVUZETzB0QlF6TkRPMU5CUVUwc1NVRkJTU3hSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETEZGQlFWRXNRMEZCUXl4UlFVRlJMRU5CUVVNc1dVRkJXU3hEUVVGRExFVkJRVVU3VVVGRE4wUXNXVUZCV1N4RFFVRkRMR05CUVdNc1IwRkJSeXhwUWtGQmFVSXNRMEZCUXp0UlFVTm9SQ3hMUVVGTExFZEJRVWNzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZETjBJc05rUkJRVFpFTEVOQlF6ZEVMRU5CUVVNN1VVRkRSaXhaUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEcxQ1FVRnRRaXhEUVVGRE8xRkJRek5ETEVOQlFVTXNXVUZCV1N4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFdEJRVXNzUTBGQlF5eFhRVUZYTEVOQlFVTXNTMEZCU3l4RFFVRkRMR0ZCUVdFc1EwRkJReXhEUVVGRE8wdEJRemxFTzFOQlFVMHNTVUZCU1N4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRMRVZCUVVVN1VVRkRNVVFzV1VGQldTeERRVUZETEdOQlFXTXNSMEZCUnl4cFFrRkJhVUlzUTBGQlF6dFJRVU5vUkN4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExHZENRVUZuUWl4RFFVRkRPMHRCUTNoRE8xTkJRVTBzU1VGQlNTeFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJReXhSUVVGUkxFTkJRVU1zWTBGQll5eERRVUZETEVWQlFVVTdVVUZETDBRc1dVRkJXU3hEUVVGRExHTkJRV01zUjBGQlJ5eHBRa0ZCYVVJc1EwRkJRenRSUVVOb1JDeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMREJDUVVFd1FpeERRVUZETzB0QlEyeEVPMU5CUVUwc1NVRkJTU3hSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETEZGQlFWRXNRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRExFVkJRVVU3VVVGRE1VUXNXVUZCV1N4RFFVRkRMR05CUVdNc1IwRkJSeXhwUWtGQmFVSXNRMEZCUXp0UlFVTm9SQ3haUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITERKQ1FVRXlRaXhEUVVGRE8wdEJRMjVFTzBsQlJVUXNTVUZCU1N4WlFVRlpMRU5CUVVNc1QwRkJUenRSUVVGRkxGRkJRVkVzUTBGQlF5eFhRVUZYTEVOQlFVTXNXVUZCV1N4RFFVRkRMRU5CUVVNN08xRkJRM2hFTEZGQlFWRXNRMEZCUXl4WFFVRlhMRVZCUVVVc1EwRkJRenRCUVVNM1FpeERRVUZETEVOQlFVTXNRMEZCUXlKOSJdLCJuYW1lcyI6WyJwcmVzZW5jZSIsIlByZXNlbmNlIiwiY2xpZW50SWQiLCJicm93c2luZ1RpbWVzdGFtcCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJ0aXRsZSIsIm9uIiwiYXN5bmMiLCJwcmVzZW5jZURhdGEiLCJsYXJnZUltYWdlS2V5IiwiZG9jdW1lbnQiLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwic3RhcnRUaW1lc3RhbXAiLCJkZXRhaWxzIiwiaW5jbHVkZXMiLCJzbWFsbEltYWdlS2V5IiwicXVlcnlTZWxlY3RvciIsInN0YXRlIiwidGV4dENvbnRlbnQiLCJzcGxpdCIsInNldEFjdGl2aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==
undefined;