var __webpack_exports__={};const presence=new Presence({clientId:"839150832036872213"}),time=Math.floor(Date.now()/1e3);let strings,oldLang,iframeData={};async function getStrings(){return presence.getStrings({viewHome:"general.viewHome",viewProduct:"general.viewProduct",viewing:"general.viewing",viewProfile:"general.viewProfile",readingArticle:"general.readingArticle",comparing:"apple.comparing",viewService:"apple.viewService",healthcare:"apple.healthcare",productsPlatform:"apple.productsPlatform",healthRecords:"apple.healthRecords",overview:"apple.overview",purchasingAdvice:"apple.purchasingAdvice",storeFinder:"apple.storeFinder",viewEvent:"apple.viewEvent",supplierResp:"apple.supplierResp",contact:"apple.contact",chooseLang:"apple.chooseLang",other:"apple.other",shopBands:"apple.shopBands",shopAccessories:"apple.shopAccessories",shopStudio:"apple.shopStudio",shopFavorites:"apple.shopFavorites",shopGiftCards:"apple.shopGiftCards",shopPlanVisit:"apple.shopPlanVisit",shopRefurbished:"apple.shopRefurbished",shopBag:"apple.shopBag",shopBagSummary:"apple.shopBagSummary",support:"apple.support",supportArticle:"apple.supportArticle",appStoreCon:"apple.appStoreCon",iCloudMail:"apple.iCloudMail",iCloudContacts:"apple.iCloudContacts",iCloudCalendar:"apple.iCloudCalendar",iCloudPhotos:"apple.iCloudPhotos",iCloudNotes:"apple.iCloudNotes",iCloudReminders:"apple.iCloudReminders",iCloudPagesCreate:"apple.iCloudPagesCreate",iCloudKeynoteWait:"apple.iCloudKeynoteWait",devNew:"apple.devNew",devSubmit:"apple.devSubmit",devPhonePad:"apple.devPhonePad",devDistribution:"apple.devDistribution",devDocs:"apple.devDocs",devHIG:"apple.devHIG",devResources:"apple.devResources",devFeatures:"apple.devFeatures",devGames:"apple.devGames",forumTags:"apple.forumTags",forumPreferences:"apple.forumPreferences",forumCreateThread:"apple.forumCreateThread",forumRegister:"apple.forumRegister",devVideos:"apple.devVideos",devVidTopic:"apple.devVidTopic",devNews:"apple.devNews",devReleases:"apple.devReleases",statePaused:"general.paused",statePlaying:"general.playing",btnViewProduct:"apple.btnViewProduct",btnViewService:"apple.btnViewService",btnReadArticle:"general.buttonReadArticle",btnViewEvent:"apple.btnViewEvent",btnViewOS:"apple.btnViewOS",btnViewStudio:"apple.btnViewStudio",btnViewApp:"apple.btnViewApp",btnViewDeveloper:"apple.btnViewDeveloper",btnViewWWDC:"apple.btnViewWWDC",btnViewThread:"apple.btnViewThread",btnViewTags:"apple.btnViewTags",btnViewProfile:"apple.btnViewProfile",btnViewPage:"general.buttonViewPage",btnGViewProfile:"general.buttonViewProfile",btnGWatchVideo:"general.buttonWatchVideo"},await presence.getSetting("lang").catch((()=>"en")))}const assets={icloud_calendar:"https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/8.png",icloud_photos:"https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/9.png",icloud_mail:"https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/10.png",icloud_contacts:"https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/11.png",icloud_notes:"https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/12.png",icloud_find:"https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/13.png",icloud_pages:"https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/14.png",icloud_keynote:"https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/5.png",icloud_reminders:"https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/15.png",icloud_numbers:"https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/16.png"};presence.on("UpdateData",(async()=>{const e=window.location.pathname.toLowerCase().split("/"),[t,s,a,i,n,o,r]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("timeElapsed"),presence.getSetting("showButtons"),presence.getSetting("logo"),presence.getSetting("devProfileBtn"),presence.getSetting("iCloudMailSender"),presence.getSetting("iCloudMailSubject")]),l={largeImageKey:["https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/logo.png","https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/0.png"][i]||"https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/logo.png"};function p(){return document.querySelector("div.ac-ln-title>a")?.textContent||document.title.replace(" - Apple - Apple","").replace(" - Apple","").replace(/ *\([^)]*\) */g,"")}if(oldLang&&oldLang===t||(oldLang=t,strings=await getStrings()),"shop"!==e[1]&&"shop"!==e[2]&&"www.apple.com"===window.location.hostname)if(2===e.length)l.details="Home";else if(["ipad","ipad-air","ipad-pro","ipad-10.2","ipad-mini","apple-pencil","ipad-keyboards","airpods","iphone","iphone-13-pro","iphone-13","iphone-12","iphone-se","airtag","mac","macbook-air","macbook-pro-13","macbook-pro-14-and-16","imac-24","imac-27","mac-pro","mac-mini","pro-display-xdr","watch","apple-watch-series-7","apple-watch-se","apple-watch-series-3","apple-watch-nike","apple-watch-hermes","airpods","airpods-pro","airpods-max","airpods-2nd-generation","airpods-3rd-generation","homepod-mini","ipod-touch","apple-tv-4k"].find((t=>e.includes(t))))e.includes("compare")?(l.details=strings.comparing,l.state=document.title.split("-")[0].replace(/ *\([^)]*\) */g,"")):(l.details=strings.viewProduct,l.state=p()),a&&(l.buttons=[{label:strings.btnViewProduct,url:window.location.href}]);else if(["apple-fitness-plus","tv","apple-tv-plus","airplay","apple-tv-app","apple-arcade","icloud","apple-news","apple-one","apple-card","apple-books","app-store","music","apple-music","maps"].find((t=>e.includes(t))))l.details=strings.viewService,l.state=p(),a&&(l.buttons=[{label:strings.btnViewService,url:window.location.href}]);else if(e.includes("newsroom"))l.details="Newsroom",e.includes("topics")?l.state=document.querySelector("h1.section-head")?.getAttribute("aria-label"):(l.state=document.querySelector(".hero-headline")?.textContent,a&&(l.buttons=[{label:strings.btnReadArticle,url:window.location.href}]));else if(e.includes("today"))l.details="Today at Apple",e.includes("feature")?(l.state=document.querySelector("h1.editorial-page__header-headline")?.textContent||"Unknown",a&&(l.buttons=[{label:strings.btnReadArticle,url:window.location.href}])):e.includes("event")?(l.state=document.querySelector("h1.typography-headline-elevated")?.textContent||document.querySelector("h1.typography-headline-reduced")?.textContent||"Unknown",a&&(l.buttons=[{label:strings.btnViewEvent,url:window.location.href}])):document.querySelector("h1.typography-headline-elevated")&&(l.state=document.querySelector("h1.typography-headline-elevated")?.textContent||document.querySelector("h1.typography-headline-reduced")?.textContent||"Unknown",a&&(l.buttons=[{label:strings.btnReadArticle,url:window.location.href}]));else if(e.includes("healthcare"))l.details=strings.healthcare,e.includes("apple-watch")?l.state="Apple Watch":e.includes("products-platform")?l.state=strings.productsPlatform:e.includes("health-records")?l.state=strings.healthRecords:l.state=strings.overview;else if(e.includes("retail"))e.includes("instore-shopping-session")?l.details=strings.purchasingAdvice:l.details=strings.storeFinder;else if(e.includes("ios")||e.includes("watchos")||e.includes("ipados")||e.includes("macos")){const e=document.querySelector("div.ac-ln-title>a")||document.querySelector("h1.typography-hero-eyebrow.hero-eyebrow.hero-copy-item");l.details=strings.viewing,l.state=e?.textContent||"Unknown",a&&e&&(l.buttons=[{label:strings.btnViewOS.replace("{0}",e.textContent.replace("Preview","")).substring(0,30),url:window.location.href}])}else if(e.includes("apple-events")){const e=document.querySelector("h1.hero-headline.typography-headline")||document.querySelector("p.hero-subhead.typography-quote-reduced");l.details=e?`${strings.viewEvent}:`:"Apple Events",e&&(l.state=e.textContent),a&&e&&(l.buttons=[{label:strings.btnViewEvent,url:window.location.href}])}else e.includes("store-opening-letter")?l.details="Covidâ€‘19 store information":e.includes("trade-in")?l.details="Apple Trade In":e.includes("supplier-responsibility")?l.details=strings.supplierResp:e.includes("contact")?l.details=strings.contact:e.includes("choose-country-region")?l.details=strings.chooseLang:l.details=strings.other;else if("shop"!==e[1]&&"shop"!==e[2]||"www.apple.com"!==window.location.hostname)switch(window.location.hostname){case"support.apple.com":case"getsupport.apple.com":{const t=["iphone","mac","ipad","watch","airpods","music","tv","displays"];l.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/2.png",t.find((t=>e.includes(t)))?(l.details=strings.support,l.state=document.querySelector("h1.pageTitle-heading")?.textContent||document.querySelector("h1#main-title")?.textContent||"Unknown",a&&(l.buttons=[{label:strings.btnReadArticle,url:window.location.href}])):document.querySelector("div.mod-date")?(l.details=strings.supportArticle,l.state=document.querySelector("h1#howto-title")?.textContent||"Unknown",a&&(l.buttons=[{label:strings.btnReadArticle,url:window.location.href}])):"getsupport.apple.com"===window.location.hostname?l.details=strings.support:(l.details=strings.support,l.state="Home");break}case"apps.apple.com":l.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/3.png",e.includes("app")?(document.querySelector("p.we-connecting__instructions")?(l.details="App Store",l.state=strings.appStoreCon):(l.details="App Store - App:",l.state=document.querySelector("h1.product-header__title.app-header__title")?.childNodes[1].textContent.trim()),a&&(l.buttons=[{label:strings.btnViewApp,url:window.location.href}])):e.includes("developer")&&(document.querySelector("p.we-connecting__instructions")?(l.details="App Store",l.state=strings.appStoreCon):(l.details="App Store - Developer:",l.state=document.querySelector("h1.page-header__title")?.textContent),a&&(l.buttons=[{label:strings.btnViewDeveloper,url:window.location.href}]));break;case"www.icloud.com":if(l.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/4.png",l.details="iCloud",e[1])switch("iclouddrive"!==e[1]&&(l.largeImageKey=assets[`icloud_${e[1]}`],l.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/4.png"),e[1]){case"mail":if(l.state=strings.iCloudMail,iframeData)if(l.details=`iCloud - ${strings.iCloudMail}`,l.state=iframeData.currentMailbox,iframeData.currentMailSubject){l.details=`iCloud - ${strings.iCloudMail} - ${iframeData.currentMailbox}`;let e=r?iframeData.currentMailSubject:"";iframeData.currentMailSender&&o&&(e=`${iframeData.currentMailSender}${""!==e?`: ${e}`:""}`),l.state=e}else l.state=iframeData.currentMailbox;else l.state=strings.iCloudMail;break;case"contacts":l.state=strings.iCloudContacts;break;case"calendar":l.state=strings.iCloudCalendar;break;case"photos":l.state=strings.iCloudPhotos;break;case"iclouddrive":l.state="Drive";break;case"notes":l.state=strings.iCloudNotes;break;case"reminders":l.state=strings.iCloudReminders;break;case"pages":e[2]?(l.details="iCloud Pages","create"===e[2]?l.state=strings.iCloudPagesCreate:l.state=document.querySelector("div.sc-view.iw-document-status-name-label.iw-ellipsis.sc-static-layout")?.textContent):l.state="Pages";break;case"numbers":l.state="Numbers";break;case"keynote":e[2]?(l.details="iCloud Keynote","create"===e[2]?l.state=strings.iCloudPagesCreate:l.state=document.querySelector("div.sc-view.iw-document-status-name-label.iw-ellipsis.sc-static-layout")?.textContent):l.state="Keynote";break;default:"keynote-live"===e[1]&&e[2]?(l.details="iCloud Keynote Live",l.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/5.png","none"===document.querySelector("iframe")?.style.display&&(l.state=strings.iCloudKeynoteWait)):"fmf"===e[1]?l.state="Find My Friends":"find"===e[1]&&(l.state="Find My")}else l.state="Launchpad";break;case"card.apple.com":l.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/6.png",l.details="Apple Card",e[1]?"apply"===e[1]&&(l.state="Apply"):l.state="Home";break;case"developer.apple.com":{const t=["discover","develop","distribute","support","account","download","bug-reporting","sf-symbols","contact","localization","accessories","licensing-trademarks","system-status","widgets"],s=document.querySelector("body")?.id||document.querySelector("body").classList[0]?.replace("nav-","");if(l.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/7.png",l.details="Apple Developer",l.state="Home",t.find((t=>e[1]===t)))l.state=document.querySelector(`a.ac-gn-link.ac-gn-link-${s}>span`)?.textContent||document.querySelector("section.section-hero>h1.section-headline")?.textContent||document.querySelector("h2.localnav-title>a")?.textContent||"Unknown";else if("custom-apps"===e[1])l.state=document.querySelector("h2.localnav-title>a")?.textContent||document.querySelector("h1.typography-headline")?.textContent||"Unknown";else if(e[1].startsWith("wwdc")){const t=document.querySelector("a.ac-ln-title-logo>img")?.getAttribute("alt");l.state=t||"Unknown",e[2]&&(l.details=t,l.state=document.querySelector("span.localnav-menu-link.current")?.textContent||document.querySelector("h1.typography-headline")?.textContent||"Unknown"),a&&t&&(l.buttons=[{label:strings.btnViewWWDC.replace("{0}",t),url:`https://developer.apple.com/${t.toLowerCase()}/`}])}else switch(e[1]){case"enroll":l.details="Developer Program","purchase"===e[2]&&(l.state="Enrollment");break;case"ios":case"ipados":case"tvos":case"watchos":case"macos":case"mac-catalyst":case"xcode":case"swift":case"swift-playgrounds":case"app-clips":l.details=document.querySelector("h2.localnav-title>a")?.textContent||"Apple Developer",e[2]?"whats-new"===e[2]?l.state=strings.devNew:"submit"===e[2]?l.state=strings.devSubmit:"macos"===e[1]&&"iphone-and-ipad-apps"===e[2]?l.state=strings.devPhonePad:"macos"===e[1]&&"distribution"===e[2]?l.state=strings.devDistribution:"watchos"===e[1]&&"features"===e[2]?l.state=strings.devFeatures:l.state=document.querySelector("h1.typography-headline")?.textContent||"Other":l.state=strings.overview;break;case"documentation":{const e=document.querySelector("span.current.item");l.details=strings.devDocs,l.state=e?.textContent||"Home",a&&e&&(l.buttons=[{label:strings.btnViewPage,url:window.location.href}]);break}case"design":if(l.details="Design",e[2])switch(e[2]){case"whats-new":l.state=strings.devNew;break;case"human-interface-guidelines":l.state=strings.devHIG;break;case"resources":l.state=strings.devResources;break;default:l.state=document.querySelector("h1.typography-headline")?.textContent||"Other"}else l.state="Overview";break;case"safari":case"app-store-connect":case"business":case"app-store":case"education":case"classkit":case"programs":l.details=document.querySelector("h2.localnav-title>a")?.textContent||"Apple Developer",l.state=document.querySelector(`a.localnav-menu-link.link-${s}`)?.textContent||document.querySelector("span.localnav-menu-link.current")?.textContent||document.querySelector("a.localnav-menu-link.current")?.textContent||"Other";break;case"testflight":l.state="Testflight";break;case"games":l.state=strings.devGames;break;case"forums":if(l.details="Forum","thread"===e[2])l.details="Forum - Thread",l.state=document.querySelector("div.header>h1.title")?.textContent||"Unknown",l.buttons=[{label:strings.btnViewThread,url:window.location.href}];else if("tags"===e[2])l.details=strings.forumTags,l.state=document.querySelector("div.tag-content>h2.tag-title")?.textContent||"Unknown",l.buttons=[{label:strings.btnViewTags,url:window.location.href}];else if("profile"===e[2]&&e[3]){const t=document.querySelector("div.user-name>h2.user-nickname")?.textContent;l.details=strings.viewProfile,"preferences"===e[3]?l.state=strings.forumPreferences:(l.state=t||"Unknown",t&&(l.buttons=[{label:strings.btnViewProfile.replace("{0}",t),url:window.location.href}]))}else"create"===e[2]?l.state=strings.forumCreateThread:"register"===e[2]&&(l.state=strings.forumRegister);a&&n&&"https://developer.apple.com/forums/login"!==document.querySelector("li.menu-item>a.menu-item-link")?.href&&(l.buttons=[{label:strings.btnGViewProfile,url:document.querySelector("a.view-profile-link")?.href||`https://developer.apple.com/forums/profile/${document.querySelector("span.user-name")?.textContent}`}]);break;case"videos":if(l.details=strings.devVideos,"featured"===e[2]||"design"===e[2]||"developer-tools"===e[2]||"frameworks"===e[2]||"graphics-and-games"===e[2]||"media"===e[2]||"app-store-and-distribution"===e[2]||"all-videos"===e[2])l.details=strings.devVidTopic,l.state=document.querySelector("section.inline-block>h1.collection-title")?.textContent||document.title.replace(" - Videos - Apple Developer","")||"Other";else if("play"===e[2]){const e=document.querySelector("video#video");l.state=document.querySelector("li.supplement.details>h1")?.textContent,e&&([l.startTimestamp,l.endTimestamp]=presence.getTimestamps(e.currentTime,e.duration),e.paused?(delete l.endTimestamp,l.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",l.smallImageText=strings.statePaused):(l.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",l.smallImageText=strings.statePlaying)),a&&(l.buttons=[{label:strings.btnGWatchVideo,url:window.location.href}])}else l.state=document.querySelector("section.inline-block>h1.collection-title")?.textContent||document.querySelector("span.localnav-menu-link.current")?.textContent||"Other";break;case"news":l.details=strings.devNews,"releases"===e[2]&&(l.state=strings.devReleases),new URLSearchParams(window.location.search).get("id")&&(l.state=document.querySelector("h2.article-title")?.textContent,a&&(l.buttons=[{label:strings.btnReadArticle,url:window.location.href}]));break;case"shareplay":l.state="SharePlay"}break}}else{const t="shop"===e[1]?2:3;if(l.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/A/Apple/assets/1.png",e[t])if(e[t].startsWith("buy-")){const s=document.querySelector("span.as-chiclets-text")?.textContent||document.querySelector("a.localnav-title.localnav-title-image")?.textContent||document.querySelector("a.localnav-title")?.textContent;l.details=strings.viewProduct,l.state=s,a&&(l.buttons=[{label:strings.btnViewProduct,url:`https://www.apple.com/shop/${e[t]}/${e[t+1]}`}])}else if("product"===e[t])l.details=strings.viewProduct,l.state=document.querySelector("h1.rf-pdp-title")?.textContent,a&&(l.buttons=[{label:strings.btnViewProduct,url:window.location.href}]);else if("watch"===e[t])l.details="Shop","bands"===e[t+1]?l.state=strings.shopBands:"accessories"===e[t+1]&&(l.state=strings.shopAccessories);else if("accessories"===e[t+1])l.details="Shop",l.state=document.querySelector("a.localnav-title")?.textContent;else switch(e[t]){case"studio":{const s=document.querySelector("div.as-designstudio-title>a>img")?.getAttribute("alt");l.details=strings.shopStudio,l.state=s,a&&(l.buttons=[{label:strings.btnViewStudio.replace("{0}",s),url:`https://www.apple.com/shop/studio/${e[t+1]}`}]);break}case"favorites":l.details="Shop",l.state=strings.shopFavorites;break;case"account":l.details="Shop",l.state="Account";break;case"accessories":l.details="Shop",l.state=strings.shopAccessories;break;case"gift-cards":l.details="Shop",l.state=strings.shopGiftCards;break;default:if("browse"===e[t]&&"plan_your_visit"===e[t+2])l.details="Shop",l.state=strings.shopPlanVisit;else if("refurbished"===e[t])l.details="Shop",l.state=strings.shopRefurbished;else if("bag"===e[t]){let e=document.querySelector("div.rs-summary-value")?.textContent;const t=document.querySelector("div.rs-summary-value span.nowrap span.visuallyhidden");e?(e=e.replace(document.querySelector("div.rs-summary-value span.nowrap span[aria-hidden='true']")?.textContent??"/mo.",""),t&&(e=e.replace(t.textContent,` ${t.textContent}`))):e="$0",l.details=strings.shopBag,l.state=strings.shopBagSummary.replace("{0}",e)}else l.details="Shop",l.state=strings.other}else l.details="Shop",l.state="Home"}s&&!window.location.href.startsWith("https://developer.apple.com/videos/play")&&(l.startTimestamp=time),l.details?presence.setActivity(l):presence.setActivity()})),presence.on("iFrameData",(e=>{iframeData=e}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;