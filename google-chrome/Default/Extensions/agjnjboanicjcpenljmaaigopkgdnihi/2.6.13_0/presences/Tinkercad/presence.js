"use strict";var __webpack_exports__={};const handleDesigns=(e,t)=>{switch(e){case"3d":t.details="Viewing 3D designs",t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/T/Tinkercad/assets/0.png",t.smallImageText="3D";break;case"circuits":t.details="Viewing circuits",t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/T/Tinkercad/assets/1.png",t.smallImageText="circuit";break;case"codeblocks":t.details="Viewing codeblocks",t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/T/Tinkercad/assets/2.png",t.smallImageText="code";break;case"bin":t.details="Viewing Trash Can",t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/T/Tinkercad/assets/3.jpeg",t.smallImageText="trash"}};function selectDashboardPage(e,t,s){switch(t){case"":e.details="In Dashboard";break;case"classes":e.details="Viewing Classes";break;case"designs":handleDesigns(s,e);break;case"collections":e.details="Viewing Collections";break;case"tutorials":e.details="Viewing Tutorials";break;case"challenges":e.details="Viewing Challenges";break;case"bin":e.details="Viewing Trash Can"}}function handleThing(e,t,s){if(t){const t=document.querySelector("#design-detail-username")?.textContent||null,i=document.querySelector(".editor-3d-container")||null,a=document.querySelector(".editor")||null,n=document.title,l=n.split("design")[0]?.trim()||null,c=document.querySelector(".sitemenu__title__span")||document.querySelector("#topnav-title")||null;if(s)e.details=`Editing a ${l} design`,e.state=c?.textContent||"",e.startTimestamp=Math.floor(Date.now()/1e3);else{const s=document.querySelector(".user-lockup-type").textContent.replace("by","").trim();if(document.querySelector(".design-detail-top-public")){if(e.details=`Viewing ${n}`,e.state=`By ${t}`,i)e.details+=" (3D interactive)";else if(a){const t=document.querySelector(".sitemenu__right").querySelector("[class*='active']").getAttribute("href");let s;s="#breadboard"===t?"Circuit View":"#schematic_view"===t?"Schematic View":"Component List",e.details+=` (in ${s})`}e.buttons=[{label:`View ${s}`,url:document.location.href}]}else document.querySelector(".design-detail-top-private")&&(e.details=`Viewing Private ${s}`,delete e.smallImageKey,delete e.buttons)}}else e.state="Browing the Community Gallery"}function handleCodeblocks(e,t){const s=document.querySelector(".design-detail-header-title")?.textContent??"",i=document.querySelector("#design-detail-username")?.textContent??"";if(t){const t=document.querySelector(".header-group")?.querySelector(".inline-text-input")?.textContent;e.details=`Editing ${t} (codeblock)`,delete e.buttons}else document.querySelector(".design-detail-top-public")?(e.details=`Viewing ${s} (codeblock)`,e.state=`By ${i}`,e.buttons=[{label:"View codeblock",url:document.location.href}]):(delete e.buttons,delete e.details,e.details="Editing Code Block")}const presence=new Presence({clientId:"1217153856665026580"});presence.on("UpdateData",(async()=>{if(!document.location.toString())return;const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/Tinkercad/assets/logo.png",name:"Tinkercad",type:0},[,t,s,i]=document.location.pathname.split("/");switch(t){case"dashboard":selectDashboardPage(e,s,i);break;case"things":handleThing(e,s,i?.includes("edit"));break;case"codeblocks":handleCodeblocks(e,s?.includes("edit"));break;default:e.details=`Viewing ${document.title}`}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;