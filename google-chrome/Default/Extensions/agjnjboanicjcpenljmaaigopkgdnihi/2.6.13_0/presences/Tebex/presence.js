var __webpack_exports__={};const presence=new Presence({clientId:"974646056161804398"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/Tebex/assets/logo.jpg",startTimestamp:browsingTimestamp},{hostname:t,href:a,pathname:s}=document.location,o=s.split("/"),i=await presence.getSetting("buttons"),n=document.querySelector('[autocapitalize="sentences"]');switch(t){case"www.tebex.io":case"tebex.io":switch(o[1]){case"store":e.details=`Viewing store function ${document.querySelector('[class="text-white opacity-5 hover-opacity-10  opacity-10 "]')?.textContent.toLowerCase()}`,e.buttons=[{label:"View The Store",url:a}];break;case"games":e.details="Viewing all games";break;case"game-studios":e.details="Viewing info for game studios",e.buttons=[{label:"View Info",url:a}];break;case"partners":e.details="Viewing partners";break;case"contact":e.details="Viewing contact info";break;case"":e.details="Viewing the home page";break;default:e.details=`Viewing ${document.querySelector('[class="btn btn-outline-white dropdown-toggle btn-lg mx-3"]').textContent.trim()}'s monetisation options`}break;case"docs.tebex.io":n?.value?(e.details="Searching the docs for",e.state=n?.value,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):(e.details=`Reading the ${document.querySelector('[data-testid="page.title"]')?.textContent} page`,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.buttons=[{label:"Read Docs",url:a}]);break;default:{const t=`Viewing ${document.querySelector("[class*=store-name]")?.textContent??document.querySelector("head > title")?.textContent.split("|")[0].trim()}'s`;switch(o[1]){case"":e.details=`${t} homepage`;break;case"category":""===o[2]?e.details=`${t} categories`:e.details=`${t} ${document.querySelector('[class="page-title"]')?.textContent.toLowerCase()??document.querySelectorAll('li[class="active"]')[1]?.textContent.toLowerCase()}`;break;case"about":e.details=`${t} about page`,e.buttons=[{label:"View The About Page",url:a}]}break}}n||!i||e.buttons?i||delete e.buttons:e.buttons=[{label:"View Page",url:a}],e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;