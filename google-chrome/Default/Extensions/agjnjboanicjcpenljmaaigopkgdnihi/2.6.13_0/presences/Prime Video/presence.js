var __webpack_exports__={};const presence=new Presence({clientId:"705139844883677224"}),strings=presence.getStrings({paused:"general.paused",playing:"general.playing"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={type:3,largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Prime%20Video/assets/logo.png"};e.startTimestamp=browsingTimestamp;const t=document.querySelector(".webPlayerSDKUiContainer > div > div > div > div:nth-child(2) > div > div:nth-child(4) > div > div:nth-child(2) > div:nth-child(2) > div > div > div > h1")?.textContent||document.querySelector(".atvwebplayersdk-title-text")?.textContent,i=document.querySelector(".av-detail-section > div > h1")?.textContent||document.querySelector(".av-detail-section > div > h1 > div > img")?.alt;if(t||i){let s=document.querySelector(".scalingVideoContainer > div.scalingVideoContainerBottom > div > video");(null===s||isNaN(s.duration))&&(s=document.querySelector("video")),(null===s||isNaN(s.duration))&&(s=document.querySelector("video:nth-child(2)"));const a=document.querySelector(".webPlayerSDKUiContainer > div > div > div > div:nth-child(2) > div > div:nth-child(4) > div > div:nth-child(2) > div:nth-child(2) > div > div > div > h2")||document.querySelector(".atvwebplayersdk-subtitle-text");if(s&&t&&!s.className.includes("tst"))if(e.details=t,a&&a.textContent&&a.textContent.trim()!==t.trim()&&(e.state=a.textContent),s.paused)e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText=(await strings).paused,delete e.startTimestamp;else{const[t,i]=document.querySelector(".atvwebplayersdk-timeindicator-text").textContent.trim().split(" / ");[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(t),presence.timestampFromFormat(i)+presence.timestampFromFormat(t)),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=(await strings).playing}else if(s&&!s.className.includes("tst"))if(""!==i&&(e.details=i),s.paused)e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText=(await strings).paused,delete e.startTimestamp;else{const[t,i]=document.querySelector(".atvwebplayersdk-timeindicator-text").textContent.trim().split(" / ");[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(t),presence.timestampFromFormat(i)+presence.timestampFromFormat(t)),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=(await strings).playing}else i?(e.details="Viewing:",e.state=i):document.location.pathname.includes("shop")?e.details="Browsing the store...":e.details="Browsing..."}else document.location.pathname.includes("/home/")?e.details="Browsing...":document.location.pathname.includes("shop")?e.details="Browsing the store...":document.location.pathname.includes("/tv/")?e.details="Browsing TV-Series":document.location.pathname.includes("/movie/")?e.details="Browsing Movies":document.location.pathname.includes("/kids/")?e.details="Browsing Movies for kids":document.location.pathname.includes("/search/")&&document.querySelector(".av-refine-bar-summaries")&&(e.details="Searching for:",[e.state]=document.querySelector(".av-refine-bar-summaries").textContent.split(/["„]/)[1].split(/[”"]/),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png");e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;