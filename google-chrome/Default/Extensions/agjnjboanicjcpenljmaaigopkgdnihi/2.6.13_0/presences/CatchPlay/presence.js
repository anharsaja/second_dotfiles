var __webpack_exports__={};const presence=new Presence({clientId:"758234121574678588"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused",browsing:"general.browsing"});presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/C/CatchPlay/assets/logo.png"},t=await presence.getSetting("buttons");if(document.location.pathname.includes("/watch")){const s=document.querySelector(".player-box video");t&&(e.buttons=[{label:"Watch",url:document.URL}]),s&&!isNaN(s.duration)&&(document.querySelector(".CPplayer-header-subtitle")?e.state=` ${document.querySelector(".CPplayer-header-subtitle").textContent}`:e.state="Movie",[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(Math.floor(s.currentTime),Math.floor(s.duration)),e.details=` ${document.querySelector(".CPplayer-header-title span").textContent}`,e.smallImageKey=s.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=s.paused?(await strings).pause:(await strings).play,s.paused&&(delete e.startTimestamp,delete e.endTimestamp),presence.setActivity(e,!s.paused))}else e.details=(await strings).browsing,presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLFNBQVcsSUFBSUMsU0FBUyxDQUMxQkMsU0FBVSx1QkFDVkMsUUFBVUgsU0FBU0ksV0FBVyxDQUM5QkMsS0FBTSxrQkFDTkMsTUFBTyxpQkFDUEMsU0FBVSxxQkFFZFAsU0FBU1EsR0FBRyxjQUFjQyxVQUN0QixNQUFNQyxFQUFlLENBQ2pCQyxjQUFlLGtFQUNoQkMsUUFBZ0JaLFNBQVNhLFdBQVcsV0FDdkMsR0FBSUMsU0FBU0MsU0FBU0MsU0FBU0MsU0FBUyxVQUFXLENBQy9DLE1BQU1DLEVBQVFKLFNBQVNLLGNBQWMscUJBQ2pDUCxJQUNBRixFQUFhRSxRQUFVLENBQ25CLENBQ0lRLE1BQU8sUUFDUEMsSUFBS1AsU0FBU1EsT0FJdEJKLElBQVVLLE1BQU1MLEVBQU1NLFlBQ2xCVixTQUFTSyxjQUFjLDZCQUN2QlQsRUFBYWUsTUFBUSxJQUFJWCxTQUFTSyxjQUFjLDZCQUE2Qk8sY0FHN0VoQixFQUFhZSxNQUFRLFNBQ3hCZixFQUFhaUIsZUFBZ0JqQixFQUFha0IsY0FDdkM1QixTQUFTNkIsY0FBY0MsS0FBS0MsTUFBTWIsRUFBTWMsYUFBY0YsS0FBS0MsTUFBTWIsRUFBTU0sV0FDM0VkLEVBQWF1QixRQUFVLElBQUluQixTQUFTSyxjQUFjLCtCQUErQk8sY0FDakZoQixFQUFhd0IsY0FBZ0JoQixFQUFNaUIsT0FBUyxnREFBa0QsK0NBQzlGekIsRUFBYTBCLGVBQWlCbEIsRUFBTWlCLGNBQ3ZCaEMsU0FBU0csYUFDVEgsU0FBU0UsS0FDbEJhLEVBQU1pQixnQkFDQ3pCLEVBQWFpQixzQkFDYmpCLEVBQWFrQixjQUV4QjVCLFNBQVNxQyxZQUFZM0IsR0FBZVEsRUFBTWlCLFFBRWxELE1BRUl6QixFQUFhdUIsZUFBaUI5QixTQUFTSSxTQUN2Q1AsU0FBU3FDLFlBQVkzQixFQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3ByZXNlbmNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHByZXNlbmNlID0gbmV3IFByZXNlbmNlKHtcbiAgICBjbGllbnRJZDogXCI3NTgyMzQxMjE1NzQ2Nzg1ODhcIixcbn0pLCBzdHJpbmdzID0gcHJlc2VuY2UuZ2V0U3RyaW5ncyh7XG4gICAgcGxheTogXCJnZW5lcmFsLnBsYXlpbmdcIixcbiAgICBwYXVzZTogXCJnZW5lcmFsLnBhdXNlZFwiLFxuICAgIGJyb3dzaW5nOiBcImdlbmVyYWwuYnJvd3NpbmdcIixcbn0pO1xucHJlc2VuY2Uub24oXCJVcGRhdGVEYXRhXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBwcmVzZW5jZURhdGEgPSB7XG4gICAgICAgIGxhcmdlSW1hZ2VLZXk6IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9DL0NhdGNoUGxheS9hc3NldHMvbG9nby5wbmdcIixcbiAgICB9LCBidXR0b25zID0gYXdhaXQgcHJlc2VuY2UuZ2V0U2V0dGluZyhcImJ1dHRvbnNcIik7XG4gICAgaWYgKGRvY3VtZW50LmxvY2F0aW9uLnBhdGhuYW1lLmluY2x1ZGVzKFwiL3dhdGNoXCIpKSB7XG4gICAgICAgIGNvbnN0IHZpZGVvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGF5ZXItYm94IHZpZGVvXCIpO1xuICAgICAgICBpZiAoYnV0dG9ucykge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmJ1dHRvbnMgPSBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsYWJlbDogXCJXYXRjaFwiLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGRvY3VtZW50LlVSTCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmlkZW8gJiYgIWlzTmFOKHZpZGVvLmR1cmF0aW9uKSkge1xuICAgICAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuQ1BwbGF5ZXItaGVhZGVyLXN1YnRpdGxlXCIpKSB7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gYCAke2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuQ1BwbGF5ZXItaGVhZGVyLXN1YnRpdGxlXCIpLnRleHRDb250ZW50fWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gXCJNb3ZpZVwiO1xuICAgICAgICAgICAgW3ByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCwgcHJlc2VuY2VEYXRhLmVuZFRpbWVzdGFtcF0gPVxuICAgICAgICAgICAgICAgIHByZXNlbmNlLmdldFRpbWVzdGFtcHMoTWF0aC5mbG9vcih2aWRlby5jdXJyZW50VGltZSksIE1hdGguZmxvb3IodmlkZW8uZHVyYXRpb24pKTtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gYCAke2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuQ1BwbGF5ZXItaGVhZGVyLXRpdGxlIHNwYW5cIikudGV4dENvbnRlbnR9YDtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5ID0gdmlkZW8ucGF1c2VkID8gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9wYXVzZS5wbmdcIiA6IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvcGxheS5wbmdcIjtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlVGV4dCA9IHZpZGVvLnBhdXNlZFxuICAgICAgICAgICAgICAgID8gKGF3YWl0IHN0cmluZ3MpLnBhdXNlXG4gICAgICAgICAgICAgICAgOiAoYXdhaXQgc3RyaW5ncykucGxheTtcbiAgICAgICAgICAgIGlmICh2aWRlby5wYXVzZWQpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgcHJlc2VuY2VEYXRhLnN0YXJ0VGltZXN0YW1wO1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBwcmVzZW5jZURhdGEuZW5kVGltZXN0YW1wO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkocHJlc2VuY2VEYXRhLCAhdmlkZW8ucGF1c2VkKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSAoYXdhaXQgc3RyaW5ncykuYnJvd3Npbmc7XG4gICAgICAgIHByZXNlbmNlLnNldEFjdGl2aXR5KHByZXNlbmNlRGF0YSk7XG4gICAgfVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljSEpsYzJWdVkyVXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lKd2NtVnpaVzVqWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEZGQlFWRXNRMEZCUXp0SlFVTTFRaXhSUVVGUkxFVkJRVVVzYjBKQlFXOUNPME5CUXpsQ0xFTkJRVU1zUlVGRFJpeFBRVUZQTEVkQlFVY3NVVUZCVVN4RFFVRkRMRlZCUVZVc1EwRkJRenRKUVVNM1FpeEpRVUZKTEVWQlFVVXNhVUpCUVdsQ08wbEJRM1pDTEV0QlFVc3NSVUZCUlN4blFrRkJaMEk3U1VGRGRrSXNVVUZCVVN4RlFVRkZMR3RDUVVGclFqdERRVU0xUWl4RFFVRkRMRU5CUVVNN1FVRk5TaXhSUVVGUkxFTkJRVU1zUlVGQlJTeERRVUZETEZsQlFWa3NSVUZCUlN4TFFVRkxMRWxCUVVrc1JVRkJSVHRKUVVOd1F5eE5RVUZOTEZsQlFWa3NSMEZCYVVJN1VVRkRha01zWVVGQllTeHJSVUZCWVR0TFFVTXhRaXhGUVVORUxFOUJRVThzUjBGQlJ5eE5RVUZOTEZGQlFWRXNRMEZCUXl4VlFVRlZMRU5CUVZVc1UwRkJVeXhEUVVGRExFTkJRVU03U1VGRmVrUXNTVUZCU1N4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRVZCUVVVN1VVRkRiRVFzVFVGQlRTeExRVUZMTEVkQlFYRkNMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zYlVKQlFXMUNMRU5CUVVNc1EwRkJRenRSUVVNMVJTeEpRVUZKTEU5QlFVOHNSVUZCUlR0WlFVTmFMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWM3WjBKQlEzUkNPMjlDUVVORExFdEJRVXNzUlVGQlJTeFBRVUZQTzI5Q1FVTmtMRWRCUVVjc1JVRkJSU3hSUVVGUkxFTkJRVU1zUjBGQlJ6dHBRa0ZEYWtJN1lVRkRSQ3hEUVVGRE8xTkJRMFk3VVVGRFJDeEpRVUZKTEV0QlFVc3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zVVVGQlVTeERRVUZETEVWQlFVVTdXVUZEY0VNc1NVRkJTU3hSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETERKQ1FVRXlRaXhEUVVGRExFVkJRVVU3WjBKQlEzaEVMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRVWNzU1VGRGNFSXNVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkJReXd5UWtGQk1rSXNRMEZCUXl4RFFVRkRMRmRCUTNKRUxFVkJRVVVzUTBGQlF6dGhRVU5JT3p0blFrRkJUU3haUVVGWkxFTkJRVU1zUzBGQlN5eEhRVUZITEU5QlFVOHNRMEZCUXp0WlFVVndReXhEUVVGRExGbEJRVmtzUTBGQlF5eGpRVUZqTEVWQlFVVXNXVUZCV1N4RFFVRkRMRmxCUVZrc1EwRkJRenRuUWtGRGRrUXNVVUZCVVN4RFFVRkRMR0ZCUVdFc1EwRkRja0lzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4TFFVRkxMRU5CUVVNc1YwRkJWeXhEUVVGRExFVkJRemRDTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVU14UWl4RFFVRkRPMWxCUTBnc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eEpRVU4wUWl4UlFVRlJMRU5CUVVNc1lVRkJZU3hEUVVGRExEWkNRVUUyUWl4RFFVRkRMRU5CUVVNc1YwRkRka1FzUlVGQlJTeERRVUZETzFsQlEwZ3NXVUZCV1N4RFFVRkRMR0ZCUVdFc1IwRkJSeXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNhVVJCUVdNc1EwRkJReXdyUTBGQldTeERRVUZETzFsQlEzWkZMRmxCUVZrc1EwRkJReXhqUVVGakxFZEJRVWNzUzBGQlN5eERRVUZETEUxQlFVMDdaMEpCUTNwRExFTkJRVU1zUTBGQlF5eERRVUZETEUxQlFVMHNUMEZCVHl4RFFVRkRMRU5CUVVNc1MwRkJTenRuUWtGRGRrSXNRMEZCUXl4RFFVRkRMRU5CUVVNc1RVRkJUU3hQUVVGUExFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTTdXVUZEZUVJc1NVRkJTU3hMUVVGTExFTkJRVU1zVFVGQlRTeEZRVUZGTzJkQ1FVTnFRaXhQUVVGUExGbEJRVmtzUTBGQlF5eGpRVUZqTEVOQlFVTTdaMEpCUTI1RExFOUJRVThzV1VGQldTeERRVUZETEZsQlFWa3NRMEZCUXp0aFFVTnFRenRaUVVORUxGRkJRVkVzUTBGQlF5eFhRVUZYTEVOQlFVTXNXVUZCV1N4RlFVRkZMRU5CUVVNc1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzFOQlEyeEVPMHRCUTBRN1UwRkJUVHRSUVVOT0xGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NRMEZCUXl4TlFVRk5MRTlCUVU4c1EwRkJReXhEUVVGRExGRkJRVkVzUTBGQlF6dFJRVU5vUkN4UlFVRlJMRU5CUVVNc1YwRkJWeXhEUVVGRExGbEJRVmtzUTBGQlF5eERRVUZETzB0QlEyNURPMEZCUTBZc1EwRkJReXhEUVVGRExFTkJRVU1pZlE9PSJdLCJuYW1lcyI6WyJwcmVzZW5jZSIsIlByZXNlbmNlIiwiY2xpZW50SWQiLCJzdHJpbmdzIiwiZ2V0U3RyaW5ncyIsInBsYXkiLCJwYXVzZSIsImJyb3dzaW5nIiwib24iLCJhc3luYyIsInByZXNlbmNlRGF0YSIsImxhcmdlSW1hZ2VLZXkiLCJidXR0b25zIiwiZ2V0U2V0dGluZyIsImRvY3VtZW50IiwibG9jYXRpb24iLCJwYXRobmFtZSIsImluY2x1ZGVzIiwidmlkZW8iLCJxdWVyeVNlbGVjdG9yIiwibGFiZWwiLCJ1cmwiLCJVUkwiLCJpc05hTiIsImR1cmF0aW9uIiwic3RhdGUiLCJ0ZXh0Q29udGVudCIsInN0YXJ0VGltZXN0YW1wIiwiZW5kVGltZXN0YW1wIiwiZ2V0VGltZXN0YW1wcyIsIk1hdGgiLCJmbG9vciIsImN1cnJlbnRUaW1lIiwiZGV0YWlscyIsInNtYWxsSW1hZ2VLZXkiLCJwYXVzZWQiLCJzbWFsbEltYWdlVGV4dCIsInNldEFjdGl2aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==
undefined;