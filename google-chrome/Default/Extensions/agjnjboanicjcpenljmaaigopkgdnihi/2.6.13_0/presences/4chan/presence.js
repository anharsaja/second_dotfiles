var __webpack_exports__={};const presence=new Presence({clientId:"1195051461822914640"}),boards={"/3/":"3DCG","/a/":"Anime & Manga","/aco/":"Adult Cartoons","/adv/":"Advice","/an/":"Animals & Nature","/asp/":"Alternative Sports","/b/":"Random","/bant/":"International/Random","/biz/":"Business & Finance","/c/":"Anime/Cute","/cgl/":"Cosplay & EGL","/ck/":"Food & Cooking","/cm/":"Cute/Male","/co/":"Comics & Cartoons","/d/":"Hentai/Alternative","/diy/":"Do*It*Yourself","/e/":"Ecchi","/f/":"Flash","/fa/":"Fashion","/fit/":"Fitness","/g/":"Technology","/gd/":"Graphic Design","/gif/":"Adult GIF","/h/":"Hentai","/hc/":"Hardcore","/hm/":"Handsome Men","/hr/":"High Resolution","/i/":"Oekaki","/ic/":"Artwork/Critique","/his/":"History & Humanities","/int/":"International","/jp/":"Otaku Culture","/k/":"Weapons","/lit/":"Literature","/lgbt/":"LGBT","/m/":"Mecha","/mlp/":"Pony","/mu/":"Music","/news/":"Current News","/n/":"Transportation","/o/":"Auto","/out/":"Outdoors","/p/":"Photography","/po/":"Papercraft & Origami","/pol/":"Politically Incorrect","/pw/":"Professional Wrestling","/qst/":"Quests","/r/":"Adult Requests","/r9k/":"ROBOT9001","/s4s/":"Shit 4chan Says","/s/":"Sexy Beautiful Women","/sci/":"Science & Math","/soc/":"Cams & Meetups","/sp/":"Sports","/t/":"Torrents","/tg/":"Traditional Games","/toy/":"Toys","/trash/":"Off*topic","/trv/":"Travel","/tv/":"Television & Film","/u/":"Yuri","/v/":"Video Games","/vg/":"Video Game Generals","/vm/":"Video Games/Multiplayer","/vmg/":"Video Games/Mobile","/vip/":"Very Important Posts","/vp/":"PokÃ©mon","/vr/":"Retro Games","/vrpg/":"Video Games/RPG","/vst/":"Video Games/Strategy","/vt/":"Virtual YouTubers","/w/":"Anime/Wallpapers","/wg/":"Wallpapers/General","/wsg/":"Worksafe GIF","/wsr/":"Worksafe Requests","/x/":"Paranormal","/xs/":"Extreme Sports","/y/":"Yaoi"},browsingTimestamp=Math.floor(Date.now()/1e3),nsfwBoards=new Set(["/aco/","/bant/","/b/","/d/","/e/","/gif/","/hc/","/h/","/hm/","/hr/","/pol/","/r9k/","/r/","/s4s/","/s/","/soc/","/t/","/u/","/y/"]);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/0-9/4chan/assets/logo.png",startTimestamp:browsingTimestamp},{href:t,pathname:s}=document.location;if("/"===s)e.details="Viewing the front page";else if(s.startsWith("/faq"))e.details="Reading the FAQ";else if(s.startsWith("/rules"))e.details="Reading the rules";else if(s.startsWith("/4channews"))e.details="Viewing news posts";else{let a=!1;for(const t in boards)if(s.includes(t)){a=nsfwBoards.has(t),e.details=a?"Browsing a board":`Browsing ${t} - ${boards[t]}`;break}if(s.includes("/thread/"))if(a)e.state="Viewing a thread";else{const a=s.split("/").at(-1),i=document.querySelector(".subject").textContent;if(await presence.getSetting("showThumbnail")){const t=document.querySelector(`#f${a} .fileThumb img`);t&&(e.largeImageKey=`https:${t.getAttribute("src")}`)}e.buttons=[{label:"View Thread",url:t}],e.state=i?`>>${a} - "${i}"`:`>>${a}`}else s.includes("/archive")&&(e.state="Checking the archive")}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;