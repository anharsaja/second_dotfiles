var __webpack_exports__={};const presence=new Presence({clientId:"1013183483750907904"}),browsingTimestamp=Math.floor(Date.now()/1e3),statics={"":"Viewing homepage",pricing:"Comparing all plans",explore:"Exploring Patreon",home:"Viewing their feed",login:"Log in Patreon"},slideshow=presence.createSlideshow();presence.on("UpdateData",(async()=>{const e={startTimestamp:browsingTimestamp,largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Patreon/assets/logo.png"},t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Patreon/assets/logo.png",startTimestamp:browsingTimestamp},s=await presence.getSetting("buttons"),{pathname:a,href:i}=document.location,n=a.split("/");switch(n[1]){case"product":e.details="Viewing a plan",e.state=`Plan: ${n[2]}`;break;case"c":e.details="Viewing a page for creators",e.state=`For: ${{podcasts:"podcasters",video:"video creators",music:"musicians",visualartists:"visual artists",communities:"community leaders",writing:"writers & journalists",gaming:"gaming creators",nonprofits:"nonprofit organizations","tutorials-and-education":"education & tutorial creators","local-businesses":"local businesses"}[n[2]]}`;break;case"apps":2===n.length?e.details="Viewing apps available":(e.details="Viewing an app",e.state=document.querySelector(".Text_variantDisplayTextLg__NwCo5").textContent,e.buttons=[{label:"View app",url:i}]);break;case"settings":e.details="Editing their settings",e.state=`Page: ${document.querySelectorAll('a[aria-current="page"]')[1].textContent}`;break;case"search":i.includes("?q=")?(e.details="Searching",e.state=`Query: ${document.querySelector("input").getAttribute("value")}`,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):e.details="On searching page";break;case"posts":e.details=t.details="Viewing a post",e.state=document.querySelector('span[data-tag="post-title"]').textContent,t.state=`From ${document.querySelector('div[data-tag="metadata-wrapper"] > div > div').textContent}`,e.buttons=t.buttons=[{label:"View Post",url:i}],slideshow.addSlide("slidePostName",e,5e3),slideshow.addSlide("slideCreatorName",t,5e3);break;default:Object.keys(statics).includes(n[1])?e.details=statics[n[1]]:n[1].includes("messages")?e.details="Reading their messages":(e.details="Viewing a creator",e.state=document.querySelector("h1").textContent.trim(),e.buttons=[{label:"View Creator",url:i}])}s||(delete e.buttons,delete t.buttons),slideshow.getSlides().length>0?presence.setActivity(slideshow):e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;