var __webpack_exports__={};const presence=new Presence({clientId:"917456087299534858"}),browsingTimestamp=Date.now()/1e3;presence.on("UpdateData",(async()=>{let e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/L/Last.fm/assets/logo.png",smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/search.png",startTimestamp:browsingTimestamp};const[t,a,s]=await Promise.all([presence.getSetting("buttons"),presence.getSetting("timestamps"),presence.getSetting("cover")]),r={"/home":{details:"Home"},"/dashboard":{details:"Dashboard"},"/features":{details:"Features"},"/events":{details:"Events"},"/charts":{details:"Charts"},"/inbox":{details:"Inbox"},"/settings":{details:"Settings"},"/pro":{details:"Last.fm Pro"},"/about":{details:"About"},"/api":{details:"Developer API"},"/legal":{details:"Legal"},"/help":{details:"Help"},"/search":{details:"Searching for:",state:new URLSearchParams(document.location.search).get("q")},"/user":{details:"Viewing user:",state:document.querySelector("h1.header-title")?.textContent?.trim(),buttons:[{url:document.querySelector("h1.header-title > a")?.href,label:"View User"}]},"/music":{details:document.querySelector("body.album-overview-new")?"Viewing Album:":document.querySelector("body.artist-overview-new")?"Viewing Artist:":document.querySelector("body.track-overview-new")?"Viewing Track:":document.querySelector("body.namespace--music_bookmarks_overview")?"Viewing Bookmarks":"Music",largeImageKey:s&&document.querySelector("body.album-overview-new")?document.querySelector(".album-overview-cover-art > .cover-art > img")?.src??"https://cdn.rcd.gg/PreMiD/websites/L/Last.fm/assets/logo.png":"https://cdn.rcd.gg/PreMiD/websites/L/Last.fm/assets/logo.png",state:document.querySelector("h1.header-new-title")?.textContent,buttons:document.querySelector("body.album-overview-new")?[{url:document.URL,label:"View Album"}]:document.querySelector("body.artist-overview-new")?[{url:document.URL,label:"View Artist"}]:document.querySelector("body.track-overview-new")?[{url:document.URL,label:"View Track"}]:void 0}};for(const[t,a]of Object.entries(r))location.pathname.match(t)&&(e={...e,...a});if(!document.querySelector('[data-analytics-action="PlaybarResumeTrack"]')?.disabled){let t=document.querySelector('[data-analytics-action="PlaybarResumeTrack"]').className.endsWith("play");if(a){const a=presence.timestampFromFormat(document.querySelector("div.player-bar-progress-wrap > div > div > span").textContent.slice(1));Date.now()/1e3>=Date.now()/1e3+a&&(t=!0),t||(e.endTimestamp=Date.now()/1e3+a)}if(s){const t=document.querySelector(".player-bar-inner-wrap > .player-bar-artwork > img").src;e.largeImageKey=t.includes("player_default_album")?"https://cdn.rcd.gg/PreMiD/websites/L/Last.fm/assets/logo.png":t.replace("/174s/","/1024s/")}else e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/L/Last.fm/assets/logo.png";e.details="Listening to:",e.state=document.querySelector("p.player-bar-track.js-player-status")?.getAttribute("title"),e.smallImageKey=t?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=t?"Paused":"Playing",delete e.startTimestamp,delete e.buttons}t||delete e.buttons,a||delete e.startTimestamp,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;