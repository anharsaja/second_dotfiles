var __webpack_exports__={};const presence=new Presence({clientId:"1037407267336753152"}),browsingTimestamp=Math.floor(Date.now()/1e3),slideshow=presence.createSlideshow();async function getListImages(){return await Promise.all([...document.querySelectorAll(".image-prompt-overlay-container")].map((async e=>[await getShortURL(e.querySelector(".generated-image > img").src),e.querySelector(".image-prompt-overlay").textContent])))}const shortenedURLs={};async function getShortURL(e){if(e.length<256)return e;if(shortenedURLs[e])return shortenedURLs[e];try{const t=await(await fetch(`https://pd.premid.app/create/${e}`)).text();return shortenedURLs[e]=t,t}catch(t){return presence.error(t),e}}presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/D/DALL-E/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t,href:i}=window.location,s=await presence.getSetting("showImages");if("/"===t){const t=document.querySelector(".image-prompt-input");t.value?(e.details="Crafting a prompt",e.state=t.value):e.details="Thinking of a prompt"}else if(t.startsWith("/history"))if(s){const t=await getListImages();if(t.length>0)for(const[i,[s,a]]of t.entries())slideshow.addSlide(i.toString(),{...e,details:"Viewing history",state:a,largeImageKey:s},5e3);else e.details="Viewing history"}else e.details="Viewing history";else if(t.startsWith("/c/"))if(s){const s=await getListImages();if(0===s.length)e.details="Viewing a collection",e.state=document.querySelector("[class*=h3]").textContent;else for(const[a,[n,r]]of s.entries()){const s={...e,details:`Viewing collection: ${document.querySelector("[class*=h3]").textContent}`,state:r,largeImageKey:n};document.querySelector(".collection-layout-private")||t.includes("/private")||(s.buttons=[{label:"View Collection",url:i}]),slideshow.addSlide(a.toString(),s,5e3)}}else e.details="Viewing a collection",e.state=document.querySelector("[class*=h3]").textContent;else if(t.startsWith("/collections"))e.details="Viewing collections";else if(t.startsWith("/account"))e.details="Viewing their account";else if(t.startsWith("/e/")){const t=document.querySelector(".image-prompt-input")?.value;if(s){const i=await Promise.all([...document.querySelectorAll(".task-page-generations-img .generated-image > img")].map((e=>getShortURL(e.src)))),s=document.querySelector(".edit-page-image .generated-image > img");if(0!==i.length||s)if(s)e.details="Viewing an image",e.largeImageKey=await getShortURL(s.src);else for(const[s,a]of i.entries())slideshow.addSlide(s.toString(),{...e,details:"Viewing a generation",state:t,largeImageKey:a},5e3);else e.details="Generating images",e.state=t}else e.details="Viewing a generation",e.state=t}else t.startsWith("/s/")?(e.details="Viewing an image",e.state=document.querySelector(".gen-detail-caption").textContent,e.buttons=[{label:"View Image",url:i}],s&&(e.largeImageKey=await getShortURL(document.querySelector(".generated-image > img").src))):t.startsWith("/editor")?e.details="Using the image editor":(e.details="Browsing",e.state=document.title.match(/^(.*)?( \| DALLÂ·E)?$/)[1]);e.details?(presence.setActivity(e),slideshow.deleteAllSlides()):slideshow.getSlides().length>0?presence.setActivity(slideshow):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;