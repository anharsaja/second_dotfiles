var __webpack_exports__={};const presence=new Presence({clientId:"733216796991029301"});let currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/");const browsingTimestamp=Math.floor(Date.now()/1e3);let presenceData={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Wikibooks/assets/logo.png",startTimestamp:browsingTimestamp};const updateCallback={_function:null,get function(){return this._function},set function(e){this._function=e},get present(){return null!==this._function}},resetData=(e={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Wikibooks/assets/logo.png",startTimestamp:browsingTimestamp})=>{currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/"),presenceData={...e}},getURLParam=e=>currentURL.searchParams.get(e);if((()=>{if("www.wikibooks.org"===currentURL.hostname)presenceData.details="On the home page";else{let e;const a=()=>getURLParam("action")||getURLParam("veaction"),[t]=currentURL.hostname.split("."),n=()=>decodeURI(("index.php"===currentPath[1]?getURLParam("title"):currentPath.slice(1).join("/")).replaceAll("_"," "));try{e=document.querySelector("h1").textContent}catch(a){e=n()}const i=()=>({"-2":"Viewing a media","-1":"Viewing a special page",0:"Reading a book",1:"Viewing a talk page",2:"Viewing a user page",3:"Viewing a user talk page",4:"Viewing a project page",5:"Viewing a project talk page",6:"Viewing a file",7:"Viewing a file talk page",8:"Viewing an interface page",9:"Viewing an interface talk page",10:"Viewing a template",11:"Viewing a template talk page",12:"Viewing a help page",13:"Viewing a help talk page",14:"Viewing a category",15:"Viewing a category talk page",102:"Viewing a cookbook",103:"Viewing a cookbook talk page",108:"Viewing a Transwiki page",109:"Viewing a Transwiki talk page",110:"Reading a Wikijunior book",111:"Viewing a Wikijunior book talk page",112:"Viewing a subject",113:"Viewing a subject talk page",2300:"Viewing a gadget",2301:"Viewing a gadget talk page",2302:"Viewing a gadget definition page",2303:"Viewing a gadget definition talk page",2600:"Viewing a topic"}[[...document.querySelector("body").classList].find((e=>/ns--?\d/.test(e))).slice(3)]||"Viewing a page");(document.querySelector("#n-mainpage a")||document.querySelector("#p-navigation a")||document.querySelector(".mw-wiki-logo")).href===currentURL.href?presenceData.details="On the main page":document.querySelector("#wpLoginAttempt")?presenceData.details="Logging in":document.querySelector("#wpCreateaccount")?presenceData.details="Creating an account":document.querySelector(".searchresults")?(presenceData.details="Searching for a page",presenceData.state=document.querySelector("input[type=search]").value):"history"===a()?(presenceData.details="Viewing revision history",presenceData.state=n()):getURLParam("diff")?(presenceData.details="Viewing difference between revisions",presenceData.state=n()):getURLParam("oldid")?(presenceData.details="Viewing an old revision of a page",presenceData.state=n()):document.querySelector("#ca-ve-edit")||getURLParam("veaction")?(presenceData.state=e.toLowerCase()===n().toLowerCase()?`${e}`:`${e} (${n()})`,updateCallback.function=()=>{"edit"===a()||"editsource"===a()?presenceData.details="Editing a page":presenceData.details=i()}):"edit"===a()?(presenceData.details=document.querySelector("#ca-edit")?"Editing a page":"Viewing source",presenceData.state=n()):(presenceData.details=i(),presenceData.state=e.toLowerCase()===n().toLowerCase()?`${e}`:`${e} (${n()})`),"en"!==t&&(presenceData.state?presenceData.state+=` (${t})`:presenceData.details+=` (${t})`)}})(),updateCallback.present){const e={...presenceData};presence.on("UpdateData",(async()=>{resetData(e),updateCallback.function(),presence.setActivity(presenceData)}))}else presence.on("UpdateData",(async()=>{presence.setActivity(presenceData)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;