var __webpack_exports__={};const presence=new Presence({clientId:"715602476249776239"});let currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/");const browsingTimestamp=Math.floor(Date.now()/1e3);let presenceData={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/O/Outline/assets/logo.png",startTimestamp:browsingTimestamp};const updateCallback={_function:null,get function(){return this._function},set function(e){this._function=e},get present(){return null!==this._function}},resetData=(e={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/O/Outline/assets/logo.png",startTimestamp:browsingTimestamp})=>{currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/"),presenceData={...e}};if((()=>{if(document.querySelector("outline-not-found"))presenceData.details="On a non-existent page";else switch(currentPath[0]){case"terms.html":presenceData.details="Reading the terms";break;case"privacy.html":presenceData.details="Reading the privacy policy";break;case"dmca.html":presenceData.details="Reading the DMCA page";break;case"report.html":presenceData.details="Reporting an article";break;default:{let e,t=!1,a={};updateCallback.function=()=>{if(e!==currentURL.pathname||t){e=currentURL.pathname;try{document.querySelector("outline-not-found")?presenceData.details="On a non-existent page":""===currentPath[0]?presenceData.details="On the home page":(presenceData.details=document.querySelector("h1").textContent,[presenceData.state]=document.querySelector(".publication").textContent.trim().split(" â€º"))}catch(e){t=!0,resetData(),presenceData.details="Loading..."}a=presenceData,t=!1}else presenceData=a}}}})(),updateCallback.present){const e={...presenceData};presence.on("UpdateData",(async()=>{resetData(e),updateCallback.function(),presence.setActivity(presenceData)}))}else presence.on("UpdateData",(async()=>{presence.setActivity(presenceData)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;