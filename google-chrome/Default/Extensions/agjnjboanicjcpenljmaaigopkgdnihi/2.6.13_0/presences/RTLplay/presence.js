var __webpack_exports__={};const presence=new Presence({clientId:"1240716875927916616"}),browsingTimestamp=Math.floor(Date.now()/1e3),getStrings=async()=>presence.getStrings({play:"general.playing",pause:"general.paused",search:"general.search",searchSomething:"general.searchSomething",browsing:"general.browsing",viewing:"general.viewing",viewPage:"general.viewPage",viewAPage:"general.viewAPage",viewHome:"general.viewHome",viewAccount:"general.viewAccount",viewChannel:"general.viewChannel",viewCategory:"general.viewCategory",viewList:"netflix.viewList",buttonViewPage:"general.buttonViewPage",watching:"general.watching",watchingAd:"youtube.ad",watchingLive:"general.watchingLive",watchingShow:"general.watchingShow",watchingMovie:"general.watchingMovie",listeningMusic:"general.listeningMusic",buttonWatchStream:"general.buttonWatchStream",buttonWatchVideo:"general.buttonWatchVideo",buttonWatchEpisode:"general.buttonViewEpisode",buttonWatchMovie:"general.buttonWatchMovie",buttonListenAlong:"general.buttonListenAlong",live:"general.live",season:"general.season",episode:"general.episode",deferred:"general.deferred"},await presence.getSetting("lang").catch((()=>"en")));let strings,oldLang=null;function getAdditionnalStrings(e){switch(!0){case["fr-FR"].includes(e):strings.deferred="En Différé";break;case["nl-NL"].includes(e):strings.deferred="Uitgestelde";break;case["de-DE"].includes(e):strings.deferred="Zeitversetzt";break;default:strings.deferred="Deferred"}}function getChannel(e){switch(!0){case e.includes("tvi"):return{channel:"RTL TVi",type:3,logo:"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/7.png"};case e.includes("club"):return{channel:"RTL club",type:3,logo:"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/8.png"};case e.includes("plug"):return{channel:"RTL plug",type:3,logo:"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/9.png"};case e.includes("bel"):return{channel:"Bel RTL",type:2,logo:"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/10.png"};case e.includes("contact"):return{channel:"Radio Contact",type:2,logo:"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/11.png"};default:return{channel:e,type:3,logo:"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/6.png"}}}function exist(e){return null!==document.querySelector(e)}async function getThumbnail(e){return new Promise((t=>{const s=new Image,a=320,n=15;s.crossOrigin="anonymous",s.src=e,s.onload=function(){let e,r,i=0,l=0;if(s.width>s.height){const t=.14*s.width;e=s.width-2*t,r=s.height,i=t}else{const t=.025*s.height;e=s.width,r=s.height-2*t,l=t}const g=e>=r;let c,o,p,d;g?(c=a,o=a/e*r,p=0,d=(a-o)/2):(o=a,c=a/r*e,p=(a-c)/2,d=0);const m=document.createElement("canvas");m.width=a,m.height=a;const u=m.getContext("2d");u.fillStyle="#172e4e",u.fillRect(0,0,a,a);const h=u.createLinearGradient(0,0,a,0);if(h.addColorStop(0,"rgba(245,3,26,1)"),h.addColorStop(.5,"rgba(63,187,244,1)"),h.addColorStop(1,"rgba(164,215,12,1)"),g)u.fillStyle=h,u.fillRect(0,d-n,a,n),u.fillStyle=h,u.fillRect(0,d+o,a,n);else{const e=u.createLinearGradient(0,0,0,a);e.addColorStop(0,"rgba(245,3,26,1)"),e.addColorStop(.5,"rgba(63,187,244,1)"),e.addColorStop(1,"rgba(164,215,12,1)"),u.fillStyle=e,u.fillRect(p-n,0,n,a),u.fillStyle=e,u.fillRect(p+c,0,n,a)}u.drawImage(s,i,l,e,r,p,d,c,o),t(m.toDataURL("image/png"))},s.onerror=function(){t(e)}}))}presence.on("UpdateData",(async()=>{const{hostname:e,href:t,pathname:s}=document.location,a={name:"RTLplay",largeImageKey:"www.radiocontact.be"===e?"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/11.png":"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/0.gif",largeImageText:"RTLplay",type:3},[n,r,i,l,g,c,o]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("usePresenceName"),presence.getSetting("useChannelName"),presence.getSetting("privacy"),presence.getSetting("timestamp"),presence.getSetting("buttons"),presence.getSetting("usePosterImage")]);switch(oldLang===n&&strings||(oldLang=n,strings=await getStrings(),getAdditionnalStrings(n)),!0){case"/"===s||"rtlplay"===s.split("/")[1]&&s.split("/").length<=2:a.details=strings.browsing,a.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",a.smallImageText=strings.browsing,l||(a.state=strings.viewHome,g&&(a.startTimestamp=browsingTimestamp));break;case["recherche"].includes(s.split("/")[2]):l?a.details=strings.searchSomething:(a.details=JSON.parse(document.querySelector("ol.search__results")?.getAttribute("data-tracking")).searchQuery?strings.search:strings.searchSomething,a.state=JSON.parse(document.querySelector("ol.search__results")?.getAttribute("data-tracking")).searchQuery.term,g&&(a.startTimestamp=browsingTimestamp),c&&(a.buttons=[{label:strings.buttonViewPage,url:t}])),a.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",a.smallImageText=strings.search;break;case["ma-liste"].includes(s.split("/")[2]):a.details=strings.browsing,a.state=strings.viewAPage,l||(a.state=strings.viewList,c&&(a.buttons=[{label:strings.buttonViewPage,url:t}]));break;case["collection","series","films","divertissement"].includes(s.split("/")[2]):if(l)a.details=strings.viewAPage;else{const e=JSON.parse(document.querySelector("script[type='application/ld+json']").textContent);a.details=strings.viewCategory,a.state="collection"!==s.split("/")[2]?s.split("/")[2][0].toUpperCase()+s.split("/")[2].substring(1):"CollectionPage"===e[0]["@type"]?e[0].name:null,a.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/viewing.png",a.smallImageText=strings.viewCategory,g&&(a.startTimestamp=browsingTimestamp),c&&(a.buttons=[{label:strings.buttonViewPage,url:t}])}break;case"www.rtlplay.be"===e&&["direct"].includes(s.split("/")[2])||"www.radiocontact.be"===e&&["player"].includes(s.split("/")[1]):switch(!0){case"www.rtlplay.be"===e:if(exist("div.playerui__adBreakInfo")?(a.smallImageKey=["fr-FR"].includes(n)?"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/5.png":"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/4.png",a.smallImageText=strings.watchingAd):exist("i.playerui__icon--name-play")?(a.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",a.smallImageText=strings.pause):exist("div.playerui__liveStat--deferred")?(a.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/1.gif",a.smallImageText=strings.deferred):(a.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/2.gif",a.smallImageText=strings.live),l)a.details=strings.watchingLive,a.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/logo.png";else{if(i||"aucune donnée disponible"===document.querySelector("li[aria-current='true'] > a > div > h2").textContent.toLowerCase()||["contact","bel"].includes(s.split("/")[3])?a.name=getChannel(s.split("/")[3]).channel:a.name=document.querySelector("li[aria-current='true'] > a > div > h2").textContent,a.type=getChannel(s.split("/")[3]).type,a.details=strings.watchingLive,a.state=document.querySelector("li[aria-current='true'] > a > div > h2").textContent,["contact","bel"].includes(s.split("/")[3])){const e=["bel"].includes(s.split("/")[3])?"https://core-search.radioplayer.cloud/056/qp/v4/events/?rpId=6":"https://core-search.radioplayer.cloud/056/qp/v4/events/?rpId=1",t=await fetch(e),n=await t.text(),r=JSON.parse(n);"PE_E"===r.results.now.type?(a.largeImageKey=r.results.now.songArtURL,a.largeImageText=`${r.results.now.name} - ${r.results.now.artistName}`):(a.largeImageKey=getChannel(s.split("/")[3]).logo,a.largeImageText=getChannel(s.split("/")[3]).channel)}else a.largeImageKey=getChannel(s.split("/")[3]).logo,a.largeImageText=getChannel(s.split("/")[3]).channel;g&&exist("span.playerui__controls__stat__time")?[a.startTimestamp,a.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(document.querySelector("span.playerui__controls__stat__time").textContent.split("/")[0].trim()),presence.timestampFromFormat(document.querySelector("span.playerui__controls__stat__time").textContent.split("/")[1].trim())):exist("span.playerui__controls__stat__time")&&(a.largeImageText+=` - ${Math.round(presence.timestampFromFormat(document.querySelector("span.playerui__controls__stat__time").textContent.split("/")[1].trim())/60)} min`),c&&(a.buttons=[{label:strings.buttonWatchStream,url:t}])}break;case"www.radiocontact.be"===e:if(a.name=getChannel("contact").channel,a.type=getChannel("contact").type,exist('button[aria-label="stop"]')?(a.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/3.png",a.smallImageText=strings.listeningMusic):(a.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/stop.png",a.smallImageText=strings.pause),!l){const e=await fetch("https://core-search.radioplayer.cloud/056/qp/v4/events/?rpId=1"),s=await e.text(),n=JSON.parse(s);"PE_E"===n.results.now.type?(a.details=n.results.now.name,a.state=n.results.now.artistName,a.largeImageKey=await getThumbnail(n.results.now.songArtURL)):(a.details=n.results.pis[0].programmeName,a.state=n.results.pis[0].programmeDescription,a.largeImageKey=await getThumbnail(n.results.pis[0].imageUrl)),a.largeImageText=getChannel("contact").channel,c&&(a.buttons=[{label:strings.buttonListenAlong,url:t}])}}break;case["player"].includes(s.split("/")[2]):{const{mediaName:e=document.querySelector("h1.lfvp-player__title").textContent,seasonNumber:s,episodeNumber:i,episodeName:p}=(document.querySelector("h1.lfvp-player__title")?.textContent.match(/^(?<mediaName>.*?)\sS(?<seasonNumber>\d+)\sE(?<episodeNumber>\d+)\s(?<episodeName>.*)$/)||{}).groups||{};l?(a.details=p?strings.watchingMovie:strings.watchingShow,a.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/logo.png"):(r&&(a.name=e),a.details=p?`${r?"":strings.watching} ${e}`:strings.watchingMovie,a.state=p||e,o&&(a.largeImageKey=await getThumbnail(document.querySelector("#content > script").textContent.match(/window\.App\.playerData\s*=\s*\{[\s\S]*?poster:\s*"(.*?)",/)[1].replace(/\\u0026/g,"&").replace(/\\/g,""))),s&&i&&(a.largeImageText=`${strings.season} ${s} - ${strings.episode} ${i}`),g?[a.startTimestamp,a.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(document.querySelector("span.playerui__controls__stat__time").textContent.split("/")[0].trim()),presence.timestampFromFormat(document.querySelector("span.playerui__controls__stat__time").textContent.split("/")[1].trim())):a.largeImageText+=` - ${Math.round(presence.timestampFromFormat(document.querySelector("span.playerui__controls__stat__time").textContent.split("/")[1].trim())/60)} min`,c&&(a.buttons=[{label:p?strings.buttonWatchEpisode:strings.buttonWatchMovie,url:t}]));const d=exist("div.playerui__adBreakInfo");exist("i.playerui__icon--name-play")?(a.smallImageKey=d?["fr-FR"].includes(n)?"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/5.png":"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/4.png":"https://cdn.rcd.gg/PreMiD/resources/pause.png",a.smallImageText=d?strings.watchingAd:strings.pause):(a.smallImageKey=d?["fr-FR"].includes(n)?"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/5.png":"https://cdn.rcd.gg/PreMiD/websites/R/RTLplay/assets/4.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",a.smallImageText=d?strings.watchingAd:strings.play);break}case s.split("/")[2].length>15:if(a.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/viewing.png",a.smallImageText=strings.viewAPage,l)a.details=strings.viewAPage;else{let e=document.querySelector('dd.detail__meta-label[title="Année de production"]')?document.querySelector('dd.detail__meta-label[title="Année de production"]').textContent:"";e+=document.querySelector('dd.detail__meta-label[title="Durée"]')?` - ${document.querySelector('dd.detail__meta-label[title="Durée"]').textContent}`:"";for(let t=0;document.querySelectorAll("dl:nth-child(1) > dd > a").length>t;t++)e+=` - ${document.querySelectorAll("dl:nth-child(1) > dd > a")[t].textContent}`;a.details=strings.viewPage,a.state=document.querySelector("h1.detail__title").textContent,a.largeImageText=e,o&&(a.largeImageKey=await getThumbnail(document.querySelector("img.detail__poster").getAttribute("src"))),c&&(a.buttons=[{label:strings.buttonViewPage,url:t}])}break;default:a.details=strings.viewAPage}a.details?presence.setActivity(a):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;