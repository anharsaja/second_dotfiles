var __webpack_exports__={};const presence=new Presence({clientId:"1090817608154108046"});presence.on("UpdateData",(async()=>{const[e,t,r]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("channelPic")]),{pathname:s}=document.location,n=document.querySelector("meta[property='og:url']")?document.querySelector("meta[property='og:url']").content.slice(18):null,a={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/R/Rumble/assets/logo.png"};if(n&&n.startsWith("/v")&&!s.startsWith("/videos")){if(document.querySelector(".chat--header")&&(a.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/live.png",a.smallImageText="Live"),e)return a.smallImageKey?a.details="Watching a livestream":a.details="Watching a video",void presence.setActivity(a);t&&(a.buttons=[{label:"Watch",url:`https://rumble.com${n}`}],a.smallImageKey?a.buttons[0].label+=" Live":a.buttons[0].label+=" Video"),r&&"none"!==window.getComputedStyle(document.querySelector("i")).backgroundImage&&(a.largeImageKey=window.getComputedStyle(document.querySelector("i")).backgroundImage.slice(5,window.getComputedStyle(document.querySelector("i")).backgroundImage.length-2)),a.details=document.querySelector(".h1").textContent,a.state=document.querySelector(".media-heading-name").textContent}else if(n&&n.startsWith("/c/")){if(a.details="Viewing channel",e)return void presence.setActivity(a);a.state=document.querySelector("h1").textContent,t&&(a.buttons=[{label:"View Channel",url:`https://rumble.com${n}`}]),r&&document.querySelector(".channel-header--thumb")&&(a.largeImageKey=document.querySelector(".channel-header--thumb").currentSrc)}else if(n&&n.startsWith("/user/")){if(a.details="Viewing user",e)return void presence.setActivity(a);a.state=document.querySelector("h1").textContent,t&&(a.buttons=[{label:"View User",url:`https://rumble.com${n}`}]),r&&(a.largeImageKey=document.querySelector("img").src)}else"/"===s?(a.details="Browsing",a.state="Home"):s.startsWith("/editor-picks")||s.startsWith("/subscriptions")||s.startsWith("/videos")||s.startsWith("/watch-history")||s.startsWith("/category/")?(a.details="Browsing",a.state=document.querySelector("h1").textContent):s.startsWith("/upload")?a.details="Uploading a video":s.startsWith("/account")?a.details="Managing their account":s.startsWith("/browse")&&(a.details="Browsing",a.state=document.querySelector(".links__title--active").textContent);presence.setActivity(a)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;