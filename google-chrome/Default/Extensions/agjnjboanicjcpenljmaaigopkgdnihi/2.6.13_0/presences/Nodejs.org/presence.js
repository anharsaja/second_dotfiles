var __webpack_exports__={};const presence=new Presence({clientId:"661198037175238665"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/N/Nodejs.org/assets/logo.png",smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/reading.png",smallImageText:"Reading Node.js Doc's",startTimestamp:browsingTimestamp};"nodejs.org"===document.location.hostname&&(e.details="Viewing Page:",e.state="Viewing At Home Page",document.location.pathname.includes("/about")?(e.details="Viewing Page:",e.state="About Node.js"):document.location.pathname.includes("/download")?(e.details="Viewing Page:",e.state="Node.js Downloads"):document.location.pathname.includes("/docs")?(e.details="Viewing Page:",e.state="About Docs"):document.location.pathname.includes("/get-involved")?(e.details="Viewing Page:",e.state="Get Involved"):document.location.pathname.includes("/security")?(e.details="Viewing Page:",e.state="Security"):document.location.pathname.includes("/blog")&&(e.details="Viewing Page:",e.state="Node.js News")),e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLFNBQVcsSUFBSUMsU0FBUyxDQUMxQkMsU0FBVSx1QkFDVkMsa0JBQW9CQyxLQUFLQyxNQUFNQyxLQUFLQyxNQUFRLEtBQ2hEUCxTQUFTUSxHQUFHLGNBQWMsS0FDdEIsTUFBTUMsRUFBZSxDQUNqQkMsY0FBZSxrRUFDZkMsY0FBZSxrREFDZkMsZUFBZ0Isd0JBQ2hCQyxlQUFnQlYsbUJBRWUsZUFBL0JXLFNBQVNDLFNBQVNDLFdBQ2xCUCxFQUFhUSxRQUFVLGdCQUN2QlIsRUFBYVMsTUFBUSx1QkFDakJKLFNBQVNDLFNBQVNJLFNBQVNDLFNBQVMsV0FDcENYLEVBQWFRLFFBQVUsZ0JBQ3ZCUixFQUFhUyxNQUFRLGlCQUVoQkosU0FBU0MsU0FBU0ksU0FBU0MsU0FBUyxjQUN6Q1gsRUFBYVEsUUFBVSxnQkFDdkJSLEVBQWFTLE1BQVEscUJBRWhCSixTQUFTQyxTQUFTSSxTQUFTQyxTQUFTLFVBQ3pDWCxFQUFhUSxRQUFVLGdCQUN2QlIsRUFBYVMsTUFBUSxjQUVoQkosU0FBU0MsU0FBU0ksU0FBU0MsU0FBUyxrQkFDekNYLEVBQWFRLFFBQVUsZ0JBQ3ZCUixFQUFhUyxNQUFRLGdCQUVoQkosU0FBU0MsU0FBU0ksU0FBU0MsU0FBUyxjQUN6Q1gsRUFBYVEsUUFBVSxnQkFDdkJSLEVBQWFTLE1BQVEsWUFFaEJKLFNBQVNDLFNBQVNJLFNBQVNDLFNBQVMsV0FDekNYLEVBQWFRLFFBQVUsZ0JBQ3ZCUixFQUFhUyxNQUFRLGlCQUd6QlQsRUFBYVEsUUFDYmpCLFNBQVNxQixZQUFZWixHQUVyQlQsU0FBU3FCLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wcmVzZW5jZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwcmVzZW5jZSA9IG5ldyBQcmVzZW5jZSh7XG4gICAgY2xpZW50SWQ6IFwiNjYxMTk4MDM3MTc1MjM4NjY1XCIsXG59KSwgYnJvd3NpbmdUaW1lc3RhbXAgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTtcbnByZXNlbmNlLm9uKFwiVXBkYXRlRGF0YVwiLCAoKSA9PiB7XG4gICAgY29uc3QgcHJlc2VuY2VEYXRhID0ge1xuICAgICAgICBsYXJnZUltYWdlS2V5OiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvTi9Ob2RlanMub3JnL2Fzc2V0cy9sb2dvLnBuZ1wiLFxuICAgICAgICBzbWFsbEltYWdlS2V5OiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3JlYWRpbmcucG5nXCIsXG4gICAgICAgIHNtYWxsSW1hZ2VUZXh0OiBcIlJlYWRpbmcgTm9kZS5qcyBEb2Mnc1wiLFxuICAgICAgICBzdGFydFRpbWVzdGFtcDogYnJvd3NpbmdUaW1lc3RhbXAsXG4gICAgfTtcbiAgICBpZiAoZG9jdW1lbnQubG9jYXRpb24uaG9zdG5hbWUgPT09IFwibm9kZWpzLm9yZ1wiKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIFBhZ2U6XCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IFwiVmlld2luZyBBdCBIb21lIFBhZ2VcIjtcbiAgICAgICAgaWYgKGRvY3VtZW50LmxvY2F0aW9uLnBhdGhuYW1lLmluY2x1ZGVzKFwiL2Fib3V0XCIpKSB7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBQYWdlOlwiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gXCJBYm91dCBOb2RlLmpzXCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUuaW5jbHVkZXMoXCIvZG93bmxvYWRcIikpIHtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIFBhZ2U6XCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBcIk5vZGUuanMgRG93bmxvYWRzXCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUuaW5jbHVkZXMoXCIvZG9jc1wiKSkge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgUGFnZTpcIjtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IFwiQWJvdXQgRG9jc1wiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGRvY3VtZW50LmxvY2F0aW9uLnBhdGhuYW1lLmluY2x1ZGVzKFwiL2dldC1pbnZvbHZlZFwiKSkge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgUGFnZTpcIjtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IFwiR2V0IEludm9sdmVkXCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUuaW5jbHVkZXMoXCIvc2VjdXJpdHlcIikpIHtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIFBhZ2U6XCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBcIlNlY3VyaXR5XCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUuaW5jbHVkZXMoXCIvYmxvZ1wiKSkge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgUGFnZTpcIjtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IFwiTm9kZS5qcyBOZXdzXCI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKHByZXNlbmNlRGF0YS5kZXRhaWxzKVxuICAgICAgICBwcmVzZW5jZS5zZXRBY3Rpdml0eShwcmVzZW5jZURhdGEpO1xuICAgIGVsc2VcbiAgICAgICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkoKTtcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY0hKbGMyVnVZMlV1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SndjbVZ6Wlc1alpTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGRkJRVkVzUTBGQlF6dEpRVU0xUWl4UlFVRlJMRVZCUVVVc2IwSkJRVzlDTzBOQlF6bENMRU5CUVVNc1JVRkRSaXhwUWtGQmFVSXNSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVWQlFVVXNSMEZCUnl4SlFVRkpMRU5CUVVNc1EwRkJRenRCUVVWdVJDeFJRVUZSTEVOQlFVTXNSVUZCUlN4RFFVRkRMRmxCUVZrc1JVRkJSU3hIUVVGSExFVkJRVVU3U1VGRE9VSXNUVUZCVFN4WlFVRlpMRWRCUVdsQ08xRkJRMnhETEdGQlFXRXNSVUZEV2l4cFJVRkJhVVU3VVVGRGJFVXNZVUZCWVN4dFJFRkJaMEk3VVVGRE4wSXNZMEZCWXl4RlFVRkZMSFZDUVVGMVFqdFJRVU4yUXl4alFVRmpMRVZCUVVVc2FVSkJRV2xDTzB0QlEycERMRU5CUVVNN1NVRkZSaXhKUVVGSkxGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNVVUZCVVN4TFFVRkxMRmxCUVZrc1JVRkJSVHRSUVVOb1JDeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMR1ZCUVdVc1EwRkJRenRSUVVOMlF5eFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMSE5DUVVGelFpeERRVUZETzFGQlF6VkRMRWxCUVVrc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJReXhGUVVGRk8xbEJRMnhFTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1pVRkJaU3hEUVVGRE8xbEJRM1pETEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1pVRkJaU3hEUVVGRE8xTkJRM0pETzJGQlFVMHNTVUZCU1N4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNWMEZCVnl4RFFVRkRMRVZCUVVVN1dVRkROVVFzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4bFFVRmxMRU5CUVVNN1dVRkRka01zV1VGQldTeERRVUZETEV0QlFVc3NSMEZCUnl4dFFrRkJiVUlzUTBGQlF6dFRRVU42UXp0aFFVRk5MRWxCUVVrc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRTlCUVU4c1EwRkJReXhGUVVGRk8xbEJRM2hFTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1pVRkJaU3hEUVVGRE8xbEJRM1pETEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1dVRkJXU3hEUVVGRE8xTkJRMnhETzJGQlFVMHNTVUZCU1N4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNaVUZCWlN4RFFVRkRMRVZCUVVVN1dVRkRhRVVzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4bFFVRmxMRU5CUVVNN1dVRkRka01zV1VGQldTeERRVUZETEV0QlFVc3NSMEZCUnl4alFVRmpMRU5CUVVNN1UwRkRjRU03WVVGQlRTeEpRVUZKTEZGQlFWRXNRMEZCUXl4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eFhRVUZYTEVOQlFVTXNSVUZCUlR0WlFVTTFSQ3haUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEdWQlFXVXNRMEZCUXp0WlFVTjJReXhaUVVGWkxFTkJRVU1zUzBGQlN5eEhRVUZITEZWQlFWVXNRMEZCUXp0VFFVTm9RenRoUVVGTkxFbEJRVWtzVVVGQlVTeERRVUZETEZGQlFWRXNRMEZCUXl4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExFOUJRVThzUTBGQlF5eEZRVUZGTzFsQlEzaEVMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzWlVGQlpTeERRVUZETzFsQlEzWkRMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRVWNzWTBGQll5eERRVUZETzFOQlEzQkRPMHRCUTBRN1NVRkZSQ3hKUVVGSkxGbEJRVmtzUTBGQlF5eFBRVUZQTzFGQlFVVXNVVUZCVVN4RFFVRkRMRmRCUVZjc1EwRkJReXhaUVVGWkxFTkJRVU1zUTBGQlF6czdVVUZEZUVRc1VVRkJVU3hEUVVGRExGZEJRVmNzUlVGQlJTeERRVUZETzBGQlF6ZENMRU5CUVVNc1EwRkJReXhEUVVGREluMD0iXSwibmFtZXMiOlsicHJlc2VuY2UiLCJQcmVzZW5jZSIsImNsaWVudElkIiwiYnJvd3NpbmdUaW1lc3RhbXAiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93Iiwib24iLCJwcmVzZW5jZURhdGEiLCJsYXJnZUltYWdlS2V5Iiwic21hbGxJbWFnZUtleSIsInNtYWxsSW1hZ2VUZXh0Iiwic3RhcnRUaW1lc3RhbXAiLCJkb2N1bWVudCIsImxvY2F0aW9uIiwiaG9zdG5hbWUiLCJkZXRhaWxzIiwic3RhdGUiLCJwYXRobmFtZSIsImluY2x1ZGVzIiwic2V0QWN0aXZpdHkiXSwic291cmNlUm9vdCI6IiJ9
undefined;