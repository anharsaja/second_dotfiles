var __webpack_exports__={};const presence=new Presence({clientId:"612415911877672971"}),browsingTimestamp=Math.floor(Date.now()/1e3),presenceData={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Webtoon/assets/logo.jpg",startTimestamp:browsingTimestamp},strings=presence.getStrings({browsing:"general.browsing"}),path=window.location.pathname;let webtoon,chapter,seriesPage;presence.on("UpdateData",(async()=>{path.includes("list")?(webtoon=document.querySelector(".subj").textContent,presenceData.details="Looking at a webtoon",presenceData.state=webtoon,delete presenceData.smallImageKey):path.includes("viewer")?(webtoon=document.querySelector("div.subj_info > a.subj").textContent,chapter=`${document.querySelector("div.subj_info > .subj_episode").textContent} - ${document.querySelector(".tx").textContent}`,presenceData.details=`Reading ${webtoon}`,presenceData.state=chapter,delete presenceData.smallImageKey):path.includes("dailySchedule")?(seriesPage=document.querySelector("ul > li.completed").getAttribute("class").includes("on")?"completed":"ongoing",presenceData.details=`Looking through the ${seriesPage} series`,delete presenceData.smallImageKey):path.includes("top")?presenceData.details="Looking through popular series":path.includes("genre")?(presenceData.details="Looking through genres",delete presenceData.smallImageKey):path.includes("search")?(presenceData.details="Searching...",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):path.includes("about")?(presenceData.details="Reading the about page",delete presenceData.smallImageKey):(presenceData.details=(await strings).browsing,delete presenceData.smallImageKey),presence.setActivity(presenceData,!0)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLFNBQVcsSUFBSUMsU0FBUyxDQUMxQkMsU0FBVSx1QkFDVkMsa0JBQW9CQyxLQUFLQyxNQUFNQyxLQUFLQyxNQUFRLEtBQU9DLGFBQWUsQ0FDbEVDLGNBQWUsK0RBQ2ZDLGVBQWdCUCxtQkFDakJRLFFBQVVYLFNBQVNZLFdBQVcsQ0FDN0JDLFNBQVUscUJBQ1ZDLEtBQU9DLE9BQU9DLFNBQVNDLFNBQzNCLElBQUlDLFFBQVNDLFFBQVNDLFdBQ3RCcEIsU0FBU3FCLEdBQUcsY0FBY0MsVUFDbEJSLEtBQUtTLFNBQVMsU0FDZEwsUUFBVU0sU0FBU0MsY0FBYyxTQUFTQyxZQUMxQ2xCLGFBQWFtQixRQUFVLHVCQUN2Qm5CLGFBQWFvQixNQUFRVixlQUNkVixhQUFhcUIsZUFFZmYsS0FBS1MsU0FBUyxXQUNuQkwsUUFBVU0sU0FBU0MsY0FBYywwQkFBMEJDLFlBQzNEUCxRQUFVLEdBQUdLLFNBQVNDLGNBQWMsaUNBQWlDQyxpQkFBaUJGLFNBQVNDLGNBQWMsT0FBT0MsY0FDcEhsQixhQUFhbUIsUUFBVSxXQUFXVCxVQUNsQ1YsYUFBYW9CLE1BQVFULGVBQ2RYLGFBQWFxQixlQUVmZixLQUFLUyxTQUFTLGtCQUNuQkgsV0FBYUksU0FDUkMsY0FBYyxxQkFDZEssYUFBYSxTQUNiUCxTQUFTLE1BQ1IsWUFDQSxVQUNOZixhQUFhbUIsUUFBVSx1QkFBdUJQLDJCQUN2Q1osYUFBYXFCLGVBRWZmLEtBQUtTLFNBQVMsT0FDbkJmLGFBQWFtQixRQUFVLGlDQUNsQmIsS0FBS1MsU0FBUyxVQUNuQmYsYUFBYW1CLFFBQVUsZ0NBQ2hCbkIsYUFBYXFCLGVBRWZmLEtBQUtTLFNBQVMsV0FDbkJmLGFBQWFtQixRQUFVLGVBQ3ZCbkIsYUFBYXFCLGNBQWdCLGtEQUV4QmYsS0FBS1MsU0FBUyxVQUNuQmYsYUFBYW1CLFFBQVUsZ0NBQ2hCbkIsYUFBYXFCLGdCQUdwQnJCLGFBQWFtQixlQUFpQmhCLFNBQVNFLGdCQUNoQ0wsYUFBYXFCLGVBRXhCN0IsU0FBUytCLFlBQVl2QixjQUFjLEVBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wcmVzZW5jZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwcmVzZW5jZSA9IG5ldyBQcmVzZW5jZSh7XG4gICAgY2xpZW50SWQ6IFwiNjEyNDE1OTExODc3NjcyOTcxXCIsXG59KSwgYnJvd3NpbmdUaW1lc3RhbXAgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKSwgcHJlc2VuY2VEYXRhID0ge1xuICAgIGxhcmdlSW1hZ2VLZXk6IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9XL1dlYnRvb24vYXNzZXRzL2xvZ28uanBnXCIsXG4gICAgc3RhcnRUaW1lc3RhbXA6IGJyb3dzaW5nVGltZXN0YW1wLFxufSwgc3RyaW5ncyA9IHByZXNlbmNlLmdldFN0cmluZ3Moe1xuICAgIGJyb3dzaW5nOiBcImdlbmVyYWwuYnJvd3NpbmdcIixcbn0pLCBwYXRoID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lO1xubGV0IHdlYnRvb24sIGNoYXB0ZXIsIHNlcmllc1BhZ2U7XG5wcmVzZW5jZS5vbihcIlVwZGF0ZURhdGFcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGlmIChwYXRoLmluY2x1ZGVzKFwibGlzdFwiKSkge1xuICAgICAgICB3ZWJ0b29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zdWJqXCIpLnRleHRDb250ZW50O1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiTG9va2luZyBhdCBhIHdlYnRvb25cIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gd2VidG9vbjtcbiAgICAgICAgZGVsZXRlIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5O1xuICAgIH1cbiAgICBlbHNlIGlmIChwYXRoLmluY2x1ZGVzKFwidmlld2VyXCIpKSB7XG4gICAgICAgIHdlYnRvb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZGl2LnN1YmpfaW5mbyA+IGEuc3VialwiKS50ZXh0Q29udGVudDtcbiAgICAgICAgY2hhcHRlciA9IGAke2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJkaXYuc3Vial9pbmZvID4gLnN1YmpfZXBpc29kZVwiKS50ZXh0Q29udGVudH0gLSAke2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudHhcIikudGV4dENvbnRlbnR9YDtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBgUmVhZGluZyAke3dlYnRvb259YDtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gY2hhcHRlcjtcbiAgICAgICAgZGVsZXRlIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5O1xuICAgIH1cbiAgICBlbHNlIGlmIChwYXRoLmluY2x1ZGVzKFwiZGFpbHlTY2hlZHVsZVwiKSkge1xuICAgICAgICBzZXJpZXNQYWdlID0gZG9jdW1lbnRcbiAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwidWwgPiBsaS5jb21wbGV0ZWRcIilcbiAgICAgICAgICAgIC5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKVxuICAgICAgICAgICAgLmluY2x1ZGVzKFwib25cIilcbiAgICAgICAgICAgID8gXCJjb21wbGV0ZWRcIlxuICAgICAgICAgICAgOiBcIm9uZ29pbmdcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBgTG9va2luZyB0aHJvdWdoIHRoZSAke3Nlcmllc1BhZ2V9IHNlcmllc2A7XG4gICAgICAgIGRlbGV0ZSBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleTtcbiAgICB9XG4gICAgZWxzZSBpZiAocGF0aC5pbmNsdWRlcyhcInRvcFwiKSlcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIkxvb2tpbmcgdGhyb3VnaCBwb3B1bGFyIHNlcmllc1wiO1xuICAgIGVsc2UgaWYgKHBhdGguaW5jbHVkZXMoXCJnZW5yZVwiKSkge1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiTG9va2luZyB0aHJvdWdoIGdlbnJlc1wiO1xuICAgICAgICBkZWxldGUgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHBhdGguaW5jbHVkZXMoXCJzZWFyY2hcIikpIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlNlYXJjaGluZy4uLlwiO1xuICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvc2VhcmNoLnBuZ1wiO1xuICAgIH1cbiAgICBlbHNlIGlmIChwYXRoLmluY2x1ZGVzKFwiYWJvdXRcIikpIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlJlYWRpbmcgdGhlIGFib3V0IHBhZ2VcIjtcbiAgICAgICAgZGVsZXRlIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSAoYXdhaXQgc3RyaW5ncykuYnJvd3Npbmc7XG4gICAgICAgIGRlbGV0ZSBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleTtcbiAgICB9XG4gICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkocHJlc2VuY2VEYXRhLCB0cnVlKTtcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY0hKbGMyVnVZMlV1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SndjbVZ6Wlc1alpTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRkZCUVZFc1IwRkJZU3hKUVVGSkxGRkJRVkVzUTBGQlF6dEpRVU4wUXl4UlFVRlJMRVZCUVVVc2IwSkJRVzlDTzBOQlF6bENMRU5CUVVNc1JVRkRSaXhwUWtGQmFVSXNSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVWQlFVVXNSMEZCUnl4SlFVRkpMRU5CUVVNc1JVRkRha1FzV1VGQldTeEhRVUZwUWp0SlFVTTFRaXhoUVVGaExFVkJRMW9zT0VSQlFUaEVPMGxCUXk5RUxHTkJRV01zUlVGQlJTeHBRa0ZCYVVJN1EwRkRha01zUlVGRFJDeFBRVUZQTEVkQlFVY3NVVUZCVVN4RFFVRkRMRlZCUVZVc1EwRkJRenRKUVVNM1FpeFJRVUZSTEVWQlFVVXNhMEpCUVd0Q08wTkJRelZDTEVOQlFVTXNSVUZEUml4SlFVRkpMRWRCUVZjc1RVRkJUU3hEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTTdRVUZEZWtNc1NVRkJTU3hQUVVGbExFVkJRVVVzVDBGQlpTeEZRVUZGTEZWQlFXdENMRU5CUVVNN1FVRkZla1FzVVVGQlVTeERRVUZETEVWQlFVVXNRMEZCUXl4WlFVRlpMRVZCUVVVc1MwRkJTeXhKUVVGSkxFVkJRVVU3U1VGRGNFTXNTVUZCU1N4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFMUJRVTBzUTBGQlF5eEZRVUZGTzFGQlF6RkNMRTlCUVU4c1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRmRCUVZjc1EwRkJRenRSUVVOMFJDeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMSE5DUVVGelFpeERRVUZETzFGQlF6bERMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRVWNzVDBGQlR5eERRVUZETzFGQlF6ZENMRTlCUVU4c1dVRkJXU3hEUVVGRExHRkJRV0VzUTBGQlF6dExRVU5zUXp0VFFVRk5MRWxCUVVrc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNSVUZCUlR0UlFVTnVReXhQUVVGUExFZEJRVWNzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4M1FrRkJkMElzUTBGQlF5eERRVUZETEZkQlFWY3NRMEZCUXp0UlFVTjJSU3hQUVVGUExFZEJRVWNzUjBGRFZDeFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMQ3RDUVVFclFpeERRVUZETEVOQlFVTXNWMEZEZWtRc1RVRkJUU3hSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRmRCUVZjc1JVRkJSU3hEUVVGRE8xRkJRMnhFTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1YwRkJWeXhQUVVGUExFVkJRVVVzUTBGQlF6dFJRVU0xUXl4WlFVRlpMRU5CUVVNc1MwRkJTeXhIUVVGSExFOUJRVThzUTBGQlF6dFJRVU0zUWl4UFFVRlBMRmxCUVZrc1EwRkJReXhoUVVGaExFTkJRVU03UzBGRGJFTTdVMEZCVFN4SlFVRkpMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zWlVGQlpTeERRVUZETEVWQlFVVTdVVUZETVVNc1ZVRkJWU3hIUVVGSExGRkJRVkU3WVVGRGJrSXNZVUZCWVN4RFFVRkRMRzFDUVVGdFFpeERRVUZETzJGQlEyeERMRmxCUVZrc1EwRkJReXhQUVVGUExFTkJRVU03WVVGRGNrSXNVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJRenRaUVVObUxFTkJRVU1zUTBGQlF5eFhRVUZYTzFsQlEySXNRMEZCUXl4RFFVRkRMRk5CUVZNc1EwRkJRenRSUVVOaUxGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NkVUpCUVhWQ0xGVkJRVlVzVTBGQlV5eERRVUZETzFGQlEyeEZMRTlCUVU4c1dVRkJXU3hEUVVGRExHRkJRV0VzUTBGQlF6dExRVU5zUXp0VFFVRk5MRWxCUVVrc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eExRVUZMTEVOQlFVTTdVVUZET1VJc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eG5RMEZCWjBNc1EwRkJRenRUUVVOd1JDeEpRVUZKTEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1QwRkJUeXhEUVVGRExFVkJRVVU3VVVGRGFFTXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXgzUWtGQmQwSXNRMEZCUXp0UlFVTm9SQ3hQUVVGUExGbEJRVmtzUTBGQlF5eGhRVUZoTEVOQlFVTTdTMEZEYkVNN1UwRkJUU3hKUVVGSkxFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RFFVRkRMRVZCUVVVN1VVRkRia01zV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4alFVRmpMRU5CUVVNN1VVRkRkRU1zV1VGQldTeERRVUZETEdGQlFXRXNiVVJCUVdkQ0xFTkJRVU03UzBGRE0wTTdVMEZCVFN4SlFVRkpMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zVDBGQlR5eERRVUZETEVWQlFVVTdVVUZEYkVNc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eDNRa0ZCZDBJc1EwRkJRenRSUVVOb1JDeFBRVUZQTEZsQlFWa3NRMEZCUXl4aFFVRmhMRU5CUVVNN1MwRkRiRU03VTBGQlRUdFJRVU5PTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1EwRkJReXhOUVVGTkxFOUJRVThzUTBGQlF5eERRVUZETEZGQlFWRXNRMEZCUXp0UlFVTm9SQ3hQUVVGUExGbEJRVmtzUTBGQlF5eGhRVUZoTEVOQlFVTTdTMEZEYkVNN1NVRkRSQ3hSUVVGUkxFTkJRVU1zVjBGQlZ5eERRVUZETEZsQlFWa3NSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJRenRCUVVNeFF5eERRVUZETEVOQlFVTXNRMEZCUXlKOSJdLCJuYW1lcyI6WyJwcmVzZW5jZSIsIlByZXNlbmNlIiwiY2xpZW50SWQiLCJicm93c2luZ1RpbWVzdGFtcCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJwcmVzZW5jZURhdGEiLCJsYXJnZUltYWdlS2V5Iiwic3RhcnRUaW1lc3RhbXAiLCJzdHJpbmdzIiwiZ2V0U3RyaW5ncyIsImJyb3dzaW5nIiwicGF0aCIsIndpbmRvdyIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJ3ZWJ0b29uIiwiY2hhcHRlciIsInNlcmllc1BhZ2UiLCJvbiIsImFzeW5jIiwiaW5jbHVkZXMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ0ZXh0Q29udGVudCIsImRldGFpbHMiLCJzdGF0ZSIsInNtYWxsSW1hZ2VLZXkiLCJnZXRBdHRyaWJ1dGUiLCJzZXRBY3Rpdml0eSJdLCJzb3VyY2VSb290IjoiIn0=
undefined;