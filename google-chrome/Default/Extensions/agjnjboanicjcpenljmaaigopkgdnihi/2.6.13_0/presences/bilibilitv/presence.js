var __webpack_exports__={};const presence=new Presence({clientId:"972073369564483584"}),browsingTimestamp=Math.floor(Date.now()/1e3);async function getStrings(){return presence.getStrings({play:"general.playing",pause:"general.paused",search:"general.search",episode:"general.episode",browsing:"general.browsing",viewHome:"general.viewHome",viewChannel:"general.viewChannel",watchingVid:"general.watchingVid",viewCategory:"general.viewCategory",readingAbout:"general.readingAbout",searchSomething:"general.searchSomething",buttonWatchVideo:"general.buttonWatchVideo",buttonViewEpisode:"general.buttonViewEpisode"},await presence.getSetting("lang").catch((()=>"en")))}let strings,oldLang=null;presence.on("UpdateData",(async()=>{const e=await presence.getSetting("lang").catch((()=>"en")),t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/B/bilibilitv/assets/logo.png",startTimestamp:browsingTimestamp},{hostname:a,href:i,pathname:s}=document.location,n=s?.split("/"),r=document.querySelector(".bstar-meta__title")?.textContent,o=!document.querySelector("img.player-mobile-icon.player-mobile-pause-icon.player-mobile-active"),l=document.querySelector('meta[property="og:image"]')?.content?.split("?")?.[0]??"https://cdn.rcd.gg/PreMiD/websites/B/bilibilitv/assets/logo.png";if(oldLang===e&&strings||(oldLang=e,strings=await getStrings()),"www.bilibili.tv"===a){const e=isNaN(Number(n[2]))?n[2]:n[1];switch(e){case"video":t.details=strings.watchingVid,t.state=r,t.buttons=[{label:strings.buttonWatchVideo,url:i}];break;case"play":t.details=r,t.state=`${strings.episode} ${document.querySelector("a.ep-item.ep-item--active").textContent?.replace(/\D/g,"")}`,t.buttons=[{label:strings.buttonViewEpisode,url:i}];break;case"media":t.details=strings.readingAbout.replace(":",""),t.state=document.querySelector(".media-detail__title").textContent,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",t.smallImageText=strings.browsing;break;case"popular":t.details=strings.viewCategory.replace(":",""),t.state="Popular",t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",t.smallImageText=strings.browsing;break;case"space":t.details=strings.viewChannel.replace(":",""),t.state=document.querySelector(".space-info__name")?.textContent??strings.searchSomething;break;case"index":t.details=strings.search,t.state=document.querySelector("a.router-link-exact-active.router-link-active.anime-radio__tag.anime-radio__tag--active")?.textContent??strings.searchSomething,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",t.smallImageText=strings.browsing;break;default:t.details=strings.viewHome,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",t.smallImageText=strings.browsing}"video"!==e&&"play"!==e||(t.largeImageKey=l,t.smallImageKey=o?"https://cdn.rcd.gg/PreMiD/resources/play.png":"https://cdn.rcd.gg/PreMiD/resources/pause.png",o&&([t.startTimestamp,t.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(document.querySelector(".player-mobile-time-current-text")?.textContent??"00:00"),presence.timestampFromFormat(document.querySelector(".player-mobile-time-total-text")?.textContent??"00:00"))))}else"studio.bilibili.tv"===a&&(n[1]?t.details=document.querySelector(".is-active").textContent:t.details=document.querySelector(".nav-menu__menu-title").textContent,t.state="Bilibili Studio");t.details?presence.setActivity(t):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;