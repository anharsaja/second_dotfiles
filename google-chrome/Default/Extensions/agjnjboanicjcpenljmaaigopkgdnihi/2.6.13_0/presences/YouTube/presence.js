"use strict";var __webpack_exports__={};function isActive(){return!!(getTitle()&&getUploader()&&getVideoID()&&getChannelURL())}function getTitle(){return getBaseSection()?.querySelector("h1 yt-formatted-string.ytd-video-primary-info-renderer")?.textContent.trim()}function getUploader(){return getBaseSection()?.querySelector("ytd-video-owner-renderer .ytd-channel-name a")?.textContent.trim()}function getVideoID(){return getBaseSection()?.querySelector("#page-manager > [video-id]")?.getAttribute("video-id")??new URLSearchParams(document.location.search).get("v")}function getChannelURL(){return getBaseSection()?.querySelector("#upload-info #channel-name a")?.href}function getBaseSection(){return document.querySelector(".ytd-page-manager:not([hidden])")}const resolver={isActive,getTitle,getUploader,getChannelURL,getVideoID},video_sources_default=resolver;function old_isActive(){return!!document.querySelector(".watch-title")&&document.location.pathname.includes("/watch")&&!!old_getTitle()&&!!old_getUploader()&&!!getVideoID()&&!!old_getChannelURL()}function old_getChannelURL(){return document.querySelector("#top-row ytd-video-owner-renderer > a")?.href}function old_getTitle(){return document.querySelector(".watch-title")?.textContent.trim()}function old_getUploader(){return document.querySelector("#owner-name a")?.textContent.trim()}const old_resolver={isActive:old_isActive,getTitle:old_getTitle,getUploader:old_getUploader,getChannelURL:old_getChannelURL,getVideoID},old=old_resolver;function shorts_isActive(){return document.location.pathname.includes("/shorts/")&&!!shorts_getTitle()&&!!shorts_getUploader()&&!!shorts_getChannelURL()&&!!shorts_getVideoID()}function shorts_getTitle(){return getShortsElement()?.closest(".ytd-reel-player-overlay-renderer")?.querySelector(".title")?.textContent.trim()}function getShortsElement(){return document.querySelector("video")?.closest("ytd-reel-video-renderer")?.querySelector("yt-formatted-string#text.style-scope.ytd-channel-name")??document.querySelectorAll("video")[1]?.closest("ytd-reel-video-renderer")?.querySelector("yt-formatted-string#text.style-scope.ytd-channel-name")}function shorts_getUploader(){const e=getShortsElement();return e?.textContent?`${e?.querySelector("a")?.getAttribute("href")?.replace("/","")?.replace("@","")} (${e?.textContent})`:""}function shorts_getChannelURL(){return`https://${document.location.hostname}/${getShortsElement()?.textContent}`}function shorts_getVideoID(){return document.location.pathname.split("/shorts/")[1]}const shorts_resolver={isActive:shorts_isActive,getTitle:shorts_getTitle,getUploader:shorts_getUploader,getChannelURL:shorts_getChannelURL,getVideoID:shorts_getVideoID},shorts=shorts_resolver;function embed_isActive(){return document.location.pathname.includes("/embed")&&!!embed_getTitle()&&!!embed_getUploader()&&!!getVideoID()&&!!getChannelURL()}function embed_getTitle(){return document.querySelector('[class="reel-video-in-sequence style-scope ytd-shorts"]')?.querySelector('[class="title style-scope ytd-reel-player-header-renderer"]')?.textContent.trim()}function embed_getUploader(){return document.querySelector("div.ytp-title-expanded-heading > h2 > a")?.textContent.trim()}const embed_resolver={isActive:embed_isActive,getTitle:embed_getTitle,getUploader:embed_getUploader,getChannelURL,getVideoID},video_sources_embed=embed_resolver;function movies_isActive(){return!!(movies_getTitle()&&movies_getUploader()&&getVideoID()&&getChannelURL())}function movies_getTitle(){return document.querySelector(".title.style-scope.ytd-video-primary-info-renderer")?.textContent.trim()||document.querySelector("div.ytp-title-text > a")?.textContent.trim()}function movies_getUploader(){return document.querySelector(".style-scope.ytd-channel-name > a")?.textContent.trim()}const movies_resolver={isActive:movies_isActive,getTitle:movies_getTitle,getUploader:movies_getUploader,getChannelURL,getVideoID},movies=movies_resolver,presence=new Presence({clientId:"463097721130188830"});let cachedTime=0;function adjustTimeError(e,t){return Math.abs(e-cachedTime)>t&&(cachedTime=e),cachedTime}function truncateAfter(e,t){return e.slice(0,e.indexOf(t))}const stringMap={play:"general.playing",pause:"general.paused",live:"general.live",ad:"youtube.ad",search:"general.searchFor",browsingTypeVideos:"youtube.browsingTypeVideos",browseShorts:"youtube.browsingShorts",browsingVid:"youtube.browsingVideos",browsingPlayl:"youtube.browsingPlaylists",viewCPost:"youtube.viewingCommunityPost",ofChannel:"youtube.ofChannel",readChannel:"youtube.readingChannel",searchChannel:"youtube.searchChannel",trending:"youtube.trending",browsingThrough:"youtube.browsingThrough",subscriptions:"youtube.subscriptions",library:"youtube.library",history:"youtube.history",purchases:"youtube.purchases",reports:"youtube.reportHistory",upload:"youtube.upload",viewChannel:"general.viewChannel",viewAllPlayL:"youtube.viewAllPlaylist",viewEvent:"youtube.viewLiveEvents",viewLiveDash:"youtube.viewLiveDashboard",viewAudio:"youtube.viewAudioLibrary",studioVid:"youtube.studio.viewContent",studioEdit:"youtube.studio.editVideo",studioAnaly:"youtube.studio.videoAnalytics",studioComments:"youtube.studio.videoComments",studioTranslate:"youtube.studio.videoTranslations",studioTheir:"youtube.studio.viewTheir",studioCAnaly:"youtube.studio.channelAnalytics",studioCComments:"youtube.studio.channelComments",studioCTranslate:"youtube.studio.channelTranslations",studioArtist:"youtube.studio.artistPage",studioDash:"youtube.studio.dashboard",viewPlaylist:"general.viewPlaylist",readAbout:"general.readingAbout",viewAccount:"general.viewAccount",viewHome:"general.viewHome",watchVid:"general.watchingVid",watchLive:"general.watchingLive",browsing:"general.browsing",searchSomething:"general.searchSomething",watchStreamButton:"general.buttonWatchStream",watchVideoButton:"general.buttonWatchVideo",viewChannelButton:"general.buttonViewChannel",videos:"youtube.videos",perVideoPrivacyToolTip1:"youtube.perVideoPrivacy.tooltip.1",perVideoPrivacyToolTip2:"youtube.perVideoPrivacy.tooltip.2"};let strings=null,oldLang=null,currentTargetLang=null,fetchingStrings=!1,stringFetchTimeout=null;function fetchStrings(){if(oldLang===currentTargetLang&&strings)return;if(fetchingStrings)return;const e=currentTargetLang;fetchingStrings=!0,stringFetchTimeout=setTimeout((()=>{presence.error(`Failed to fetch strings for ${e}.`),fetchingStrings=!1}),5e3),presence.info(`Fetching strings for ${e}.`),presence.getStrings(stringMap,e).then((t=>{e===currentTargetLang&&(clearTimeout(stringFetchTimeout),strings=t,fetchingStrings=!1,oldLang=e,presence.info(`Fetched strings for ${e}.`))})).catch((()=>null))}function checkStringLanguage(e){return currentTargetLang=e,!!strings}setInterval(fetchStrings,3e3),fetchStrings();const settingsFetchStatus={},cachedSettings={};function startSettingGetter(e){if(!settingsFetchStatus[e]){let t=!1;settingsFetchStatus[e]=setTimeout((()=>{t||presence.error(`Failed to fetch setting '${e}' in time.`),delete settingsFetchStatus[e]}),2e3),presence.getSetting(e).then((r=>{cachedSettings[e]=r,t=!0})).catch((()=>null))}}function getSetting(e,t=null){return startSettingGetter(e),cachedSettings[e]??t}let generatedId,generatedImage;async function getThumbnail(e){return generatedId===e?generatedImage:new Promise((t=>{const r=new Image,i=320;r.crossOrigin="anonymous",r.src=`https://i3.ytimg.com/vi/${e}/mqdefault.jpg`,r.onload=function(){let n,s,o,a;r.width>r.height?(n=i,s=i/r.width*r.height,o=0,a=(i-s)/2):(s=i,n=i/r.height*r.width,o=(i-n)/2,a=0);const l=document.createElement("canvas");l.width=i,l.height=i,l.getContext("2d").drawImage(r,o,a,n,s),generatedId=e,generatedImage=l.toDataURL("image/png"),t(generatedImage)},r.onerror=function(){t(`https://i3.ytimg.com/vi/${e}/hqdefault.jpg`)}}))}function tv_isActive(){return!!(document.querySelector(".player-video-title")&&tv_getTitle()&&tv_getUploader()&&getVideoID()&&getChannelURL())}function tv_getTitle(){return document.querySelector(".player-video-title")?.textContent.trim()}function tv_getUploader(){let e=document.querySelector(".player-video-details")?.textContent.trim();return e&&(e=truncateAfter(e,"â€¢")),e}const tv_resolver={isActive:tv_isActive,getTitle:tv_getTitle,getUploader:tv_getUploader,getChannelURL,getVideoID},tv=tv_resolver;function miniplayer_isActive(){return!!(miniplayer_getTitle()&&miniplayer_getUploader()&&miniplayer_getVideoID()&&miniplayer_getChannelURL())}function miniplayer_getTitle(){return document.querySelector(".ytd-miniplayer .title")?.textContent.trim()}function miniplayer_getUploader(){return document.querySelector("#owner-name")?.textContent.trim()}function miniplayer_getVideoID(){const e=document.querySelector("#video-title-link").href;return e?new URL(e).searchParams.get("v"):null}function miniplayer_getChannelURL(){return document.querySelector("#ytd-player .ytp-ce-channel-title.ytp-ce-link")?.href}const miniplayer_resolver={isActive:miniplayer_isActive,getTitle:miniplayer_getTitle,getUploader:miniplayer_getUploader,getChannelURL:miniplayer_getChannelURL,getVideoID:miniplayer_getVideoID},miniplayer=miniplayer_resolver,videoCache=new Map,videoCacheLoading=new Set;async function fetchVideoData(e){const t=await presence.getPageVariable("yt.config_.INNERTUBE_API_KEY","yt.config_.INNERTUBE_CLIENT_NAME","yt.config_.INNERTUBE_CLIENT_VERSION"),r=fetch(`https://www.youtube.com/youtubei/v1/player?key=${t["yt.config_.INNERTUBE_API_KEY"]}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({videoId:e,context:{client:{clientName:t["yt.config_.INNERTUBE_CLIENT_NAME"],clientVersion:t["yt.config_.INNERTUBE_CLIENT_VERSION"]}}})}).then((e=>e.json()));videoCacheLoading.add(e),videoCache.set(e,await r),videoCacheLoading.delete(e)}function api_isActive(){const e=api_getVideoID();return videoCache.has(e)||videoCacheLoading.has(e)?!videoCacheLoading.has(e)&&!!(api_getTitle()&&api_getUploader()&&e&&api_getChannelURL()):(fetchVideoData(e).catch((()=>{presence.error("Failed to fetch video data through API")})),!1)}function api_getTitle(){return videoCache.get(api_getVideoID())?.videoDetails?.title}function api_getUploader(){return videoCache.get(api_getVideoID())?.videoDetails?.author}function api_getVideoID(){return getVideoID()??shorts_getVideoID()}function api_getChannelURL(){return`https://www.youtube.com/channel/${videoCache.get(api_getVideoID())?.videoDetails?.channelId}`}const api_resolver={isActive:api_isActive,getTitle:api_getTitle,getUploader:api_getUploader,getChannelURL:api_getChannelURL,getVideoID:api_getVideoID},api=api_resolver,removeExpiredPrivacyOverwrites=e=>e?e.filter((e=>e.ttl>Date.now())):[];let perVideoPrivacyArray=removeExpiredPrivacyOverwrites(JSON.parse(localStorage.getItem("pmdEnablePrivacy"))),perVideoNonPrivacyArray=removeExpiredPrivacyOverwrites(JSON.parse(localStorage.getItem("pmdDisablePrivacy")));function pvPrivacyUI(e,t,r){let i=!0;const n=(e,t)=>t.some((t=>t.videoId===e));try{if(i=n(t,perVideoPrivacyArray),document.querySelector("#pmdEnablePrivacy"))e?(i=!n(t,perVideoNonPrivacyArray),localStorage.setItem("pmdPrivacyEnabled","true")):(i=n(t,perVideoPrivacyArray),localStorage.setItem("pmdPrivacyEnabled","false"));else{const e=document.createElement("button"),t=document.querySelector(".ytp-chrome-controls .ytp-right-controls");e.id="pmdEnablePrivacy",e.title=`${strings.perVideoPrivacyToolTip1}\n${strings.perVideoPrivacyToolTip2}`,e.className="ytp-button",e.addEventListener("click",(()=>{const e=new URLSearchParams(document.location.search).get("v"),t=Date.now()+60*[5,12,24,168][r]*60*1e3;"true"===localStorage.getItem("pmdPrivacyEnabled")?(n(e,perVideoNonPrivacyArray)?perVideoNonPrivacyArray=perVideoNonPrivacyArray.filter((t=>t.videoId!==e)):perVideoNonPrivacyArray.push({videoId:e,ttl:t}),localStorage.setItem("pmdDisablePrivacy",JSON.stringify(perVideoNonPrivacyArray))):(n(e,perVideoPrivacyArray)?perVideoPrivacyArray=perVideoPrivacyArray.filter((t=>t.videoId!==e)):perVideoPrivacyArray.push({videoId:e,ttl:t}),localStorage.setItem("pmdEnablePrivacy",JSON.stringify(perVideoPrivacyArray)))})),e.innerHTML='\n   \t\t\n\t\t\t<svg id="pmdPrivacyEnabled" fill="white" xmlns="http://www.w3.org/2000/svg" height="100%" width="100%" style="transform: scale(0.6)" viewBox="0 0 640 512"><path d="M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7L525.6 386.7c39.6-40.6 66.4-86.1 79.9-118.4c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C465.5 68.8 400.8 32 320 32c-68.2 0-125 26.3-169.3 60.8L38.8 5.1zM223.1 149.5C248.6 126.2 282.7 112 320 112c79.5 0 144 64.5 144 144c0 24.9-6.3 48.3-17.4 68.7L408 294.5c8.4-19.3 10.6-41.4 4.8-63.3c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3c0 10.2-2.4 19.8-6.6 28.3l-90.3-70.8zM373 389.9c-16.4 6.5-34.3 10.1-53 10.1c-79.5 0-144-64.5-144-144c0-6.9 .5-13.6 1.4-20.2L83.1 161.5C60.3 191.2 44 220.8 34.5 243.7c-3.3 7.9-3.3 16.7 0 24.6c14.9 35.7 46.2 87.7 93 131.1C174.5 443.2 239.2 480 320 480c47.8 0 89.9-12.9 126.2-32.5L373 389.9z"></path></svg>\n\t\t\t<svg id="pmdPrivacyDisabled" fill="white" xmlns="http://www.w3.org/2000/svg" height="100%" width="100%" style="transform: scale(0.54)" viewBox="0 0 576 512"><path d="M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z"></path></svg>',t.prepend(e)}try{const e=document.querySelector("#pmdPrivacyEnabled"),t=document.querySelector("#pmdPrivacyDisabled");i?(e.style.display="inline-block",t.style.display="none"):(e.style.display="none",t.style.display="inline-block")}catch{}}catch(t){return presence.error(`Something went wrong trying to place the privacy toggle button: ${t}`),e}return i}localStorage.setItem("pmdEnablePrivacy",JSON.stringify(perVideoPrivacyArray)),localStorage.setItem("pmdDisablePrivacy",JSON.stringify(perVideoNonPrivacyArray));const browsingTimestamp=Math.floor(Date.now()/1e3);var YouTubeAssets,LogoMode;!function(e){e.Logo="https://cdn.rcd.gg/PreMiD/websites/Y/YouTube/assets/logo.png",e.Studio="https://cdn.rcd.gg/PreMiD/websites/Y/YouTube/assets/0.png",e.Shorts="https://cdn.rcd.gg/PreMiD/websites/Y/YouTube/assets/1.png"}(YouTubeAssets||(YouTubeAssets={})),function(e){e[e.YouTubeLogo=0]="YouTubeLogo",e[e.Thumbnail=1]="Thumbnail",e[e.Channel=2]="Channel"}(LogoMode||(LogoMode={}));const nullResolver={isActive:()=>!0,getTitle:()=>document.title,getUploader:()=>"",getChannelURL:()=>"",getVideoID:()=>""};presence.on("UpdateData",(async()=>{const[e,t,r,i,n,s,o,a,l,c,d,u]=[getSetting("lang","en"),getSetting("privacy",!0),getSetting("privacy-ttl",1),getSetting("privacy-shown",!0),getSetting("time",!0),getSetting("vidDetail","%title%"),getSetting("vidState","%uploader%"),getSetting("channelPic",!1),getSetting("logo",0),getSetting("buttons",!0),getSetting("hideHome",!1),getSetting("hidePaused",!0)],{pathname:g,hostname:m,search:y,href:p}=document.location;if(!checkStringLanguage(e))return;const h=Array.from(document.querySelectorAll(".video-stream")).find((e=>e.duration));if(h){const{mediaSession:e}=navigator;if("playing"!==e.playbackState&&u)return presence.clearActivity();const a=[video_sources_embed,shorts,old,tv,video_sources_default,miniplayer,movies,api,nullResolver].find((e=>e.isActive())),d=a.getTitle(),g=a.getUploader();let m;const v=!!document.querySelector(".ytp-live"),b="true"===document.querySelector("#playlist-actions .yt-icon-button#button")?.getAttribute("aria-pressed"),S=document.querySelector("#content #header-description > h3:nth-child(1) > yt-formatted-string > a")?.textContent.trim()??"",f=document.querySelectorAll("#content #publisher-container > div > yt-formatted-string > span");let T="";S&&(T=f.length>1?`${f[0].textContent} / ${f[2].textContent}`:document.querySelector("#content #publisher-container > div > span").textContent),l===LogoMode.Channel&&(m=a===miniplayer?"":document.querySelector("#avatar.ytd-video-owner-renderer > img")?.src.replace(/=s\d+/,"=s512"));const w=document.querySelector("g#privacy_unlisted > path"),C=document.querySelector("h1.title+ytd-badge-supported-renderer path"),_=w&&C&&w?.getAttribute("d")===C?.getAttribute("d"),I=a.getVideoID(),A={type:3,details:s.replace("%title%",d.trim()).replace("%uploader%",g.trim()).replace("%playlistTitle%",S.trim()).replace("%playlistQueue%",T.trim()),state:o.replace("%title%",d.trim()).replace("%uploader%",g.trim()).replace("%playlistTitle%",S.trim()).replace("%playlistQueue%",T.trim()),largeImageKey:_||l===LogoMode.YouTubeLogo||""===m?YouTubeAssets.Logo:l===LogoMode.Thumbnail?await getThumbnail(I):m,smallImageKey:h.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":h.loop?"https://cdn.rcd.gg/PreMiD/resources/repeat-one.png":b?"https://cdn.rcd.gg/PreMiD/resources/repeat.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",smallImageText:h.paused?strings.pause:h.loop?"On loop":b?"Playlist on loop":strings.play,endTimestamp:h?.paused?-1:adjustTimeError(presence.getTimestampsfromMedia(h)[1],.75),startTimestamp:h?.paused?-1:adjustTimeError(presence.getTimestampsfromMedia(h)[0],.75)};o.includes("{0}")&&delete A.state,(h.paused||v)&&(delete A.startTimestamp,delete A.endTimestamp,v&&(A.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/live.png",A.smallImageText=strings.live));let L=t;if(a===video_sources_default)if(i)L=pvPrivacyUI(t,new URLSearchParams(y).get("v"),r);else{const e=document.querySelector("#pmdEnablePrivacy");e&&(e.remove(),document.querySelector("#pmdEnablePrivacyTooltip").remove())}document.querySelector(".ytp-ad-player-overlay")?(A.details=strings.ad,delete A.state):L?(A.details=v?strings.watchLive:strings.watchVid,delete A.state,A.largeImageKey=YouTubeAssets.Logo,A.startTimestamp=browsingTimestamp,delete A.endTimestamp):c&&!_&&(A.buttons=[{label:v?strings.watchStreamButton:strings.watchVideoButton,url:p.includes("/watch?v=")?p.split("&")[0]:`https://www.youtube.com/watch?v=${I}`},{label:strings.viewChannelButton,url:a.getChannelURL()}]),n||(delete A.startTimestamp,delete A.endTimestamp),a===shorts&&(A.largeImageKey=YouTubeAssets.Shorts,A.smallImageKey=h.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",A.smallImageText=h.paused?strings.pause:strings.play),A.details?presence.setActivity(A):presence.setActivity()}else if("www.youtube.com"===m||"youtube.com"===m){const e={largeImageKey:YouTubeAssets.Logo,startTimestamp:browsingTimestamp,type:3};let r=!1;switch(!0){case"/"===g:{const t=document.querySelector('[class="style-scope ytd-feed-filter-chip-bar-renderer iron-selected"]')??null;if((t&&Array.prototype.indexOf.call(t.parentElement.children,t))>0)e.details=strings.browsingTypeVideos.replace("{0}",t?.textContent.trim().toLowerCase());else{if(d)return presence.clearActivity();e.details=strings.viewHome}break}case g.includes("/results"):{r=!0;const t=document.querySelector("#search-input > div > div:nth-child(2) > input")??document.querySelector("#search-input > input");e.details=strings.search,e.state=t.value,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png";break}case g.includes("/@"):case g.includes("/channel"):case g.includes("/c"):case g.includes("/user"):{const t=document.querySelector('[class="style-scope ytd-feed-filter-chip-bar-renderer iron-selected"]')?.textContent.trim(),i=document.title.substring(0,document.title.lastIndexOf(" - YouTube"));let n;if(n=i.includes(document.querySelector("#author-text.ytd-backstage-post-renderer")?.textContent.trim())?document.querySelector("#author-text.ytd-backstage-post-renderer").textContent:!document.querySelector("#text.ytd-channel-name")?.textContent&&i.includes(document.querySelector("#text.ytd-channel-name")?.textContent)?document.querySelector("#text.ytd-channel-name").textContent:/\(([^)]+)\)/.test(i)?i.replace(/\(([^)]+)\)/,""):i,""!==n.replace(/\s+/g,"")&&"â€Œ"!==n.replace(/\s+/g,"")||(n="null"),g.includes("/videos")?(e.details=`${strings.browsingThrough} ${t} ${document.querySelector('[class="style-scope ytd-tabbed-page-header"] [aria-selected="true"]')?.textContent.trim().toLowerCase()}`,e.state=`${strings.ofChannel} ${n}`):g.includes("/shorts")?(e.details=strings.browseShorts,e.state=`${strings.ofChannel} ${n}`):g.includes("/playlists")?(e.details=strings.browsingPlayl,e.state=`${strings.ofChannel} ${n}`):g.includes("/community")?(e.details=strings.viewCPost,e.state=`${strings.ofChannel} ${n}`,e.largeImageKey=l===LogoMode.Thumbnail?document.querySelector('[id="post"]')?.querySelectorAll("img")[1]?.src:l===LogoMode.Channel?document.querySelector('[id="post"]')?.querySelector("img")?.src:YouTubeAssets.Logo):g.includes("/about")?(e.details=strings.readChannel,e.state=n,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png"):g.includes("/search")?(r=!0,e.details=strings.searchChannel.replace("{0}",n),e.state=new URLSearchParams(y).get("query"),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):(e.details=strings.viewChannel,e.state=n),a){const t=(document.querySelector("yt-img-shadow.ytd-channel-avatar-editor > img")??document.querySelector("#avatar.ytd-c4-tabbed-header-renderer > img")??document.querySelector("#author-thumbnail > a > yt-img-shadow > img"))?.src.replace(/=s[0-9]+/,"=s512")??YouTubeAssets.Logo;t&&(e.largeImageKey=t)}break}case g.includes("/post"):{e.details=strings.viewCPost;const t=document.querySelector("#author-text");t&&(e.state=`${strings.ofChannel} ${t.textContent}`);break}case g.includes("/feed/trending"):e.details=strings.trending;break;case g.includes("/feed/subscriptions"):e.details=strings.browsingThrough,e.state=strings.subscriptions;break;case g.includes("/feed/library"):e.details=strings.browsingThrough,e.state=strings.library;break;case g.includes("/feed/history"):e.details=strings.browsingThrough,e.state=strings.history;break;case g.includes("/feed/purchases"):e.details=strings.browsingThrough,e.state=strings.purchases;break;case g.includes("/playlist"):{e.details=strings.viewPlaylist;const t=document.querySelector("#text-displayed")??document.querySelector("ytd-playlist-header-renderer yt-dynamic-sizing-formatted-string.ytd-playlist-header-renderer")??document.querySelector("#title > yt-formatted-string > a");e.state=t.textContent.trim();break}case g.includes("/premium"):e.details=strings.readAbout,e.state="Youtube Premium",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case g.includes("/gaming"):e.details=strings.browsingThrough,e.state="Youtube Gaming",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case g.includes("/account"):e.details=strings.viewAccount;break;case g.includes("/reporthistory"):e.details=strings.reports;break;case g.includes("/intl"):e.details=strings.readAbout,e.state=document.title.substring(0,document.title.lastIndexOf(" - YouTube")),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case g.includes("/upload"):e.details=strings.upload,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/writing.png";break;case g.includes("/view_all_playlists"):e.details=strings.viewAllPlayL;break;case g.includes("/my_live_events"):e.details=strings.viewEvent;break;case g.includes("/live_dashboard"):e.details=strings.viewLiveDash;break;case g.includes("/audiolibrary"):e.details=strings.viewAudio}t&&(r?(e.details=strings.searchSomething,delete e.state):(e.details=strings.browsing,delete e.state,delete e.smallImageKey)),n||(delete e.startTimestamp,delete e.endTimestamp),e.details?presence.setActivity(e,!0):presence.setActivity()}else if("studio.youtube.com"===m){const e={largeImageKey:YouTubeAssets.Logo,smallImageKey:YouTubeAssets.Studio,smallImageText:"Youtube Studio",startTimestamp:browsingTimestamp};switch(!0){case g.includes("/videos"):e.details=strings.studioVid;break;case g.includes("/video"):{const t=document.querySelector("#entity-name");g.includes("/edit")?(e.details=strings.studioEdit,e.state=t.textContent):g.includes("/analytics")?(e.details=strings.studioAnaly,e.state=t.textContent):g.includes("/comments")?(e.details=strings.studioComments,e.state=t.textContent):g.includes("/translations")&&(e.details=strings.studioTranslate,e.state=t.textContent);break}case g.includes("/analytics"):e.details=strings.studioTheir,e.state=strings.studioCAnaly;break;case g.includes("/comments"):e.details=strings.studioTheir,e.state=strings.studioCComments;break;case g.includes("/translations"):e.details=strings.studioTheir,e.state=strings.studioCTranslate;break;case g.includes("/channel"):e.details=strings.studioDash;break;case g.includes("/artist"):e.details=strings.studioTheir,e.state=strings.studioArtist}t&&(e.details=strings.browsing,delete e.state,delete e.smallImageKey),n||(delete e.startTimestamp,delete e.endTimestamp),e.details?presence.setActivity(e):presence.setActivity()}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;