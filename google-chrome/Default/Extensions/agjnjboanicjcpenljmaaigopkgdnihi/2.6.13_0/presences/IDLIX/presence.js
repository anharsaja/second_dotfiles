var __webpack_exports__={};const presence=new Presence({clientId:"1052119362015866882"}),browsingTimestamp=Math.floor(Date.now()/1e3);async function getStrings(){return presence.getStrings({browse:"general.browsing",buttonWatchVideo:"general.buttonWatchVideo",buttonViewPage:"general.buttonViewPage",buttonWatchMovie:"general.buttonWatchVideo",paused:"general.paused",play:"general.playing",search:"general.searchFor",viewHome:"general.viewHome",viewShow:"general.viewShow"},await presence.getSetting("lang").catch((()=>"en")))}let strings,current,duration,paused,isVideo,oldLang=null;function videoDetails(e,t){delete e.startTimestamp;const s=document.querySelector('[class="pag_episodes"]')?.querySelectorAll("a")[1]?.getAttribute("title")??document.querySelector('[class="epih1"]')?.textContent??document.querySelector('[class="data"]').firstElementChild?.textContent??document.querySelector('[property="og:title"]')?.getAttribute("content")?.replace(" - Subtitle Indonesia - IDLIX","")??document.querySelector("title")?.textContent?.split("- Subtitle Indonesia - IDLIX")?.[0]??"Unknown";return e.largeImageKey=document.querySelector('[class="poster"]')?.querySelector("img")?.getAttribute("src")??document.querySelector('[class="owl-wrapper"]')?.querySelector("img")?.getAttribute("src")??"https://cdn.rcd.gg/PreMiD/websites/I/IDLIX/assets/logo.png",isNaN(duration)?(e.details=strings.viewShow,e.state=s,e.buttons=[{label:strings.buttonViewPage,url:t}]):(e.details=s,e.state=document.querySelector('[class="epih3"]')?.textContent??"",e.buttons=[{label:strings.buttonWatchVideo,url:t}],e.smallImageKey=paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=paused?strings.paused:strings.play,paused||([e.startTimestamp,e.endTimestamp]=presence.getTimestamps(current,duration))),e}presence.on("iFrameData",(e=>{({current,duration,paused,isVideo}=e)})),presence.on("UpdateData",(async()=>{const{hostname:e}=document.location;if(!(document.querySelector('[property="og:site_name"]')?.getAttribute("content").toLowerCase().includes("idflix")||document.querySelector("title")?.textContent.toLowerCase().includes("idlix")||e?.toLowerCase().includes("idlix")||e?.toLowerCase().includes("idflix")))return;const t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/I/IDLIX/assets/logo.png",startTimestamp:browsingTimestamp,type:3},{pathname:s,href:n}=document.location,[r,i,a,o]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("covers")]),c=document.querySelector('[class="content right full"]')?.querySelector("h2")?.textContent?.toLowerCase()??document.querySelector('[class="content right full"]')?.querySelector("h1")?.textContent?.toLowerCase(),l=document.querySelector('[class="heading-archive"]')?.textContent?.toLowerCase(),g=document.querySelector('input[type="text"]');if(oldLang===r&&strings||(oldLang=r,strings=await getStrings()),i)return t.details=strings.browse,void presence.setActivity(t);if(g?.value||s.includes("search"))return t.details=strings.search,t.state=g?.value||document.querySelector("body > div.container.main-container.min-vh-100.px-3 > h3")?.textContent.split('"')[1]||"Nothing",t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",void presence.setActivity(t);switch(s.split("/")[1]){case"":t.details=strings.viewHome;break;case"episodes":case"episode":case"tvseries":case"movie":videoDetails(t,n);break;case"trending":case"genre":t.buttons=[{label:"Browse",url:n}],t.details="genre"===s?"Browsing all genres":`Viewing shows in the ${l??"trending"} genre`;break;default:isVideo?videoDetails(t,n):l&&c?(t.details=`Viewing ${l} ${c}`,t.state=`Viewing page ${document.querySelector('[class="current"]')?.textContent}`,t.buttons=[{label:strings.buttonViewPage,url:n}]):t.details=strings.browse}!a&&t.buttons&&delete t.buttons,o||"https://cdn.rcd.gg/PreMiD/websites/I/IDLIX/assets/logo.png"===t.largeImageKey||(t.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/I/IDLIX/assets/logo.png"),t.details?presence.setActivity(t):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;