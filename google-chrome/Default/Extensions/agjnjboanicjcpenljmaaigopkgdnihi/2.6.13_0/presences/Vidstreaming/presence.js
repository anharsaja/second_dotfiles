var __webpack_exports__={};const presence=new Presence({clientId:"696085711148941344"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused"});let iFrameVideo,currentTime,duration,paused,video,playback,browsingTimestamp,title,firstVideo,childLength;presence.on("iFrameData",(e=>{playback=!!e.iframeVideo.duration,playback&&(({iFrameVideo,paused}=e.iframeVideo),currentTime=e.iframeVideo.currTime,duration=e.iframeVideo.dur,video=e)})),presence.on("UpdateData",(async()=>{const e=await presence.getSetting("sSI"),t=await presence.getSetting("sTE"),a=await presence.getSetting("sVT"),i=await presence.getSetting("buttons");t&&(browsingTimestamp=Math.floor(Date.now()/1e3));const s={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/V/Vidstreaming/assets/logo.png"};if(e)switch(document.location.pathname){case"/":s.startTimestamp=browsingTimestamp,s.details="Viewing home page or recently subbed";break;case"/recently-added-raw":s.startTimestamp=browsingTimestamp,s.details="Viewing the recently added raw";break;case"/recently-added-dub":s.startTimestamp=browsingTimestamp,s.details="Viewing the recently added dub";break;case"/movies":s.startTimestamp=browsingTimestamp,s.details="Viewing the anime movies";break;case"/new-season":s.startTimestamp=browsingTimestamp,s.details="Viewing the new anime seasons.";break;case"/popular":s.startTimestamp=browsingTimestamp,s.details="Viewing the popular anime.";break;case"/ongoing-series":s.startTimestamp=browsingTimestamp,s.details="Viewing the ongoing series.";break;default:document.location.pathname.includes("/videos/")?(title=document.querySelector("body > #wrapper_bg > #wrapper > #main_bg > div > div > div.video-info-left > h1"),title?(s.state=title.textContent,i&&(childLength=document.querySelector("#main_bg > div:nth-child(5) > div > div.video-info-left > ul").children.length,firstVideo=document.querySelector(`#main_bg > div:nth-child(5) > div > div.video-info-left > ul > li:nth-child(${childLength-1})`).firstElementChild.getAttribute("href"),s.buttons=[{label:"Current Episode",url:document.location.href},{label:"First Episode",url:`https://gogo-stream.com${firstVideo}`}]),iFrameVideo&&!isNaN(duration)&&title&&video?paused?paused&&(delete s.startTimestamp,delete s.endTimestamp,s.details="Paused:",s.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png"):(s.details="Watching:",s.smallImageKey=paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",a&&(s.smallImageText=paused?(await strings).pause:(await strings).play,[s.startTimestamp,s.endTimestamp]=presence.getTimestamps(Math.floor(currentTime),Math.floor(duration)))):!iFrameVideo&&isNaN(duration)&&title?(s.details="Viewing:",s.state=title.textContent,s.startTimestamp=browsingTimestamp):(s.details="Error 03: Watching unknown anime.",s.state="Can't tell if playing or not.",s.startTimestamp=browsingTimestamp,s.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",s.smallImageText="Error 3",presence.error("Can't tell what you are watching. Fix a variable or line of code."))):(s.startTimestamp=browsingTimestamp,s.details="Error 02: Watching unknown anime.",s.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",presence.error("Watching an unknown show."))):" Result search"===document.querySelector("#main_bg > div:nth-child(5) > div > div.section-header > h3").textContent?(s.details="Searching:",s.state=document.location.href.replace("https://gogo-stream.com/search.html?keyword=","").split("%20").join(" "),s.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",s.smallImageText="Searching"):(s.startTimestamp=browsingTimestamp,s.details="Error 01: Can't Read Page",s.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",presence.error("Can't read page."))}s.details?presence.setActivity(s):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFpQixVQUM5QnJELFNBQVN1RCxNQUFNLHdFQUluQnZCLEVBQWFLLGVBQWlCeEIsa0JBQzlCbUIsRUFBYU0sUUFBVSxvQ0FDdkJOLEVBQWFvQixjQUFnQixpREFDN0JwRCxTQUFTdUQsTUFBTSwrQkFHd0YsbUJBQXRHckIsU0FBU00sY0FBYywrREFBK0RFLGFBQzNGVixFQUFhTSxRQUFVLGFBQ3ZCTixFQUFhUyxNQUFRUCxTQUFTQyxTQUFTYyxLQUNsQ08sUUFBUSwrQ0FBZ0QsSUFDeERDLE1BQU0sT0FDTkMsS0FBSyxLQUNWMUIsRUFBYW9CLGNBQWdCLGlEQUM3QnBCLEVBQWFxQixlQUFpQixjQUc5QnJCLEVBQWFLLGVBQWlCeEIsa0JBQzlCbUIsRUFBYU0sUUFBVSw0QkFDdkJOLEVBQWFvQixjQUFnQixpREFDN0JwRCxTQUFTdUQsTUFBTSxxQkFJMUJ2QixFQUFhTSxRQUlkdEMsU0FBUzJELFlBQVkzQixHQUhyQmhDLFNBQVMyRCxhQUliIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcHJlc2VuY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcHJlc2VuY2UgPSBuZXcgUHJlc2VuY2Uoe1xuICAgIGNsaWVudElkOiBcIjY5NjA4NTcxMTE0ODk0MTM0NFwiLFxufSksIHN0cmluZ3MgPSBwcmVzZW5jZS5nZXRTdHJpbmdzKHtcbiAgICBwbGF5OiBcImdlbmVyYWwucGxheWluZ1wiLFxuICAgIHBhdXNlOiBcImdlbmVyYWwucGF1c2VkXCIsXG59KTtcbmxldCBpRnJhbWVWaWRlbywgY3VycmVudFRpbWUsIGR1cmF0aW9uLCBwYXVzZWQsIHZpZGVvLCBwbGF5YmFjaywgYnJvd3NpbmdUaW1lc3RhbXAsIHRpdGxlLCBmaXJzdFZpZGVvLCBjaGlsZExlbmd0aDtcbnByZXNlbmNlLm9uKFwiaUZyYW1lRGF0YVwiLCAoZGF0YSkgPT4ge1xuICAgIHBsYXliYWNrID0gISFkYXRhLmlmcmFtZVZpZGVvLmR1cmF0aW9uO1xuICAgIGlmIChwbGF5YmFjaykge1xuICAgICAgICAoeyBpRnJhbWVWaWRlbywgcGF1c2VkIH0gPSBkYXRhLmlmcmFtZVZpZGVvKTtcbiAgICAgICAgY3VycmVudFRpbWUgPSBkYXRhLmlmcmFtZVZpZGVvLmN1cnJUaW1lO1xuICAgICAgICBkdXJhdGlvbiA9IGRhdGEuaWZyYW1lVmlkZW8uZHVyO1xuICAgICAgICB2aWRlbyA9IGRhdGE7XG4gICAgfVxufSk7XG5wcmVzZW5jZS5vbihcIlVwZGF0ZURhdGFcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGluZm8gPSBhd2FpdCBwcmVzZW5jZS5nZXRTZXR0aW5nKFwic1NJXCIpLCBlbGFwc2VkID0gYXdhaXQgcHJlc2VuY2UuZ2V0U2V0dGluZyhcInNURVwiKSwgdmlkZW9UaW1lID0gYXdhaXQgcHJlc2VuY2UuZ2V0U2V0dGluZyhcInNWVFwiKSwgYnV0dG9ucyA9IGF3YWl0IHByZXNlbmNlLmdldFNldHRpbmcoXCJidXR0b25zXCIpO1xuICAgIGlmIChlbGFwc2VkKVxuICAgICAgICBicm93c2luZ1RpbWVzdGFtcCA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApO1xuICAgIGNvbnN0IHByZXNlbmNlRGF0YSA9IHtcbiAgICAgICAgbGFyZ2VJbWFnZUtleTogXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL1YvVmlkc3RyZWFtaW5nL2Fzc2V0cy9sb2dvLnBuZ1wiLFxuICAgIH07XG4gICAgaWYgKGluZm8pIHtcbiAgICAgICAgc3dpdGNoIChkb2N1bWVudC5sb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgICAgICAgY2FzZSBcIi9cIjoge1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCA9IGJyb3dzaW5nVGltZXN0YW1wO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIGhvbWUgcGFnZSBvciByZWNlbnRseSBzdWJiZWRcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgXCIvcmVjZW50bHktYWRkZWQtcmF3XCI6IHtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhcnRUaW1lc3RhbXAgPSBicm93c2luZ1RpbWVzdGFtcDtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyB0aGUgcmVjZW50bHkgYWRkZWQgcmF3XCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXNlIFwiL3JlY2VudGx5LWFkZGVkLWR1YlwiOiB7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXJ0VGltZXN0YW1wID0gYnJvd3NpbmdUaW1lc3RhbXA7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgdGhlIHJlY2VudGx5IGFkZGVkIGR1YlwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSBcIi9tb3ZpZXNcIjoge1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCA9IGJyb3dzaW5nVGltZXN0YW1wO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHRoZSBhbmltZSBtb3ZpZXNcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgXCIvbmV3LXNlYXNvblwiOiB7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXJ0VGltZXN0YW1wID0gYnJvd3NpbmdUaW1lc3RhbXA7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgdGhlIG5ldyBhbmltZSBzZWFzb25zLlwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSBcIi9wb3B1bGFyXCI6IHtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhcnRUaW1lc3RhbXAgPSBicm93c2luZ1RpbWVzdGFtcDtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyB0aGUgcG9wdWxhciBhbmltZS5cIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgXCIvb25nb2luZy1zZXJpZXNcIjoge1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCA9IGJyb3dzaW5nVGltZXN0YW1wO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHRoZSBvbmdvaW5nIHNlcmllcy5cIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgaWYgKGRvY3VtZW50LmxvY2F0aW9uLnBhdGhuYW1lLmluY2x1ZGVzKFwiL3ZpZGVvcy9cIikpIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keSA+ICN3cmFwcGVyX2JnID4gI3dyYXBwZXIgPiAjbWFpbl9iZyA+IGRpdiA+IGRpdiA+IGRpdi52aWRlby1pbmZvLWxlZnQgPiBoMVwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRpdGxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSB0aXRsZS50ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChidXR0b25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRMZW5ndGggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21haW5fYmcgPiBkaXY6bnRoLWNoaWxkKDUpID4gZGl2ID4gZGl2LnZpZGVvLWluZm8tbGVmdCA+IHVsXCIpLmNoaWxkcmVuLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJzdFZpZGVvID0gZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoYCNtYWluX2JnID4gZGl2Om50aC1jaGlsZCg1KSA+IGRpdiA+IGRpdi52aWRlby1pbmZvLWxlZnQgPiB1bCA+IGxpOm50aC1jaGlsZCgke2NoaWxkTGVuZ3RoIC0gMX0pYClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpcnN0RWxlbWVudENoaWxkLmdldEF0dHJpYnV0ZShcImhyZWZcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmJ1dHRvbnMgPSBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBcIkN1cnJlbnQgRXBpc29kZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBkb2N1bWVudC5sb2NhdGlvbi5ocmVmLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogXCJGaXJzdCBFcGlzb2RlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IGBodHRwczovL2dvZ28tc3RyZWFtLmNvbSR7Zmlyc3RWaWRlb31gLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaUZyYW1lVmlkZW8gJiYgIWlzTmFOKGR1cmF0aW9uKSAmJiB0aXRsZSAmJiB2aWRlbykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcGF1c2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJXYXRjaGluZzpcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBwYXVzZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9wYXVzZS5wbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3BsYXkucG5nXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2aWRlb1RpbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlVGV4dCA9IHBhdXNlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gKGF3YWl0IHN0cmluZ3MpLnBhdXNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAoYXdhaXQgc3RyaW5ncykucGxheTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtwcmVzZW5jZURhdGEuc3RhcnRUaW1lc3RhbXAsIHByZXNlbmNlRGF0YS5lbmRUaW1lc3RhbXBdID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZS5nZXRUaW1lc3RhbXBzKE1hdGguZmxvb3IoY3VycmVudFRpbWUpLCBNYXRoLmZsb29yKGR1cmF0aW9uKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAocGF1c2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBwcmVzZW5jZURhdGEuc3RhcnRUaW1lc3RhbXA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBwcmVzZW5jZURhdGEuZW5kVGltZXN0YW1wO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiUGF1c2VkOlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvcGF1c2UucG5nXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoIWlGcmFtZVZpZGVvICYmIGlzTmFOKGR1cmF0aW9uKSAmJiB0aXRsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nOlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IHRpdGxlLnRleHRDb250ZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGFydFRpbWVzdGFtcCA9IGJyb3dzaW5nVGltZXN0YW1wO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIkVycm9yIDAzOiBXYXRjaGluZyB1bmtub3duIGFuaW1lLlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IFwiQ2FuJ3QgdGVsbCBpZiBwbGF5aW5nIG9yIG5vdC5cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhcnRUaW1lc3RhbXAgPSBicm93c2luZ1RpbWVzdGFtcDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC9yZXNvdXJjZXMvc2VhcmNoLnBuZ1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlVGV4dCA9IFwiRXJyb3IgM1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlLmVycm9yKFwiQ2FuJ3QgdGVsbCB3aGF0IHlvdSBhcmUgd2F0Y2hpbmcuIEZpeCBhIHZhcmlhYmxlIG9yIGxpbmUgb2YgY29kZS5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhcnRUaW1lc3RhbXAgPSBicm93c2luZ1RpbWVzdGFtcDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJFcnJvciAwMjogV2F0Y2hpbmcgdW5rbm93biBhbmltZS5cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9zZWFyY2gucG5nXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZS5lcnJvcihcIldhdGNoaW5nIGFuIHVua25vd24gc2hvdy5cIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtYWluX2JnID4gZGl2Om50aC1jaGlsZCg1KSA+IGRpdiA+IGRpdi5zZWN0aW9uLWhlYWRlciA+IGgzXCIpLnRleHRDb250ZW50ID09PSBcIiBSZXN1bHQgc2VhcmNoXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlNlYXJjaGluZzpcIjtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnQubG9jYXRpb24uaHJlZlxuICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoXCJodHRwczovL2dvZ28tc3RyZWFtLmNvbS9zZWFyY2guaHRtbD9rZXl3b3JkPVwiLCBcIlwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnNwbGl0KFwiJTIwXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAuam9pbihcIiBcIik7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3Jlc291cmNlcy9zZWFyY2gucG5nXCI7XG4gICAgICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zbWFsbEltYWdlVGV4dCA9IFwiU2VhcmNoaW5nXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhcnRUaW1lc3RhbXAgPSBicm93c2luZ1RpbWVzdGFtcDtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIkVycm9yIDAxOiBDYW4ndCBSZWFkIFBhZ2VcIjtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnNtYWxsSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvcmVzb3VyY2VzL3NlYXJjaC5wbmdcIjtcbiAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2UuZXJyb3IoXCJDYW4ndCByZWFkIHBhZ2UuXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoIXByZXNlbmNlRGF0YS5kZXRhaWxzKSB7XG4gICAgICAgIHByZXNlbmNlLnNldEFjdGl2aXR5KCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBwcmVzZW5jZS5zZXRBY3Rpdml0eShwcmVzZW5jZURhdGEpO1xuICAgIH1cbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY0hKbGMyVnVZMlV1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SndjbVZ6Wlc1alpTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGRkJRVkVzUTBGQlF6dEpRVU0xUWl4UlFVRlJMRVZCUVVVc2IwSkJRVzlDTzBOQlF6bENMRU5CUVVNc1JVRkRSaXhQUVVGUExFZEJRVWNzVVVGQlVTeERRVUZETEZWQlFWVXNRMEZCUXp0SlFVTTNRaXhKUVVGSkxFVkJRVVVzYVVKQlFXbENPMGxCUTNaQ0xFdEJRVXNzUlVGQlJTeG5Ra0ZCWjBJN1EwRkRka0lzUTBGQlF5eERRVUZETzBGQlEwb3NTVUZCU1N4WFFVRnZRaXhGUVVOMlFpeFhRVUZ0UWl4RlFVTnVRaXhSUVVGblFpeEZRVU5vUWl4TlFVRmxMRVZCUTJZc1MwRlJReXhGUVVORUxGRkJRV2xDTEVWQlEycENMR2xDUVVGNVFpeEZRVU42UWl4TFFVRXdRaXhGUVVNeFFpeFZRVUZyUWl4RlFVTnNRaXhYUVVGdFFpeERRVUZETzBGQlJYSkNMRkZCUVZFc1EwRkJReXhGUVVGRkxFTkJRMVlzV1VGQldTeEZRVU5hTEVOQlFVTXNTVUZSUVN4RlFVRkZMRVZCUVVVN1NVRkRTaXhSUVVGUkxFZEJRVWNzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1VVRkJVU3hEUVVGRE8wbEJRM1pETEVsQlFVa3NVVUZCVVN4RlFVRkZPMUZCUTJJc1EwRkJReXhGUVVGRkxGZEJRVmNzUlVGQlJTeE5RVUZOTEVWQlFVVXNSMEZCUnl4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFTkJRVU03VVVGRE4wTXNWMEZCVnl4SFFVRkhMRWxCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zVVVGQlVTeERRVUZETzFGQlEzaERMRkZCUVZFc1IwRkJSeXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEVkQlFVY3NRMEZCUXp0UlFVTm9ReXhMUVVGTExFZEJRVWNzU1VGQlNTeERRVUZETzB0QlEySTdRVUZEUml4RFFVRkRMRU5CUTBRc1EwRkJRenRCUVVWR0xGRkJRVkVzUTBGQlF5eEZRVUZGTEVOQlFVTXNXVUZCV1N4RlFVRkZMRXRCUVVzc1NVRkJTU3hGUVVGRk8wbEJRM0JETEUxQlFVMHNTVUZCU1N4SFFVRkhMRTFCUVUwc1VVRkJVU3hEUVVGRExGVkJRVlVzUTBGQlZTeExRVUZMTEVOQlFVTXNSVUZEY2tRc1QwRkJUeXhIUVVGSExFMUJRVTBzVVVGQlVTeERRVUZETEZWQlFWVXNRMEZCVlN4TFFVRkxMRU5CUVVNc1JVRkRia1FzVTBGQlV5eEhRVUZITEUxQlFVMHNVVUZCVVN4RFFVRkRMRlZCUVZVc1EwRkJWU3hMUVVGTExFTkJRVU1zUlVGRGNrUXNUMEZCVHl4SFFVRkhMRTFCUVUwc1VVRkJVU3hEUVVGRExGVkJRVlVzUTBGQlZTeFRRVUZUTEVOQlFVTXNRMEZCUXp0SlFVVjZSQ3hKUVVGSkxFOUJRVTg3VVVGQlJTeHBRa0ZCYVVJc1IwRkJSeXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRVZCUVVVc1IwRkJSeXhKUVVGSkxFTkJRVU1zUTBGQlF6dEpRVVV2UkN4TlFVRk5MRmxCUVZrc1IwRkJhVUk3VVVGRGJFTXNZVUZCWVN4RlFVTmFMRzFGUVVGdFJUdExRVU53UlN4RFFVRkRPMGxCUTBZc1NVRkJTU3hKUVVGSkxFVkJRVVU3VVVGRFZDeFJRVUZSTEZGQlFWRXNRMEZCUXl4UlFVRlJMRU5CUVVNc1VVRkJVU3hGUVVGRk8xbEJRMjVETEV0QlFVc3NSMEZCUnl4RFFVRkRMRU5CUVVNN1owSkJRMVFzV1VGQldTeERRVUZETEdOQlFXTXNSMEZCUnl4cFFrRkJhVUlzUTBGQlF6dG5Ra0ZEYUVRc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eHpRMEZCYzBNc1EwRkJRenRuUWtGRk9VUXNUVUZCVFR0aFFVTk9PMWxCUTBRc1MwRkJTeXh4UWtGQmNVSXNRMEZCUXl4RFFVRkRPMmRDUVVNelFpeFpRVUZaTEVOQlFVTXNZMEZCWXl4SFFVRkhMR2xDUVVGcFFpeERRVUZETzJkQ1FVTm9SQ3haUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEdkRFFVRm5ReXhEUVVGRE8yZENRVVY0UkN4TlFVRk5PMkZCUTA0N1dVRkRSQ3hMUVVGTExIRkNRVUZ4UWl4RFFVRkRMRU5CUVVNN1owSkJRek5DTEZsQlFWa3NRMEZCUXl4alFVRmpMRWRCUVVjc2FVSkJRV2xDTEVOQlFVTTdaMEpCUTJoRUxGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NaME5CUVdkRExFTkJRVU03WjBKQlJYaEVMRTFCUVUwN1lVRkRUanRaUVVORUxFdEJRVXNzVTBGQlV5eERRVUZETEVOQlFVTTdaMEpCUTJZc1dVRkJXU3hEUVVGRExHTkJRV01zUjBGQlJ5eHBRa0ZCYVVJc1EwRkJRenRuUWtGRGFFUXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXd3UWtGQk1FSXNRMEZCUXp0blFrRkZiRVFzVFVGQlRUdGhRVU5PTzFsQlEwUXNTMEZCU3l4aFFVRmhMRU5CUVVNc1EwRkJRenRuUWtGRGJrSXNXVUZCV1N4RFFVRkRMR05CUVdNc1IwRkJSeXhwUWtGQmFVSXNRMEZCUXp0blFrRkRhRVFzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4blEwRkJaME1zUTBGQlF6dG5Ra0ZGZUVRc1RVRkJUVHRoUVVOT08xbEJRMFFzUzBGQlN5eFZRVUZWTEVOQlFVTXNRMEZCUXp0blFrRkRhRUlzV1VGQldTeERRVUZETEdOQlFXTXNSMEZCUnl4cFFrRkJhVUlzUTBGQlF6dG5Ra0ZEYUVRc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5dzBRa0ZCTkVJc1EwRkJRenRuUWtGRmNFUXNUVUZCVFR0aFFVTk9PMWxCUTBRc1MwRkJTeXhwUWtGQmFVSXNRMEZCUXl4RFFVRkRPMmRDUVVOMlFpeFpRVUZaTEVOQlFVTXNZMEZCWXl4SFFVRkhMR2xDUVVGcFFpeERRVUZETzJkQ1FVTm9SQ3haUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITERaQ1FVRTJRaXhEUVVGRE8yZENRVVZ5UkN4TlFVRk5PMkZCUTA0N1dVRkRSRHRuUWtGRFF5eEpRVUZKTEZGQlFWRXNRMEZCUXl4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eFZRVUZWTEVOQlFVTXNSVUZCUlR0dlFrRkZjRVFzUzBGQlN5eEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUXpkQ0xHbEdRVUZwUml4RFFVTnFSaXhEUVVGRE8yOUNRVU5HTEVsQlFVa3NTMEZCU3l4RlFVRkZPM2RDUVVOV0xGbEJRVmtzUTBGQlF5eExRVUZMTEVkQlFVY3NTMEZCU3l4RFFVRkRMRmRCUVZjc1EwRkJRenQzUWtGRGRrTXNTVUZCU1N4UFFVRlBMRVZCUVVVN05FSkJRMW9zVjBGQlZ5eEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRmhMRU5CUTI1RExEaEVRVUU0UkN4RFFVTTVSQ3hEUVVGRExGRkJRVkVzUTBGQlF5eE5RVUZOTEVOQlFVTTdORUpCUTJ4Q0xGVkJRVlVzUjBGQlJ5eFJRVUZSTzJsRFFVTnVRaXhoUVVGaExFTkJRMklzSzBWQlEwTXNWMEZCVnl4SFFVRkhMRU5CUTJZc1IwRkJSeXhEUVVOSU8ybERRVU5CTEdsQ1FVRnBRaXhEUVVGRExGbEJRVmtzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXpzMFFrRkRla01zV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnp0blEwRkRkRUk3YjBOQlEwTXNTMEZCU3l4RlFVRkZMR2xDUVVGcFFqdHZRMEZEZUVJc1IwRkJSeXhGUVVGRkxGRkJRVkVzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1R0cFEwRkRNMEk3WjBOQlEwUTdiME5CUTBNc1MwRkJTeXhGUVVGRkxHVkJRV1U3YjBOQlEzUkNMRWRCUVVjc1JVRkJSU3d3UWtGQk1FSXNWVUZCVlN4RlFVRkZPMmxEUVVNelF6czJRa0ZEUkN4RFFVRkRPM2xDUVVOR08zZENRVU5FTEVsQlFVa3NWMEZCVnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExGRkJRVkVzUTBGQlF5eEpRVUZKTEV0QlFVc3NTVUZCU1N4TFFVRkxMRVZCUVVVN05FSkJRM1JFTEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVN1owTkJRMW9zV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4WFFVRlhMRU5CUVVNN1owTkJRMjVETEZsQlFWa3NRMEZCUXl4aFFVRmhMRWRCUVVjc1RVRkJUVHR2UTBGRGJFTXNRMEZCUXp0dlEwRkRSQ3hEUVVGRExDdERRVUZaTEVOQlFVTTdaME5CUTJZc1NVRkJTU3hUUVVGVExFVkJRVVU3YjBOQlEyUXNXVUZCV1N4RFFVRkRMR05CUVdNc1IwRkJSeXhOUVVGTk8zZERRVU51UXl4RFFVRkRMRU5CUVVNc1EwRkJReXhOUVVGTkxFOUJRVThzUTBGQlF5eERRVUZETEV0QlFVczdkME5CUTNaQ0xFTkJRVU1zUTBGQlF5eERRVUZETEUxQlFVMHNUMEZCVHl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRE8yOURRVVY0UWl4RFFVRkRMRmxCUVZrc1EwRkJReXhqUVVGakxFVkJRVVVzV1VGQldTeERRVUZETEZsQlFWa3NRMEZCUXp0M1EwRkRka1FzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZEY2tJc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFhRVUZYTEVOQlFVTXNSVUZEZGtJc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZEY0VJc1EwRkJRenRwUTBGRFNEczJRa0ZEUkR0cFEwRkJUU3hKUVVGSkxFMUJRVTBzUlVGQlJUdG5RMEZEYkVJc1QwRkJUeXhaUVVGWkxFTkJRVU1zWTBGQll5eERRVUZETzJkRFFVTnVReXhQUVVGUExGbEJRVmtzUTBGQlF5eFpRVUZaTEVOQlFVTTdaME5CUTJwRExGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NVMEZCVXl4RFFVRkRPMmREUVVOcVF5eFpRVUZaTEVOQlFVTXNZVUZCWVN4clJFRkJaU3hEUVVGRE96WkNRVU14UXp0NVFrRkRSRHMyUWtGQlRTeEpRVUZKTEVOQlFVTXNWMEZCVnl4SlFVRkpMRXRCUVVzc1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeExRVUZMTEVWQlFVVTdORUpCUTNCRUxGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NWVUZCVlN4RFFVRkRPelJDUVVOc1F5eFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRXRCUVVzc1EwRkJReXhYUVVGWExFTkJRVU03TkVKQlEzWkRMRmxCUVZrc1EwRkJReXhqUVVGakxFZEJRVWNzYVVKQlFXbENMRU5CUVVNN2VVSkJRMmhFT3paQ1FVRk5PelJDUVVOT0xGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NiVU5CUVcxRExFTkJRVU03TkVKQlF6TkVMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRVWNzSzBKQlFTdENMRU5CUVVNN05FSkJRM0pFTEZsQlFWa3NRMEZCUXl4alFVRmpMRWRCUVVjc2FVSkJRV2xDTEVOQlFVTTdORUpCUTJoRUxGbEJRVmtzUTBGQlF5eGhRVUZoTEcxRVFVRm5RaXhEUVVGRE96UkNRVU16UXl4WlFVRlpMRU5CUVVNc1kwRkJZeXhIUVVGSExGTkJRVk1zUTBGQlF6czBRa0ZEZUVNc1VVRkJVU3hEUVVGRExFdEJRVXNzUTBGRFlpeHRSVUZCYlVVc1EwRkRia1VzUTBGQlF6dDVRa0ZEUmp0eFFrRkRSRHQ1UWtGQlRUdDNRa0ZGVGl4WlFVRlpMRU5CUVVNc1kwRkJZeXhIUVVGSExHbENRVUZwUWl4RFFVRkRPM2RDUVVOb1JDeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMRzFEUVVGdFF5eERRVUZETzNkQ1FVTXpSQ3haUVVGWkxFTkJRVU1zWVVGQllTeHRSRUZCWjBJc1EwRkJRenQzUWtGRE0wTXNVVUZCVVN4RFFVRkRMRXRCUVVzc1EwRkJReXd5UWtGQk1rSXNRMEZCUXl4RFFVRkRPM0ZDUVVNMVF6dHBRa0ZEUkR0eFFrRkJUU3hKUVVOT0xGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlEzSkNMRFpFUVVFMlJDeERRVU0zUkN4RFFVRkRMRmRCUVZjc1MwRkJTeXhuUWtGQlowSXNSVUZEYWtNN2IwSkJRMFFzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4WlFVRlpMRU5CUVVNN2IwSkJRM0JETEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eEpRVUZKTzNsQ1FVTjZReXhQUVVGUExFTkJRVU1zT0VOQlFUaERMRVZCUVVVc1JVRkJSU3hEUVVGRE8zbENRVU16UkN4TFFVRkxMRU5CUVVNc1MwRkJTeXhEUVVGRE8zbENRVU5hTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenR2UWtGRFdpeFpRVUZaTEVOQlFVTXNZVUZCWVN4dFJFRkJaMElzUTBGQlF6dHZRa0ZETTBNc1dVRkJXU3hEUVVGRExHTkJRV01zUjBGQlJ5eFhRVUZYTEVOQlFVTTdhVUpCUXpGRE8zRkNRVUZOTzI5Q1FVVk9MRmxCUVZrc1EwRkJReXhqUVVGakxFZEJRVWNzYVVKQlFXbENMRU5CUVVNN2IwSkJRMmhFTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc01rSkJRVEpDTEVOQlFVTTdiMEpCUTI1RUxGbEJRVmtzUTBGQlF5eGhRVUZoTEcxRVFVRm5RaXhEUVVGRE8yOUNRVU16UXl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExHdENRVUZyUWl4RFFVRkRMRU5CUVVNN2FVSkJRMjVETzFOQlEwWTdTMEZEUkR0SlFVTkVMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU1zVDBGQlR5eEZRVUZGTzFGQlJ6RkNMRkZCUVZFc1EwRkJReXhYUVVGWExFVkJRVVVzUTBGQlF6dExRVU4yUWp0VFFVRk5PMUZCUlU0c1VVRkJVU3hEUVVGRExGZEJRVmNzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXp0TFFVTnVRenRCUVVOR0xFTkJRVU1zUTBGQlF5eERRVUZESW4wPSJdLCJuYW1lcyI6WyJwcmVzZW5jZSIsIlByZXNlbmNlIiwiY2xpZW50SWQiLCJzdHJpbmdzIiwiZ2V0U3RyaW5ncyIsInBsYXkiLCJwYXVzZSIsImlGcmFtZVZpZGVvIiwiY3VycmVudFRpbWUiLCJkdXJhdGlvbiIsInBhdXNlZCIsInZpZGVvIiwicGxheWJhY2siLCJicm93c2luZ1RpbWVzdGFtcCIsInRpdGxlIiwiZmlyc3RWaWRlbyIsImNoaWxkTGVuZ3RoIiwib24iLCJkYXRhIiwiaWZyYW1lVmlkZW8iLCJjdXJyVGltZSIsImR1ciIsImFzeW5jIiwiaW5mbyIsImdldFNldHRpbmciLCJlbGFwc2VkIiwidmlkZW9UaW1lIiwiYnV0dG9ucyIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJwcmVzZW5jZURhdGEiLCJsYXJnZUltYWdlS2V5IiwiZG9jdW1lbnQiLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwic3RhcnRUaW1lc3RhbXAiLCJkZXRhaWxzIiwiaW5jbHVkZXMiLCJxdWVyeVNlbGVjdG9yIiwic3RhdGUiLCJ0ZXh0Q29udGVudCIsImNoaWxkcmVuIiwibGVuZ3RoIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJnZXRBdHRyaWJ1dGUiLCJsYWJlbCIsInVybCIsImhyZWYiLCJpc05hTiIsImVuZFRpbWVzdGFtcCIsInNtYWxsSW1hZ2VLZXkiLCJzbWFsbEltYWdlVGV4dCIsImdldFRpbWVzdGFtcHMiLCJlcnJvciIsInJlcGxhY2UiLCJzcGxpdCIsImpvaW4iLCJzZXRBY3Rpdml0eSJdLCJzb3VyY2VSb290IjoiIn0=
undefined;