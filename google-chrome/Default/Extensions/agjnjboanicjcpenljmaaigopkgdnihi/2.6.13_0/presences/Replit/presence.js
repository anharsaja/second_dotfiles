var __webpack_exports__={};const presence=new Presence({clientId:"830504223153717311"}),browsingTimestamp=Math.floor(Date.now()/1e3);let prevURL;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/R/Replit/assets/logo.png",startTimestamp:browsingTimestamp},{href:t,hash:s,pathname:a}=document.location,i=await presence.getSetting("buttons"),n=document.querySelector("title")?.textContent?.split("- Replit")?.[0],l=!!document.evaluate("//span[text()='Made with']",document,null,XPathResult.FIRST_ORDERED_NODE_TYPE,null)?.singleNodeValue||s.includes(".")||document.querySelector('[id="__NEXT_DATA__"]')?.textContent?.toLowerCase()?.includes("editor");switch(prevURL?prevURL!==t&&delete e.startTimestamp:prevURL=t,!0){case"/~"===a:case"/"===a:e.details="Viewing the homepage";break;case a.startsWith("/@"):if(l){const i=document.querySelector(".cm-lineNumbers")?.querySelectorAll(".cm-gutterElement"),l=document.querySelector(".cm-lineNumbers")?.querySelector(".cm-activeLineGutter")?.textContent;e.details=s.split("#")?.[1]?`Viewing REPL: ${n} | File: ${s.split("#")?.[1]}`:`Viewing REPL: ${n}`,e.state=`Created by: ${a.split("/")[1]}`,e.buttons=[{label:"View REPL",url:t}],(l||i)&&(e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/R/Replit/assets/0.png",e.smallImageText=!l&&i?`Total lines ${i?.[i?.length-1]?.textContent}`:`Line ${l} / ${i?.[i?.length-1]?.textContent}`)}else e.details="Viewing a user's profile",e.state=n,e.buttons=[{label:"View Profile",url:t}];break;case"/notifications"===a:e.details="Viewing their notifications";break;case"/repls"===a:e.details="Viewing their repls";break;case"/my-deployments"===a:e.details="Viewing deployments";break;case"/my-teams"===a:e.details="Viewing teams";break;case"/usage"===a:e.details="Viewing usage";break;case a.includes("/templates"):{const t=document.querySelector('[aria-label="Search Templates"]')?.value;t?(e.details="Searching templates for:",e.state=t,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):e.details="Viewing all templates";break}case a.includes("/community"):{const t=document.querySelector("input[data-rac]")?.value;t?(e.details="Searching in the community for:",e.state=t,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png"):e.details="Browsing through the community";break}default:e.details="Viewing an unsupported page"}!i&&e.buttons&&delete e.buttons,presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;