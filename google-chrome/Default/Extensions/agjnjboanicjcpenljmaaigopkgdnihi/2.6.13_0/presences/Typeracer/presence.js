var __webpack_exports__={};const presence=new Presence({clientId:"655247212728811530"});let currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/");const browsingTimestamp=Math.floor(Date.now()/1e3);let presenceData={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/Typeracer/assets/logo.png",startTimestamp:browsingTimestamp};const updateCallback={_function:null,get function(){return this._function},set function(e){this._function=e},get present(){return null!==this._function}},resetData=(e={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/Typeracer/assets/logo.png",startTimestamp:browsingTimestamp})=>{currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/"),presenceData={...e}};if((()=>{let e=null;if("play.typeracer.com"===currentURL.hostname)updateCallback.function=()=>{if(document.querySelector(".gameView")){presenceData.details="Playing a race";const t=document.querySelector(".gameStatusLabel").textContent;switch(t){case"Waiting for more people...":presenceData.state="Waiting for more people...",null===e&&(e=Math.floor(Date.now()/1e3)),presenceData.startTimestamp=e;break;case"The race is about to start!":presenceData.state="Counting down...",presenceData.endTimestamp=Math.floor(Date.now()/1e3)+Number(document.querySelector(".countdownPopup .time").textContent.slice(1)),e=null;break;case"The race is on! Type the text below:":case"Go!":{const t=document.querySelector("table.gameView > tbody > tr:nth-child(2) > td > table > tbody > tr:nth-child(1) > td > table > tbody > tr:nth-child(1) > td > div > div");let a=0;for(const e in t.children)"number"!=typeof t.children[e]&&"function"!=typeof t.children[e]&&"rgb(153, 204, 0)"===getComputedStyle(t.children[e]).color&&(a+=t.children[e].textContent.length);presenceData.state=`${Math.round(a/t.textContent.length*1e4)/100}%, ${document.querySelector(".rankPanelWpm-self").textContent.toUpperCase()}`,null===e&&(e=Math.floor(Date.now()/1e3)),presenceData.startTimestamp=e;break}default:("The race has ended."===t||t.startsWith("You finished"))&&(presenceData.details="Just finished with a race",presenceData.state=`${document.querySelector(".rankPanelWpm-self").textContent.toUpperCase()}, ${document.querySelector(".tblOwnStats > tbody:nth-child(2) > tr:nth-child(3) > td:nth-child(2)").textContent} acc., ${document.querySelector(".tblOwnStats > tbody:nth-child(2) > tr:nth-child(2) > td:nth-child(2)").textContent}`,presenceData.startTimestamp=browsingTimestamp)}}else presenceData.details="Viewing the home page"};else if("data.typeracer.com"===currentURL.hostname)switch(currentPath[0]){case"pit":switch(currentPath[1]){case"profile":presenceData.details="Viewing a racer profile",presenceData.state=document.querySelector("#profileUsername").textContent||null;break;case"text_info":presenceData.details="Viewing a text",presenceData.state=currentURL.searchParams.get("id");break;case"result":presenceData.details="Viewing a race result",presenceData.state=`Race ${currentURL.searchParams.get("id").split("|")[2]} of ${currentURL.searchParams.get("id").split("|")[1].slice(3)}`;break;case"race_history":presenceData.details="Viewing someone's race history",presenceData.state=currentURL.searchParams.get("user")||null;break;case"home":presenceData.details="Viewing the pit stop";break;case"competitions":{presenceData.details="Viewing the competition result";const e=document.querySelector("div.themeContent > div:nth-child(5) > strong").textContent.trim().slice(0,-1).split(" ");switch(document.querySelector("option[selected]").textContent.trim()){case"day":presenceData.state=e.join(" ");break;case"week":presenceData.state=`${e[1]} ${e[2]}, ${e[4]}`;break;case"month":presenceData.state=`${e[3]} ${e[4]}`;break;case"year":[,presenceData.state]=e}break}case"login":presenceData.details="Logging in";break;default:{const e={upgrade_account:"Upgrade your account",tos:"Terms of Service",privacy_poicy:"Privacy Policy"};presenceData.details="Viewing a page",presenceData.state=e[currentPath[1]]}}break;case"misc":"about"===currentPath[1]&&(presenceData.details="Viewing a page",presenceData.state="About");break;case"admin":presenceData.details="Viewing school admin pages"}})(),updateCallback.present){const e={...presenceData};presence.on("UpdateData",(async()=>{resetData(e),updateCallback.function(),presence.setActivity(presenceData)}))}else presence.on("UpdateData",(async()=>{presence.setActivity(presenceData)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;