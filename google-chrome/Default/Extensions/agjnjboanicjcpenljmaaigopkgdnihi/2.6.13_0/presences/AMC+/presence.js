var __webpack_exports__={};const presence=new Presence({clientId:"877353878427959317"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused",live:"general.live",search:"general.searching"});let elapsed,oldUrl;presence.on("UpdateData",(async()=>{const e=document.querySelector("video"),{href:t}=window.location,s={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/A/AMC+/assets/logo.png"};if(t!==oldUrl&&(oldUrl=t,elapsed=Math.floor(Date.now()/1e3)),s.details="Browsing catalogue...",s.startTimestamp=elapsed,e){const t=document.querySelector(".slot2"),a=document.querySelector(".slot3"),r=t&&a;s.details=document.querySelector(".slot1").textContent,r?(s.details+=`: ${t.textContent}`,s.state=a.textContent):s.state="Watching movie";const n=e.duration===1/0;s.smallImageText=n?(await strings).live:e.paused?(await strings).pause:(await strings).play,s.smallImageKey=n?"https://cdn.rcd.gg/PreMiD/resources/live.png":e.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",n?s.startTimestamp=elapsed:e.paused||([s.startTimestamp,s.endTimestamp]=presence.getTimestampsfromMedia(e)),!r&&e.paused&&(s.state="Paused")}s.details?presence.setActivity(s):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;