var __webpack_exports__={};const presence=new Presence({clientId:"860224040060715018"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused"});let iFrameVideo;presence.on("iFrameData",(e=>{iFrameVideo=e.video}));const getInfo={generic:()=>({getURLParameter:e=>decodeURIComponent((new RegExp(`[?|&]${e}=([^&;]+?)(&|#|;|$)`).exec(location.search)||[null,""])[1].replaceAll("+","%20"))||null}),watch:()=>({title:document.querySelectorAll(".v-card__title")[0].children[0].textContent,channel:document.querySelector(".uploader-data-list>div:nth-child(1)").textContent.split("  ")[0]}),channel:()=>({title:document.querySelector(".channel-container .v-list-item__title").textContent.split("  ")[0],getCategory:()=>{switch(window.location.pathname.split("/")[3]){case"clips":return"Clips";case"music":return"Music";case"collabs":return"Collabs";case"about":return"About Page";default:return"Videos"}}}),channels:()=>({getCategory:()=>{switch([].indexOf.call(document.querySelector("[role='tablist'] div.v-slide-group__content").children,document.querySelector("[role='tablist'] div.v-slide-group__content [aria-selected=true]"))){case 1:return"VTuber";case 2:return"Subber";case 3:return"Favorites";case 4:return"Blocked";default:return"Unsupported Category"}}}),homeFavorites:()=>({getCategory:()=>{switch(window.location.hash){case"":default:return"Live/Upcoming";case"#archive":return"Archive";case"#clips":return"Clips"}}}),search:()=>({getParamsString:()=>{let e="";switch(getInfo.generic().getURLParameter("type")){case"all":default:e+="Type: All, ";break;case"stream":e+="Type: Official, ";break;case"clip":e+="Type: Clip, "}for(const[t,a]of getInfo.generic().getURLParameter("q").split("\n").entries())if(t>0){const t=a.split(",");switch(t[0]){case"channel":e+=`Channel: ${t[2]}, `;break;case"title & desc":e+=`Title/Desc: ${t[2]}, `;break;case"comments":e+=`Comments: ${t[2]}, `;break;case"topic":e+=`Topic: ${t[2]}, `;break;case"org":e+=`Org: ${t[2]}, `}}return e.slice(0,-2)}})},data={details:`Unsupported Page: ${window.location.pathname}`,state:"",smallimage:{image:"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/logo.png",hover:"Holodex"},startTime:~~(Date.now()/1e3)},dataUpdater={updateAll:async()=>{data.smallimage=await dataUpdater.getSmallImage(),data.details=dataUpdater.getDetails(),data.state=dataUpdater.getState()},getDetails:()=>{const e=window.location.pathname.split("/");switch(e[1]){case"home":return"Home";case"favorites":return"Favorites";case"channel":return e[2]?`Viewing Channel ${getInfo.channel().getCategory()}`:"Channel List";case"library":return"Library";case"playlists":return"Playlists";case"multiview":return"MultiView";case"music":return"Music";case"infinite":return"Mugen Clips";case"about":return"About";case"settings":return"Settings";case"login":return null===document.querySelector(".v-card.ma-auto.v-sheet .v-list")?"Login Screen":"Account Settings";case"watch":return`Watching ${getInfo.watch().title}`;case"search":return"Searching";default:return`Unsupported Page : ${window.location.pathname}`}},getState:()=>{const e=window.location.pathname.split("/");switch(e[1]){case"watch":return`${getInfo.watch().channel}`;case"channel":return e[2]?getInfo.channel().title:getInfo.channels().getCategory();case"home":case"favorites":return getInfo.homeFavorites().getCategory();case"music":return null!==document.querySelector(".music-player-bar")?`Listening to ${document.querySelector(".music-player-bar>div>div:nth-child(2)>div:nth-child(2)>.single-line-clamp>a").textContent} - ${document.querySelector(".music-player-bar>div>div:nth-child(2)>div:nth-child(2)>.text-h6").textContent}`:"Not listening to anything";case"multiview":return`${document.querySelectorAll(".mv-frame").length} ${1===document.querySelectorAll(".mv-frame").length?"Video":"Videos"} Open`;case"infinite":return`${getInfo.watch().title} - ${getInfo.watch().channel}`;case"search":return getInfo.search().getParamsString();default:return""}},getSmallImage:async()=>{const e=window.location.pathname.split("/");switch(e[1]){case"home":return{image:"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/0.png",hover:"Home Page"};case"favorites":return{image:"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/1.png",hover:"Favorites"};case"channel":return{image:e.length<3?"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/2.png":"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/3.png",hover:e.length<3?"Channels":`${getInfo.channel().title}`};case"library":return{image:"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/4.png",hover:"Library"};case"playlists":return{image:"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/10.png",hover:"Playlists"};case"multiview":return{image:"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/5.png",hover:"MultiView"};case"music":return{image:"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/6.png",hover:"Music"};case"infinite":return{image:"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/7.png",hover:"Mugen Clips"};case"about":return{image:"https://cdn.rcd.gg/PreMiD/resources/question.png",hover:"About"};case"settings":return{image:"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/8.png",hover:"Settings"};case"login":return{image:"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/9.png",hover:null===document.querySelector(".v-card.ma-auto.v-sheet .v-list")?"Login Screen":"Account Settings"};case"watch":return{image:iFrameVideo.isPaused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",hover:iFrameVideo.isPaused?(await strings).pause:(await strings).play};case"search":return{image:"https://cdn.rcd.gg/PreMiD/resources/search.png",hover:"true"===getInfo.generic().getURLParameter("advanced")?"Advanced Search":"Search"};default:return{image:"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/logo.png",hover:"Holodex"}}}};presence.on("UpdateData",(async()=>{dataUpdater.updateAll();const e={largeImageKey:iFrameVideo.thumbnail??"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/logo.png",smallImageKey:data.smallimage.image,smallImageText:data.smallimage.hover,details:data.details,startTimestamp:data.startTime},t=await presence.getSetting("cover");switch(data.state&&(e.state=data.state),window.location.pathname.split("/")[1]){case"watch":e.buttons=[{label:"Open Video",url:window.location.href},{label:"Open Channel",url:`${window.location.origin}${document.querySelector(".uploader-data-list>div:nth-child(1)>a").getAttribute("href")}`}];break;case"channel":window.location.pathname.split("/")[2]&&(e.buttons=[{label:"Open Channel",url:window.location.href}])}t||"https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/logo.png"===e.largeImageKey||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/H/Holodex/assets/logo.png"),e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;