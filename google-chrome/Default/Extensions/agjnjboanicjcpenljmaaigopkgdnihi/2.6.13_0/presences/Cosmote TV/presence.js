var __webpack_exports__={};const presence=new Presence({clientId:"883446187099840562"});async function getStrings(){return presence.getStrings({play:"general.playing",pause:"general.paused",live:"general.live"},await presence.getSetting("lang").catch((()=>"en")))}let channel,channelTimestamp,strings,oldLang=null;presence.on("UpdateData",(async()=>{let e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/C/Cosmote%20TV/assets/logo.png"};const t={"#!":{details:"Browsing"},search:{details:"Searching",state:document.querySelector("#searchFieldInput")?.value,smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/search.png",smallImageText:"Searching"},loginSplash:{details:"Logging In"},channels:{details:"Browsing Channels"},watchlist:{details:"Viewing Watchlist"},settings:{details:"Viewing Settings"},privacy:{details:"Viewing Privacy Policy"},livetv:{details:"Browsing Live TV"},inbox:{details:"Viewing Inbox"},"livetv/replaytv":{details:"Browsing Replay TV"},"livetv/guide":{details:"Browsing Live TV Guide"},"onDemand/FILMS":{details:"Browsing Films"},"onDemand/SERIES":{details:"Browsing Series"},"onDemand/MOVIES_CLUB":{details:"Browsing Movies Club"},"onDemand/SPORTS":{details:"Browsing Sports"},"onDemand/DOCUMENTARIES":{details:"Browsing Documentaries"},"onDemand/KIDS":{details:"Browsing Kids Content"}},[s,n,a]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("logo"),presence.getSetting("timestamps")]);for(const[s,n]of Object.entries(t))document.location.hash.includes(s)&&(e={...e,...n});if(oldLang===s&&strings||(oldLang=s,strings=await getStrings()),document.querySelector("div[ng-if='showPlayer']")){const{paused:t,currentTime:s,duration:i}=document.querySelector("video#arxPlayer");if(document.querySelector("div[ng-if='details.channelLogoWide'] > .wide-logo"))e.details=document.querySelector(".meta-title[ng-bind~='details.title']")?.textContent,e.state=document.querySelector(".meta-title[ng-bind='details.channel.title']")?.textContent,n&&(e.largeImageKey=document.querySelector("div[ng-if='details.channelLogoWide'] > .wide-logo")?.src.replace("-wide","-normal")),document.querySelector(".meta-remain")?(channel===e.state&&channelTimestamp||(channelTimestamp=Math.floor(Date.now()/1e3)),e.startTimestamp=channelTimestamp,e.smallImageKey=t?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/live.png",e.smallImageText=t?strings.pause:strings.live):([e.startTimestamp,e.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(document.querySelector("#VcurrentTime").textContent),presence.timestampFromFormat(document.querySelector("#Vduration").textContent)),e.smallImageKey=t?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=t?strings.pause:strings.play),channel=e.state;else{if(e.details=document.querySelector(".meta-title[ng-bind~='details.title']").textContent,document.querySelector("span[ng-bind='details.seriesSubs']")?.textContent.length>0){const t=document.querySelector("span[ng-bind='details.seriesSubs']").textContent.split(" / ",3).map((e=>e.trim()));switch(t.length){case 3:e.details===t[2]||t[2].endsWith(` ${t[1]}`)||t[2].endsWith(` ${t[1].replace("Ε","E")}`)?e.state=`${t[0].replace("S","Season ").replace("Κ","Κύκλος ")} ${t[1].replace("E","Episode ").replace("Ε","Επεισόδιο ")}`:e.state=`${t[0]}:${t[1]} ${t[2]}`;break;case 2:e.state=t[0].replace("E","Episode ").replace("Ε","Επεισόδιο "),e.details===t[1]||t[1].endsWith(` ${t[0]}`)||(e.state+=`: ${t[1]}`);break;case 1:e.state=t[0]}}[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(Math.floor(s),Math.floor(i)),e.smallImageKey=t?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=t?strings.pause:strings.play}!t&&a||(delete e.startTimestamp,delete e.endTimestamp,channelTimestamp=null)}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;