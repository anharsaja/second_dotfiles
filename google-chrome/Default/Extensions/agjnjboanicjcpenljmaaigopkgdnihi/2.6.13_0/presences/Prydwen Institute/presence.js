var __webpack_exports__={};const presence=new Presence({clientId:"918337184929546322"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(()=>{const e={startTimestamp:browsingTimestamp},[t]=document.title.split(/[|/]/,1);if("/employees"===document.location.pathname)e.details="Viewing employees",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/1.png",e.smallImageText="Viewing employees";else if(document.location.pathname.startsWith("/employees"))e.details="Looking into an employee's profile",e.state=t,e.largeImageKey=document.querySelector("#gatsby-focus-wrapper > div > main > div > div > div > div.unit-header.align-items-center.d-flex.flex-wrap > div:nth-child(1) > span > a > div > div > picture > img").src,e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageText="Prydwen Institute",e.buttons=[{label:"View Employee",url:document.URL}];else if("/operators"===document.location.pathname)e.details="Viewing operators",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/5.png",e.smallImageText="Viewing operators";else if(document.location.pathname.startsWith("/operators"))e.details="Looking into an operator's profile",e.state=t,e.largeImageKey=document.querySelector("#gatsby-focus-wrapper > div > main > div > div > div.unit-page.operator > div.unit-header.align-items-center.d-flex.flex-wrap > div:nth-child(1) > span > a > div > div > picture > img").src,e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageText="Prydwen Institute",e.buttons=[{label:"View Operator",url:document.URL}];else if("/ships"===document.location.pathname)e.details="Viewing ships",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageText="Viewing ships";else if(document.location.pathname.startsWith("/ships"))e.details="Viewing a ship",e.state=t,e.largeImageKey=document.querySelector("#gatsby-focus-wrapper > div > main > div > div > div.unit-page.ship > div.unit-header.align-items-center.d-flex.flex-wrap > div:nth-child(1) > span > a > div > div > picture > img").src,e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageText="Viewing ships",e.buttons=[{label:"View Ship",url:document.URL}];else if(document.querySelector("body > div.fade.modal-backdrop.show")&&document.location.href.includes("skins"))e.details="Viewing skin",e.state=document.querySelector("body > div.fade.skin-viewer.modal.show > div > div > div.modal-body > div.details > div.name").textContent.substring(0,document.querySelector("body > div.fade.skin-viewer.modal.show > div > div > div.modal-body > div.details > div.name").textContent.lastIndexOf("-")-1),e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/8.png",e.smallImageText="Viewing skins";else switch(document.location.pathname){case"/skins":e.details="Viewing skins",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/8.png",e.smallImageText="Viewing skins";break;case"/stats":e.details="Viewing stats",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/9.png",e.smallImageText="Viewing stats";break;case"/tier-list":e.details="Viewing the tier list",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/4.png",e.smallImageText="Viewing tier list";break;case"/guides":e.details="Finding guides",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/3.png",e.smallImageText="Viewing guides";break;default:document.location.pathname.startsWith("/guides")?(e.details="Reading a guide:",e.state=t,e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/3.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageText="Prydwen Institute",e.buttons=[{label:"Read Guide",url:document.URL}]):"/blog"===document.location.pathname?(e.details="Finding blogs",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/10.png",e.smallImageText="Viewing blogs"):document.location.pathname.startsWith("/blog")?(e.details="Reading a blog:",e.state=t,e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/10.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageText="Prydwen Institute",e.buttons=[{label:"Read Blog",url:document.URL}]):document.location.href.includes("gear-builder")?(e.details="Making a Gear Builder template",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/2.png",e.smallImageText="Gear building"):"https://www.prydwen.co/"===document.location.href?(e.details="Viewing home page",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png"):(e.details="Browsing the wiki",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/P/Prydwen%20Institute/assets/6.png")}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;