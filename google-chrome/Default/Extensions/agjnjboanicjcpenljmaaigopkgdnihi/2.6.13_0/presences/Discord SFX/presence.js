var __webpack_exports__={};const presence=new Presence({clientId:"1119009771538882740"});presence.on("UpdateData",(async()=>{const t={details:"Browsing",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/D/Discord%20SFX/assets/logo.png"},{pathname:e}=document.location;switch(e){case"/":t.details="Browsing";break;case"/search":{t.details="Browsing the search page";const e=document.querySelector("[aria-haspopup='menu']");let s=null;e&&(s=e.textContent),t.state=s?`Looking for ${s} sounds`:"Looking for sounds";const o=document.querySelector("#searching-for-text");if(o){const e=o.textContent?.split("Currently searching for ")[1];if(e){const s=o.querySelector("#results-text")?.textContent?.split(" results)")[0].split("(")[1];s&&(t.state=`${s} results`),t.details=`Looking for ${e.replace(`(${s} results)`,"")}`}}document.querySelector("#result-state-not-found")&&(t.state="No results found"),document.querySelector("#result-state-loading")&&(t.state="Loading results");break}}if(e.startsWith("/sounds/")&&(t.details="Viewing Sound",t.state=document.title.split(" | Sound ")[1],t.buttons=[{label:"View Sound",url:`https://discordsfx.com/sounds/${e.split("/")[2]}`}]),e.startsWith("/users/")){t.details=`Viewing ${document.title.split(" Profile")[0].split(" | ")[1]} profile`;const e=document.querySelector('[data-premid-id="avatar"]')?.src;t.largeImageKey=(e?new URL(e):null)?.searchParams?.get("url")??"https://cdn.rcd.gg/PreMiD/websites/D/Discord%20SFX/assets/logo.png"}const s=document.querySelector("button[data-state='playing']");if(s){const{name:e,id:o}=s.dataset;let n="";e&&(n=`Listening to ${e}.mp3`,o&&(t.buttons=[{label:"View Sound",url:`https://discordsfx.com/sounds/${o}`}])),t.state=n}presence.setActivity(t)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;