var __webpack_exports__={};const presence=new Presence({clientId:"799629862620758046"});async function getStrings(){return presence.getStrings({play:"general.playing",pause:"general.paused",browsing:"general.browsing",live:"general.live",searching:"general.search",viewMovie:"general.viewMovie",watchingMovie:"general.watchingMovie",watchingSeries:"general.watchingSeries",watchMovie:"general.buttonViewMovie",watchSeries:"general.buttonViewSeries"},await presence.getSetting("lang").catch((()=>"en")))}let strings,oldLang=null;presence.on("UpdateData",(async function(){const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/J/Joyn/assets/logo.jpg"},t=await presence.getSetting("lang").catch((()=>"en")),s=await presence.getSetting("timeRemaining"),a=await presence.getSetting("showButtons"),n=window.location.pathname.split("/"),i=document.querySelector("div video");if(oldLang===t&&strings||(oldLang=t,strings=await getStrings()),"www.joyn.de"===document.location.hostname||"joyn.de"===document.location.hostname)if(document.querySelector(".lk71lm-0.htJLsh"))e.details=strings.searching,e.state=document.querySelector(".search-input").value;else if(""!==n[1]&&!document.location.pathname.includes("/#home")||""===n[2])switch(n[1]){case"compilation":{const t=document.querySelector(".artLogo");e.details="Viewing Compilation:",t&&(e.state=t.alt),t||(e.state=document.querySelector(".hXdaOG").textContent),a&&(e.buttons=[{label:"Watch Compilation",url:`https://www.joyn.de/compilation/${n[2]}`}]);break}case"filme":{const t=document.querySelector(".artLogo");e.details=strings.viewMovie,t&&(e.state=t.alt),t||(e.state=document.querySelector(".hXdaOG").textContent),a&&(e.buttons=[{label:strings.watchMovie,url:`https://www.joyn.de/filme/${n[2]}`}]);break}case"serien":{const t=document.querySelector(".artLogo");e.details="Viewing Series:",t&&(e.state=t.alt),t||(e.state=document.querySelector(".hXdaOG").textContent),a&&(e.buttons=[{label:strings.watchSeries,url:`https://www.joyn.de/serien/${n[2]}`}]);break}default:if("play"!==n[1]&&(document.location.pathname.includes("/serien")||document.location.pathname.includes("/filme")||document.location.pathname.includes("/sport")))e.details=strings.browsing;else if("channels"===n[1])e.details=strings.browsing,e.state=document.querySelector(".bISbKZ").textContent;else if("play"===n[1]&&"filme"===n[2])e.details=document.title.replace("streamen | Joyn",""),e.state="Movie",i.paused?(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText=strings.pause):(s&&([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(i)),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=strings.play),a&&(e.buttons=[{label:strings.watchMovie,url:`https://www.joyn.de/filme/${n[3]}`}]);else if("play"===n[1]&&"serien"===n[2])e.details=document.title.replace("streamen",""),e.state="Series",i.paused?(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText=strings.pause):(s&&([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(i)),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=strings.play),a&&(e.buttons=[{label:strings.watchSeries,url:`https://www.joyn.de/serien/${n[3]}`}]);else if("play"===n[1]&&"trailer"===n[2])e.details=document.title.replace("Trailer | Joyn",""),e.state="Trailer",i.paused?(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText=strings.pause):(s&&([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(i)),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=strings.play);else if("play"===n[1]&&"live-tv"===n[2])e.details=document.title.replace("im Livestream anschauen | Joyn",""),e.state="Live-TV",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/live.png",e.smallImageText=strings.live,a&&(e.buttons=[{label:"Watch show",url:window.location.href}]);else if("play"===n[1]&&"compilation"===n[2])e.details=document.title.replace("| Joyn",""),e.state="Compilation",i.paused?(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText=strings.pause):(s&&([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(i)),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=strings.play),a&&(e.buttons=[{label:"Watch Compilation",url:`https://www.joyn.de/compilation/${n[3]}`}]);else if("play"===n[1]&&"sport"===n[2])e.details=document.querySelector(".metadataWrapper .metadataTitle").textContent,e.state="Sport",i.paused?(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText=strings.pause):(s&&([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(i)),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=strings.play),a&&(e.buttons=[{label:"Watch sports show",url:window.location.href}]);else if("collections"===n[1]&&n[2])e.details="Viewing Collection:",e.state=document.querySelector("h1.sc-eqamei-0.cdfQp")?.textContent;else switch(n[1]){case"mein-account":"details"===n[2]?(e.details="My Account",e.state="Details"):e.details="My Account";break;case"abo":"bezahlung"===n[2]?(e.details="My Account",e.state="Payment method"):"rechnung"===n[2]?(e.details="My Account",e.state="Bills"):(e.details="My Account",e.state="Membership");break;case"fsk":e.details="My Account",e.state="FSK Settings";break;case"ueber-joyn":e.details="About Joyn";break;case"jugendschutz":e.details="Youth protection";break;case"datenschutz":e.details="Privacy policy";break;case"agb":e.details="Terms of service"}}else e.details=strings.browsing;e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;