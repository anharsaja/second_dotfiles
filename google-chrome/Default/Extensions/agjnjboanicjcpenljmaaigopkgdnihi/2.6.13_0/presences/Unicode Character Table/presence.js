var __webpack_exports__={};const presence=new Presence({clientId:"1024322774782713977"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/U/Unicode%20Character%20Table/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t,href:s,search:a}=window.location,o=t.split("/").filter((e=>e)).slice(1);switch(o[0]??""){case"":e.details="Browsing list of unicode characters",e.state=document.querySelector(".box__title").textContent;break;case"alphabets":o[1]?(e.details="Browsing alphabet",e.state=document.querySelector("h1").textContent):(e.details="Browsing",e.state="Alphabets");break;case"blocks":o[1]?(e.details="Browsing unicode block",e.state=`${document.querySelector("h1").textContent} (${document.querySelector(".page-content__info-range").textContent.match(/([A-Z0-9]{4,6}â€”[A-Z0-9]{4,6})/)[1]})`):(e.details="Browsing",e.state="Unicode blocks");break;case"emoji":o[1]?(e.details="Browsing emojis",e.state=document.querySelector("h1").textContent):(e.details="Browsing",e.state="Emojis");break;case"holidays":o[1]?(e.details="Browsing holiday symbols",e.state=document.querySelector("h1").textContent):(e.details="Browsing",e.state="Holiday sets");break;case"search":e.details="Searching for characters",e.state=new URLSearchParams(a).get("q");break;case"sets":o[1]?(e.details="Browsing symbol set",e.state=document.querySelector("h1").textContent):(e.details="Browsing",e.state="Symbol sets");break;case"tools":o[1]?e.details=`Using the ${document.querySelector("h1").textContent.trim()} tool`:(e.details="Browsing",e.state="Tools");break;default:/^[0-9A-F]{4,6}$/.test(o[0])?(e.details="Viewing a unicode character",e.state=document.querySelector("#symbol-title").textContent,e.smallImageKey=document.querySelector(".symbol__item-symbol")?.src,e.buttons=[{label:"View character",url:s}]):(e.details="Browsing",e.state=document.querySelector("h1")?.textContent??document.title.match(/(.+) - Unicode Character Table$/)[1])}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;