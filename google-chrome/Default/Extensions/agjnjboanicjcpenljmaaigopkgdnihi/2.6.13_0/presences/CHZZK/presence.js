var __webpack_exports__={};const presence=new Presence({clientId:"1232944311415603281"}),getStrings=async()=>presence.getStrings({play:"general.playing",pause:"general.paused",live:"general.live",browse:"general.browsing",ad:"youtube.ad",watchingLive:"general.watchingLive",watchingVid:"general.watchingVid",watchStream:"general.buttonWatchStream",watchVideo:"general.buttonWatchVideo"},oldLang),browsingTimestamp=Math.floor(Date.now()/1e3);let oldLang,strings;presence.on("UpdateData",(async()=>{const[e,t,s]=await Promise.all([presence.getSetting("lang"),presence.getSetting("logo"),presence.getSetting("time")]);oldLang===e&&strings||(oldLang=e,strings=await getStrings());const a={details:strings.browse,largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/C/CHZZK/assets/0.png",smallImageKey:"https://cdn.rcd.gg/PreMiD/websites/C/CHZZK/assets/1.png",startTimestamp:browsingTimestamp,type:3},{pathname:n,href:i}=document.location;switch(n.split("/")[1]){case"video":case"live":{const e=document.querySelector("video");if(!document.querySelector("div.ad_info_area")?.offsetParent){const r=new URL(document.querySelector("img[class^=video_information_image]").src);a.details=document.querySelector("h2[class^=video_information_title]"),a.state=document.querySelector("p[class^=video_information_name]"),a.largeImageKey=t?r.href.replace(r.search,""):"https://cdn.rcd.gg/PreMiD/websites/C/CHZZK/assets/0.png",n.startsWith("/live")?(a.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/C/CHZZK/assets/2.png",a.smallImageText=strings.live,s&&(a.startTimestamp=Math.floor(Date.now()/1e3)-presence.timestampFromFormat(document.querySelector("span[class^=video_information_count]").textContent)),a.buttons=[{url:i,label:strings.watchStream}]):(a.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/C/CHZZK/assets/3.png",a.smallImageText=strings.play,[a.startTimestamp,a.endTimestamp]=presence.getTimestampsfromMedia(e),a.buttons=[{url:i,label:strings.watchVideo}]),e.paused&&(a.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/C/CHZZK/assets/4.png",a.smallImageText=strings.pause,delete a.startTimestamp);break}a.details=strings.ad,a.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/C/CHZZK/assets/3.png",a.smallImageText=strings.play}}presence.setActivity(a)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;