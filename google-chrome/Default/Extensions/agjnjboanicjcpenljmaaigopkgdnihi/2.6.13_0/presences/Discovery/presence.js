var __webpack_exports__={};const presence=new Presence({clientId:"1034382710589898882"}),browingTimestamp=Math.floor(Date.now()/1e3);async function getStrings(){return presence.getStrings({browse:"general.browsing",buttonWatchVideo:"general.buttonWatchVideo",paused:"general.paused",play:"general.playing",search:"general.searchFor",viewCategory:"general.viewCategory",viewHome:"general.viewHome",viewShow:"general.viewShow"},await presence.getSetting("lang").catch((()=>"en")))}async function capitalizeFirstLetter(e){const t=e.trim();return t.charAt(0).toUpperCase()+t.slice(1)}let strings,oldLang=null;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/D/Discovery/assets/logo.png",startTimestamp:browingTimestamp},t=document.querySelector("video"),s=document.querySelector('input[type="text"]'),{hostname:r,href:a,pathname:i}=document.location,[n,o,c,l]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("covers")]),g=r.replace("www.",""),d=document.querySelector('[aria-current="true"]')?.textContent,u=document.querySelector('[property="og:title"]')?.getAttribute("content").toLowerCase()?.replace(document.querySelector('[aria-current="true"]')?.textContent?.toLowerCase()??"","").split("|"),p=[];if(u)for(const e of u)" "!==e&&"  "!==e&&p.push(e.trim());if(oldLang===n&&strings||(oldLang=n,strings=await getStrings()),o)return e.details=strings.browse,void presence.setActivity(e);if(s?.value||i.includes("search"))e.details=strings.search,e.state=s?.value||"Nothing",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png";else switch(g){case"go.discovery.com":switch(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/Discovery/assets/logo.png",i.split("/")[1]){case"":e.details=strings.viewHome;break;case"my-list":e.details=`Viewing ${document.querySelector('li[class*="selected-"]')?.textContent?.trim().toLowerCase()??""}`;break;case"shows":e.details=`Viewing all ${document.querySelector('[class*="selected-"]')?.getAttribute("id").split("tab-")[1]?.replace("All","").toLowerCase()??""} shows`,e.state=`Sorted by ${document.querySelector('li[class*="selected-"]')?.textContent?.toLowerCase()??""}`,e.buttons=[{label:"View Shows",url:a}];break;case"show":e.details=`${strings.viewShow} ${document.querySelector("title")?.textContent?.split("-")[0]}`,e.state=document.querySelector('[aria-controls="season-dropdown"]')?.textContent,e.largeImageKey=document.querySelector('[class*="showLogo-"]')?.getAttribute("src").split("?")[0]??"https://cdn.rcd.gg/PreMiD/websites/D/Discovery/assets/logo.png",e.buttons=[{label:"View Show",url:a}];break;case"video":delete e.startTimestamp,e.details=document.querySelector("title")?.textContent.split("-")[0],e.state=document.querySelector('[class*="seasonEpisode"]')?.textContent,e.largeImageKey=document.querySelector('[class*="RemoteSenderBackgroundContainer"]').querySelector("img")?.getAttribute("src"),t&&!isNaN(t.duration)?(e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=t.paused?strings.paused:strings.play,e.buttons=[{label:strings.buttonWatchVideo,url:a}],document.querySelector('[class*="PlayPauseButtonS"]')?.innerHTML.includes("<circle")?(e.smallImageText=strings.paused,e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/D/Discovery/assets/0.gif"):"00:00"!==document.querySelector('[class*="AdsContainer"]')?.querySelector('[class*="TimeIndicator"]')?.textContent?e.state="Watching an ad":t.paused||([e.startTimestamp,e.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(document.querySelectorAll('[class*="TimeViewFontStyle"]')[0]?.textContent),presence.timestampFromFormat(document.querySelectorAll('[class*="TimeViewFontStyle"]')[1]?.textContent)))):e.buttons=[{label:"View Show",url:a}]}break;case"discoveryplus.com":if(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/Discovery/assets/1.png",""===i||i===`/${document.querySelector("[data-language]").getAttribute("data-language")}`||i===`/${document.querySelector("[data-language]").getAttribute("data-language")}/`)e.details=`Homepage - ${d}`;else switch(i.split("/")[2]){case"show":e.details=`${strings.viewShow} ${await capitalizeFirstLetter(p[0])}`,e.state=`${d} - ${d===document.querySelector('[id="tab-generic-show-episodes"]')?.textContent?document.querySelector('[data-testid*="selected-"]')?.textContent:"  "}`.replace("-  ","").replace("- undefined","").trim(),e.buttons=[{label:"View Show",url:a}];break;case"video":delete e.startTimestamp,e.state=await capitalizeFirstLetter(p[0]),e.details=await capitalizeFirstLetter(p[1]),t&&!isNaN(t.duration)?(document.querySelector('[class*="PlayPauseButtonS"]')?.innerHTML.includes("<circle")?(e.smallImageText=strings.paused,e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/D/Discovery/assets/0.gif"):(e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=t.paused?strings.paused:strings.play,t.paused||([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(t))),e.buttons=[{label:strings.buttonWatchVideo,url:a}]):e.buttons=[{label:"View Show",url:a}];break;case"browse":{const t=document.querySelectorAll('[aria-checked="true"]');e.details=strings.browse,e.state=`${""===t[1]?.textContent?a.split("?network=")[1].toUpperCase():t[1]?.textContent} Shows - Sorted by ${t[2]?.textContent}`;break}case"sports":e.details=strings.browse,e.state=`Sports - ${d}`;break;case"epg":e.details=`Viewing schedule for ${document.querySelector('[data-testid="epgDayButtonActive visible"]')?.textContent}`,e.buttons=[{label:"View Schedule",url:a}];break;case"my-list":e.details="Viewing my list";break;default:e.details=strings.browse}}"go.discovery.com"!==g||l||"https://cdn.rcd.gg/PreMiD/websites/D/Discovery/assets/logo.png"===e.largeImageKey?"discoveryplus.com"!==g||l||"https://cdn.rcd.gg/PreMiD/websites/D/Discovery/assets/1.png"===e.largeImageKey||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/Discovery/assets/1.png"):e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/Discovery/assets/logo.png",!c&&e.buttons&&delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;