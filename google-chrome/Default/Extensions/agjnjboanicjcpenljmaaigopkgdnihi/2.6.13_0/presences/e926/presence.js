var __webpack_exports__={};const presence=new Presence({clientId:"969245744261390337"}),browsingTimestamp=Math.floor(Date.now()/1e3);let title,mTitle,search;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/E/e926/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t,href:s}=document.location,[a,l,i]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("covers")]);if(a)e.details="Browsing...";else if("/"===t)search=document.querySelector("#tags"),search?.value?(e.details="Searching for",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.state=search?.value):e.details="Viewing the homepage";else if(t.includes("posts"))search=document.querySelector("#tags"),mTitle=document.querySelector('meta[name="og:title"]')?.content.replace(" - e926",""),document.querySelector('meta[name="og:title"]'),t.includes("posts/")?(mTitle=document.querySelector('meta[property="og:title"]').content,e.details="Viewing Post",e.state=`Created By: ${mTitle.slice(0,mTitle.length-6).split("created by")[1]}`,e.buttons=[{label:"View Post",url:s}]):search?.value&&search?.value!==mTitle?(e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.buttons=[{label:"View Search",url:s}],e.details="Searching Posts for",e.state=search?.value):(e.buttons=[{label:"View All Posts",url:s}],e.details="All Posts",delete e.state);else if(t.includes("help"))e.buttons=[{label:"View Help Page",url:s}],e.details=`Reading about ${document.querySelector("#content > div > h1")?.textContent??"help"}`;else if(t.includes("wiki_pages"))e.buttons=[{label:"View Wiki",url:s}],search=document.querySelector("#quick_search_title"),search?.value?(e.details="Searching Wiki for",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.state=search.value):(title=document.querySelector("#wiki-page-title > a"),e.details="Reading wiki",e.state=title?.textContent??"Wiki main page",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png");else if(t.includes("comments"))title=document.querySelector("#a-index > div.paginator > menu > li.current-page"),e.details="Comments",e.state=`Page ${title.textContent}`,e.buttons=[{label:"View Comment Page",url:s}];else if(t.includes("users/"))t.includes("/new")?e.details="Registering their profile":t.includes("/home")?e.details="Managing their profile":t.includes("/edit")?e.details=`Changing ${document.querySelector('[class="active"]').textContent} profile settings`:(i&&(e.largeImageKey=document.querySelector('[class="post-thumbnail-img"]')?.getAttribute("src")??"https://cdn.rcd.gg/PreMiD/websites/E/e926/assets/0.png"),title=document.querySelector("head > title"),e.details=`Viewing ${title.textContent.slice(9,title.textContent.length-8)}'s Profile`,e.buttons=[{label:"View Profile",url:s}]);else if(t.includes("artists"))search=document.querySelector("#search_any_name_matches"),search||(search=document.querySelector("#quick_search_name")),search?.value?(e.details="Searching Artists for",e.state=search?.value):t.includes("artists/")?(title=document.querySelector("#a-show > h1 > a"),e.details=`Viewing Artist: ${title.textContent.replace("(artist)","")}`):e.details="Artists",e.buttons=[{label:"View Artist",url:s}];else if(t.includes("tags"))if(e.buttons=[{label:"View Tags",url:s}],search=document.querySelector("#search_name_matches"),search?.value)e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.details="Searching Tags for",e.state=search?.value;else if(s.includes("&search%5Border%5D=")){title=document.querySelector("#search_order");const t=s.slice(s.length-6,s.length);let a;t.includes("name")?a="Name":t.includes("count")?a="Count":t.includes("date")&&(a="Newest"),e.details="All Tags",e.state=`Sorted by: ${a}`}else e.details="All Tags";else t.includes("blips")?(l&&(e.buttons=[{label:"View Blips",url:s}]),title=document.querySelector("#paginator > div > menu > li.current-page > span"),e.details="Blips",e.state=`Page ${title.textContent}`):t.includes("pools")?(l&&(e.buttons=[{label:"View Pools",url:s}]),search=document.querySelector("#search_name_matches"),search?.value?(e.details="Searching Pools for",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.state=search?.value):e.details="Viewing pools"):t.includes("post_sets")?e.details="Post Sets":t.includes("/forum_topics")?(search=document.querySelector("#quick_search_body_matches"),title=document.querySelector("#a-show > h1"),search?.value?(e.details="Searching Forum for",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.state=search?.value):title?(e.buttons=[{label:"View Forum Post",url:s}],e.details="Viewing Forum Post",e.state=title.textContent):(e.buttons=[{label:"View All Forum Posts",url:s}],e.details="Viewing all forum posts")):t.includes("site_map")?e.details="Sitemap":t.includes("/dmails")?(search=document.querySelector('[id="quick_search_message_matches"]'),search?.value?(e.details="Searching messages for",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.state=search?.value):(e.details=`Reading ${document.querySelector("#a-index > h1").textContent}`,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png")):t.includes("static/theme")&&(e.details="Changing settings");!a&&l||delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;