var __webpack_exports__={};const presence=new Presence({clientId:"1256196660657393714"});let fetchedInfo,isFetching=!1;function findAlternateId(e){return fetchedInfo.included?.find((t=>t.attributes?.alternateId===e))}function findId(e){return fetchedInfo.included?.find((t=>t.id===e))}async function fetchPageInfo(){const{pathname:e}=location;if(!isFetching&&fetchedInfo?.path!==e){isFetching=!0;try{fetchedInfo=await fetch(`https://default.any-amer.prd.api.max.com/cms/routes${e}?include=default&page[items.size]=10`,{method:"GET",credentials:"include"}).then((e=>e.json()))}catch{return isFetching=!1,!1}return fetchedInfo.path=e,isFetching=!1,!0}}function getTitleInfo(e){if(!fetchedInfo)return;if(location.pathname.includes("/video/")){const t=findAlternateId(location.pathname.split("/")[3]),a=findAlternateId(t?.relationships.show.data.id);if(!t||!a)return;return{name:e?a.attributes.name:"Max",details:e?t.attributes.name:a.attributes.name,state:"MOVIE"===t.attributes.videoType?"Movie":e?`Season ${t.attributes.seasonNumber}, Episode ${t.attributes.episodeNumber}`:`S${t.attributes.seasonNumber}:E${t.attributes.episodeNumber} ${t.attributes.name}`,largeImageKey:findId(a.relationships.images.data[5].id).attributes.src}}const t=findAlternateId(location.pathname.split("/")[2]);return{state:t?.attributes.name,largeImageKey:findId(t?.relationships.images.data[5].id)?.attributes.src}}presence.on("UpdateData",(async()=>{const e={type:3,largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/Max/assets/logo.png"},[t,a]=await Promise.all([presence.getSetting("usePresenceName"),presence.getSetting("cover")]);switch(await fetchPageInfo(),document.location.pathname.split("/")[1]){case"show":Object.assign(e,getTitleInfo()),e.details="Viewing a show:";break;case"movie":Object.assign(e,getTitleInfo()),e.details="Viewing a movie:";break;case"video":{const a=document.querySelector("video");Object.assign(e,getTitleInfo(t)),a&&(a.paused||([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(a)),e.smallImageKey=a.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=a.paused?"Paused":"Playing");break}default:e.details="Browsing..."}a||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/M/Max/assets/logo.png"),e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;