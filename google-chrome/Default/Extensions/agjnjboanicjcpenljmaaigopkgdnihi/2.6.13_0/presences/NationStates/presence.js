var __webpack_exports__={};const browsingTimestamp=Math.floor(Date.now()/1e3),presence=new Presence({clientId:"1006869424441131109"}),presenceData={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/logo.png",startTimestamp:browsingTimestamp};async function fetchSelfNationName(){if("loggedin"!==document.body.id)return null;const e=document.body.getAttribute("data-nname");if(!e)return null;const t=await fetch(`https://www.nationstates.net/cgi-bin/api.cgi?nation=${e}&q=name+type&v=2`);if(!t.ok)return null;const a=(new DOMParser).parseFromString(await t.text(),"text/html"),s=a.querySelector("NAME").textContent,n=`${a.querySelector("TYPE").textContent} of`,r=await presence.getSetting("displayname");return s.length+n.length+2<=128&&r>1?`${s}, ${n}`:s.length<=128&&r>0?s:r>0?`${s.substring(0,127)}…`:""}async function fetchNationName(e){const t=await fetch(`https://www.nationstates.net/cgi-bin/api.cgi?nation=${e}&q=name&v=2`);if(!t.ok)return null;const a=(new DOMParser).parseFromString(await t.text(),"text/html").querySelector("NAME").textContent;return a.length+16<=128?a:`${a.substring(0,111)}…`}async function fetchRegionName(e){const t=await fetch(`https://www.nationstates.net/cgi-bin/api.cgi?region=${e}&q=name&v=2`);if(!t.ok)return null;const a=(new DOMParser).parseFromString(await t.text(),"text/html").querySelector("NAME").textContent;return a.length+16<=128?a:`${a.substring(0,111)}…`}async function updatePresenceData(){if("www.nationstates.net"===document.location.hostname){const e="loggedin"===document.body.id,t=document.body.getAttribute("data-nname"),a=await fetchSelfNationName();a&&a.length>0?presenceData.details=a:delete presenceData.details,e&&await presence.getSetting("buttons")?presenceData.buttons=[{label:"View Nation",url:`https://www.nationstates.net/nation=${t}`}]:delete presenceData.buttons;const s=window.location.pathname.toLowerCase(),n=s.substring(s.indexOf("=")+1).replace(/\/.+/iu,"").replace(/\?.+/iu,"").toLowerCase();switch(s.substring(s.indexOf("/")+1,s.indexOf("=")).toLowerCase()){case"nation":if(e&&n===t)presenceData.state="Viewing Nation",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/2.png",presenceData.smallImageText="My Nation";else{const e=await fetchNationName(n);presenceData.state=e?`Viewing Nation: ${e}`:"Viewing a Nation",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/5.png",presenceData.smallImageText="World"}return;case"region":{const e=await fetchRegionName(n);return presenceData.state=e?`Viewing Region: ${e}`:"Viewing a Region",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/5.png",void(presenceData.smallImageText="World")}case"page":break;default:return presenceData.state="Browsing",void delete presenceData.smallImageKey}switch(n){case"create_nation":presenceData.state="Declaring a New Nation",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/2.png",presenceData.smallImageText="My Nation";break;case"display_region_rmb":case"region_control":case"region_history":case"region_rank":presenceData.state="Attending Regional Activities",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/2.png",presenceData.smallImageText="Region";break;case"telegram":case"telegrams":case"tg":case"notices":case"notice":presenceData.state="Reading Telegrams",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/1.png",presenceData.smallImageText="Telegrams";break;case"write_telegram":case"compose_telegram":presenceData.state="Writing a Telegram",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/1.png",presenceData.smallImageText="Telegrams";break;case"world":case"dossier":case"change_region":case"list_entities":case"list_nations":case"list_regions":case"tag_search":case"activity":presenceData.state="Observing the World",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/5.png",presenceData.smallImageText="World";break;case"deck":presenceData.state="Playing Cards",delete presenceData.smallImageKey;break;case"store":case"cart":case"order":presenceData.state="Browsing the Store",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/4.png",presenceData.smallImageText="Store";break;case"challenge":{const e=[...document.querySelector(".trumps-challenger").querySelectorAll(".nname")].find((e=>e.textContent.toLowerCase().split(" ").join("_")!==t));e&&e.textContent?presenceData.state=`Challenging ${e.textContent}`:presenceData.state="Challenging",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/9.png",presenceData.smallImageText="Challenge";break}case"settings":case"banners":case"upload_flag":case"tgsettings":case"subscriptions":presenceData.state="Configuring NationStates",delete presenceData.smallImageKey;break;case"dispatches":presenceData.state="Browsing Dispatches",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/6.png",presenceData.smallImageText="Dispatches";break;case"dispatch":{const e=document.querySelector("#content")?.querySelector(".dispatch")?.querySelector("h2")?.textContent;presenceData.state=e?`Dispatch: ${e.length>118?`${e.substring(0,117)}…'`:e}`:"Browsing Dispatches",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/6.png",presenceData.smallImageText="Dispatches";break}case"issues":case"dilemmas":presenceData.state="Browsing Issues",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/7.png",presenceData.smallImageText="Issues";break;case"show_dilemma":{const e=document.querySelector("#content")?.querySelector(".dpaper4")?.textContent;presenceData.state=e?`Issue: ${e.length>121?`${e.substring(0,121)}…'`:e}`:"Browsing Issues",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/7.png",presenceData.smallImageText="Issues";break}case"enact_dilemma":{const e=document.querySelector("#dlegislationtext")?.querySelector("p.dtitle")?.textContent;presenceData.state=e?`Issue: ${e.length>121?`${e.substring(0,121)}…'`:e}`:"Browsing Issues",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/7.png",presenceData.smallImageText="Issues";break}case"wa":case"un":case"list_un":case"list_wa":case"un_proposal":case"wa_proposal":presenceData.state="Attending the World Assembly",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/8.png",presenceData.smallImageText="World Assembly";break;case"un_repeal":case"wa_repeal":case"un_new_proposal":case"wa_new_proposal":presenceData.state="Writing a new WA proposal",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/8.png",presenceData.smallImageText="World Assembly";break;case"ga":case"sc":case"wa_past_resolution":case"wa_past_resolutions":case"un_past_resolution":case"un_past_resolutions":{const e=document.querySelector(".WA_thing")?.querySelector("h2")?.textContent;e&&1===document.querySelectorAll(".WA_thing").length?presenceData.state=`Resolution: ${e.length>121?`${e.substring(0,121)}…'`:e}`:presenceData.state="Attending the World Assembly",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/8.png",presenceData.smallImageText="World Assembly";break}default:presenceData.state="Browsing",delete presenceData.smallImageKey}}else if("forum.nationstates.net"===document.location.hostname){presenceData.details="Browsing the Forums",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/N/NationStates/assets/3.png",presenceData.smallImageText="Forums",delete presenceData.buttons;const{title:e}=document;if(e.startsWith("NationStates • View")){const t=e.match(/(?<=nationstates\s•\sview\s).+/gi);if(t){let e=t[0];e=e.charAt(0).toUpperCase()+e.slice(1),e.length>128&&(e=`${e.substring(0,128)}…`),presenceData.state=e}else delete presenceData.state}else delete presenceData.state}else delete presenceData.state,delete presenceData.details}setInterval(updatePresenceData,1e4),presence.on("UpdateData",(async()=>{(presenceData.state||presenceData.details)&&presence.setActivity(presenceData)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;