var __webpack_exports__={};const presence=new Presence({clientId:"825888886285795329"});let elapsedTime=null;presence.on("UpdateData",(async()=>{const e=document.location.href,t=document.location.pathname,a={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/G/Glimesh/assets/logo.png"};switch(document.location.host){case"glimesh.tv":if(a.details="Browsing...","/"===t)a.details="Viewing Home Page";else if(t.match("/streams/"))a.details="Viewing Category",a.state=document.title.replace(" - Glimesh","");else if("/users"===t||"/users/"===t)a.details="Viewing All Users";else if(t.match("users/settings"))a.details="Viewing Settings";else if(t.match("/about"))a.details="Reading about Glimesh",t.match("alpha")?(a.details="Reading About",a.state="Alpha Features"):t.match("streaming")?(a.details="Reading About",a.state="Streaming"):t.match("team")?a.details="Viewing the Team":t.match("mission")?a.details="Reading the Mission":t.match("credits")?a.details="Reading the Credits":t.match("dmca")?(a.details="Reading About",a.state="DMCA Policy"):t.match("faq")?(a.details="Reading",a.state="Frequently asked Questions"):t.match("terms")?(a.details="Reading the",a.state="Terms of Service"):t.match("condut")?(a.details="Reading the",a.state="Rules of Conduct"):t.match("privacy")?(a.details="Reading the",a.state="Privacy Policy"):t.match("open-data")&&(a.details="Viewing Open Data",a.state="Platform User Growth",t.match("subscriptions")?a.state="Recurring Subscriptions":t.match("streams")&&(a.state="Live Streams"));else if(t.match("/profile"))a.details=`Viewing${await presence.getSetting("show_details")?" ":" a "}Profile`,await presence.getSetting("show_details")&&(a.state=document.title.replace("'s Profile - Glimesh","")),await presence.getSetting("show_buttons")&&await presence.getSetting("show_details")&&(a.buttons=[{label:"View Profile",url:e}]);else if(document.querySelector("#video-column")){a.details=await presence.getSetting("show_details")?document.title.replace(" - Glimesh",""):"Watching a Stream",await presence.getSetting("show_details")&&(a.state=document.querySelector("h3").textContent);const t=document.querySelector("video");await presence.getSetting("show_buttons")&&await presence.getSetting("show_details")&&(a.buttons=[{label:"View Profile",url:document.querySelector("#video-column > div > div.card-footer.p-1.d-none.d-sm-block > div > div.col-8.d-inline-flex.align-items-center > a").href}]),t&&!isNaN(t.duration)&&(await presence.getSetting("show_buttons")&&await presence.getSetting("show_details")&&a.buttons.unshift({label:"Watch Stream",url:e}),t.paused?(a.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",a.smallImageText="Paused",await presence.getSetting("show_timestamps")&&(a.startTimestamp=0)):(null===elapsedTime&&(elapsedTime=Math.floor(Date.now()/1e3)),a.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",a.smallImageText="Live!",await presence.getSetting("show_timestamps")&&(a.startTimestamp=elapsedTime)))}break;case"glim.shop":a.details="Viewing Merch Store";break;case"support.glimesh.tv":a.details="Viewing Support";break;case"blog.glimesh.tv":a.details="Viewing Blogs",t.match("/posts")&&(a.details=`Reading${await presence.getSetting("show_details")?" ":" a "}Blog`,await presence.getSetting("show_details")&&(a.state=document.querySelector("body > div > div > div > h1 > a").textContent),await presence.getSetting("show_buttons")&&await presence.getSetting("show_details")&&(a.buttons=[{label:"View Blog Post",url:e}]))}a.details?presence.setActivity(a):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;