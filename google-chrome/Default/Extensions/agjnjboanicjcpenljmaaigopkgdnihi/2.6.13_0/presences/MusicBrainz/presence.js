var __webpack_exports__={};const presence=new Presence({clientId:"1017504807822561290"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/MusicBrainz/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t,href:a,search:s}=window.location,r=/^\/[\w-]+\/.*?\/([\w-]+)\/?$/;switch(t.split("/")[1]){case"":e.details="Browsing home page";break;case"account":e.details="Managing account preferences";break;case"area":{const s=document.querySelector("bdi").textContent;switch(e.details="Viewing area",(t.match(r)||[])[1]){case"aliases":case"events":case"labels":case"users":case"works":case"places":case"artists":case"releases":case"recordings":case"tags":case"details":e.state=`${document.querySelector(".sel bdi").textContent} for '${s}'`;break;case"open_edits":e.state=`Open edits for '${s}'`;break;case"edits":e.state=`Edit history for '${s}'`;break;case"collections":e.state=`Collections for '${s}'`;break;default:e.state=s,e.buttons=[{label:"View Area",url:a}]}break}case"artist":if(t.startsWith("/artist/create"))e.details="Creating new artist",e.state=document.querySelector("#id-edit-artist\\.name").value;else{const s=document.querySelector("bdi").textContent;switch(e.details="Viewing artist",(t.match(r)||[])[1]){case"works":case"recordings":case"events":case"relationships":case"aliases":case"tags":case"ratings":case"details":case"releases":e.state=`${document.querySelector(".sel bdi").textContent} for '${s}'`;break;case"edit":e.state="Editing artist",e.state=s;break;case"open_edits":e.state=`Open edits for '${s}'`;break;case"edits":e.state=`Edit history for '${s}'`;break;case"collections":e.state=`Collections for '${s}'`;break;case"subscribers":e.state=`Subscribers for '${s}'`;break;case"split":e.details="Splitting artist",e.state=s;break;case"edit_annotation":e.details="Editing artist annotation",e.state=s;break;case"annotations":e.state=`Annotation history for '${s}'`;break;default:e.state=s,e.buttons=[{label:"View Artist",url:a}]}}break;case"collection":if(t.startsWith("/collection/create")){e.details="Creating new collection";break}{const s=document.querySelector("bdi").textContent;switch(e.details="Viewing collection",(t.match(r)||[])[1]){case"edit":e.details="Editing collection",e.state=s;break;case"open_edits":e.state=`Open edits for '${s}'`;break;case"edits":e.state=`Edit history for '${s}'`;break;case"subscribers":e.state=`Subscribers for '${s}'`;break;default:e.state=s,document.querySelector(".subheader").textContent.includes("Private collection")||(e.buttons=[{label:"View Collection",url:a}])}break}case"doc":e.details="Viewing documentation",e.state=document.querySelector(".hierarchy-links > a").textContent;break;case"event":if(t.startsWith("/event/create")){e.details="Creating new event",e.state=document.querySelector("#id-edit-event\\.name").value;break}{const s=document.querySelector("bdi").textContent;switch(e.details="Viewing event",(t.match(r)||[])[1]){case"aliases":case"tags":case"ratings":case"details":e.state=`${document.querySelector(".sel bdi").textContent} for '${s}'`;break;case"edit":e.details="Editing event",e.state=s;break;case"edit_annotation":e.details="Editing event annotation",e.state=s;break;case"annotations":e.state=`Annotation history for '${s}'`;break;case"open_edits":e.state=`Open edits for '${s}'`;break;case"edits":e.state=`Edit history for '${s}'`;break;case"collections":e.state=`Collections for '${s}'`;break;default:e.state=s,e.buttons=[{label:"View Event",url:a}]}break}case"genre":{const s=document.querySelector("bdi").textContent;switch(e.details="Viewing genre",(t.match(r)||[])[1]){case"aliases":case"details":e.state=`${document.querySelector(".sel bdi").textContent} for '${s}'`;break;case"open_edits":e.state=`Open edits for '${s}'`;break;case"edits":e.state=`Edit history for '${s}'`;break;default:e.state=s,e.buttons=[{label:"View Genre",url:a}]}break}case"instrument":{const s=document.querySelector("bdi").textContent;switch(e.details="Viewing instrument",(t.match(r)||[])[1]){case"aliases":case"artists":case"releases":case"recordings":case"tags":case"details":e.state=`${document.querySelector(".sel bdi").textContent} for '${s}'`;break;default:e.state=s,e.buttons=[{label:"View Instrument",url:a}]}break}case"label":if(t.startsWith("/label/create")){e.details="Creating new label",e.state=document.querySelector("#id-edit-label\\.name").value;break}{const s=document.querySelector("bdi").textContent;switch(e.details="Viewing label",(t.match(r)||[])[1]){case"aliases":case"tags":case"relationships":case"ratings":case"details":e.state=`${document.querySelector(".sel bdi").textContent} for '${s}'`;break;case"edit":e.details="Editing label",e.state=s;break;case"annotations":e.state=`Annotation history for '${s}'`;break;case"edit_annotation":e.details="Editing label annotation",e.state=s;break;case"open_edits":e.state=`Open edits for '${s}'`;break;case"edits":e.state=`Edit history for '${s}'`;break;case"collections":e.state=`Collections for '${s}'`;break;case"subscribers":e.state=`Subscribers for '${s}'`;break;default:e.state=s,e.buttons=[{label:"View Label",url:a}]}break}case"recording":if(t.startsWith("/recording/create")){e.details="Creating new recording",e.state=document.querySelector("#id-edit-recording\\.name").value;break}{const s=document.querySelector("bdi").textContent;switch(e.details="Viewing recording",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/M/MusicBrainz/assets/0.png",e.smallImageText=`Artist: '${document.querySelector(".artist bdi")?.textContent}' Length: ${document.querySelector(".length")?.textContent}`,(t.match(r)||[])[1]){case"fingerprints":case"aliases":case"tags":case"reviews":case"details":e.state=`${document.querySelector(".sel bdi").textContent} for '${s}'`;break;case"edit":e.details="Editing release",e.state=s;break;case"edit_annotation":e.details="Editing recording annotations",e.state=s;break;case"annotations":e.state=`Annotation history for '${s}'`;break;case"open_edits":e.state=`Open edits for '${s}'`;break;case"edits":e.state=`Edit history for '${s}'`;break;case"collections":e.state=`Collections for '${s}'`;break;default:e.state=s,e.buttons=[{label:"View Recording",url:a}]}break}case"release":if(t.startsWith("/release/add")){e.details="Creating new release",e.state=document.querySelector(".row-form tr td:nth-of-type(2) input").value;break}{const s=document.querySelector("bdi").textContent,r=document.querySelector(".cover-art-image > img");switch(e.details="Viewing release",r&&(e.largeImageKey=r.src),(t.match(/^\/release\/.*?\/(.*?)(\/.*?)?$/)||[])[1]){case"discids":e.state=`Disc IDs for '${s}'`;break;case"cover-art":e.state=`Cover art for '${s}'`;break;case"aliases":case"tags":case"details":e.state=`${document.querySelector(".sel bdi").textContent} for '${s}'`;break;case"add-cover-art":case"edit-cover-art":e.state=`Editing cover art for '${s}'`;break;case"edit":e.details="Editing release",e.state=s;break;case"edit-relationships":e.details="Editing release relationships",e.state=s;break;default:e.state=s,e.buttons=[{label:"View Release",url:a}]}break}case"release-group":if(t.startsWith("/release-group/create")){e.details="Creating new release group",e.state=document.querySelector("#id-edit-release-group\\.name").value;break}{const s=document.querySelector("bdi").textContent,i=document.querySelector(".cover-art-image > img");switch(e.details="Viewing release group",i&&(e.largeImageKey=i.src),(t.match(r)||[])[1]){case"aliases":case"tags":case"ratings":case"details":e.state=`${document.querySelector(".sel bdi").textContent} for '${s}'`;break;case"set-cover-art":e.details="Setting release group cover art",e.state=s;break;case"edit":e.details="Editing release group",e.state=s;break;case"edit_annotation":e.details="Editing release group annotation",e.state=s;break;case"annotations":e.state=`Annotation history for '${s}'`;break;case"open_edits":e.state=`Open edits for '${s}'`;break;case"edits":e.state=`Edit history for '${s}'`;break;case"collections":e.state=`Collections for '${s}'`;break;default:e.state=s,e.buttons=[{label:"View Release Group",url:a}]}break}case"search":e.details="Searching",e.state=new URLSearchParams(s).get("query");break;case"series":if(t.startsWith("/series/create")){e.details="Creating new series",e.state=document.querySelector("#id-edit-series\\.name").value;break}{const s=document.querySelector("bdi").textContent;switch(e.details="Viewing series",(t.match(r)||[])[1]){case"aliases":case"tags":case"details":e.state=`${document.querySelector(".sel bdi").textContent} for '${s}'`;break;case"edit":e.details="Editing series",e.state=s;break;case"edit_annotation":e.details="Editing series annotation",e.state=s;break;case"annotations":e.state=`Annotation history for '${s}'`;break;case"open_edits":e.state=`Open edits for '${s}'`;break;case"edits":e.state=`Edit history for '${s}'`;break;case"collections":e.state=`Collections for '${s}'`;break;case"subscribers":e.state=`Subscribers for '${s}'`;break;default:e.state=s,e.buttons=[{label:"View Series",url:a}]}break}case"tag":{const s=document.querySelector("h1 > a").textContent;switch(e.details="Viewing tag",(t.match(r)||[])[1]){case"artist":case"release-group":case"release":case"recording":case"work":case"label":case"place":case"area":case"instrument":case"series":case"event":e.state=`${document.querySelector(".sel bdi").textContent} for '${s}'`;break;default:e.state=s,e.buttons=[{label:"View Tag",url:a}]}break}case"taglookup":e.details="Viewing lookup results";break;case"url":{const a=document.querySelector("bdi").textContent;switch(e.details="Viewing URL",(t.match(r)||[])[1]){case"edit":e.details="Editing URL",e.state=a;break;case"open_edits":e.state=`Open edits for '${a}'`;break;case"edits":e.state=`Edit history for '${a}'`;break;default:e.state=a}break}case"user":{const[,a]=t.match(r)||[],s=document.querySelector("bdi").textContent;switch(e.details="Viewing user profile",a){case"ratings":case"subscribers":case"collections":e.state=`${s}'s ${a}`;break;case"tags":e.state=document.querySelector("h2").textContent;break;default:a?.startsWith("subscriptions/")?e.state=`${s}'s ${a.match(/^subscriptions\/(.*?)\/?$/)[1][1]} subscriptions`:e.state=s}break}case"work":if(t.startsWith("/work/create")){e.details="Creating new work",e.state=document.querySelector("#id-edit-work\\.name").value;break}{const s=document.querySelector("bdi").textContent;switch(e.details="Viewing work",(t.match(r)||[])[1]){case"aliases":case"tags":case"details":e.state=`${document.querySelector(".sel bdi").textContent} for '${s}'`;break;case"edit":e.details="Editing work",e.state=s;break;case"edit_annotation":e.details="Editing work annotation",e.state=s;break;case"annotations":e.state=`Annotation history for '${s}'`;break;case"open_edits":e.state=`Open edits for '${s}'`;break;case"edits":e.state=`Edit history for '${s}'`;break;case"collections":e.state=`Collections for '${s}'`;break;default:e.state=s,e.buttons=[{label:"View Work",url:a}]}break}default:e.details="Browsing...",e.state=document.title.split(" - MusicBrainz")[0]}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;