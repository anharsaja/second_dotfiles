var __webpack_exports__={};const presence=new Presence({clientId:"754070047193956492"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(()=>{const e={smallImageKey:"https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/19.png",smallImageText:"DMOJ: Modern Online Judge",startTimestamp:browsingTimestamp},t=document.location.pathname.split("/");if(t.includes("post"))e.details="Viewing post:",e.state=document.querySelector("#content > h2").textContent.trim(),e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/1.png",e.buttons=[{label:"View Post",url:`https://dmoj.ca/post/${t[2][2]}`}];else if(t.includes("problems"))e.details="Browsing problems",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/12.png";else if(t.includes("problem")){const s=`https://dmoj.ca/problem/${t[2]}`;if(e.buttons=[{label:"View Problem",url:s}],t.includes("submit"))e.details="Submitting to problem:",e.state=document.querySelector("#content > h2 > a").textContent.trim(),e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/13.png";else if(t.includes("submissions"))e.details="Viewing submissions to problem:",e.state=document.querySelectorAll(".tabs > h2 > a")[document.querySelectorAll(".tabs > h2 > a").length-1].textContent.trim(),e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/10.png",e.buttons.push({label:"View Submissions",url:`${s}/submissions/`});else if(t.includes("rank"))e.details="Viewing best submissions to problem:",e.state=document.querySelector(".tabs > h2 > a").textContent.trim(),e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/10.png",e.buttons.push({label:"View Best Submissions",url:`${s}/rank/`});else if(t.includes("editorial"))e.details="Viewing editorial for problem:",e.state=document.querySelector("#content > h2 > a").textContent.trim(),e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/0.png",e.buttons.push({label:"View Editorial",url:`${s}/editorial/`});else if(t.includes("tickets")&&t.includes("new"))e.details="Creating a ticket for problem:",e.state=document.querySelector("#content > h2 > a").textContent.trim(),e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/11.png";else{const t=document.querySelector(".problem-title > h2").textContent.trim(),s=document.querySelector(".pi-value").textContent.trim();e.details="Viewing problem:",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/4.png",e.state="1"===s?`${t} (${s} point)`:`${t} (${s} points)`}}else if(t.includes("submissions"))if(t.includes("user"))if(e.details="Viewing submissions by user:","All my submissions"===document.querySelector(".tabs > h2").textContent.trim()){const t=document.querySelector("#user-links > ul > li > a > span > span > b").textContent.trim();e.state=t,e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/10.png",e.buttons=[{label:"View Submissions",url:`https://dmoj.ca/submissions/user/${t}`},{label:"View User",url:`https://dmoj.ca/user/${t}`}]}else{const t=document.querySelector(".tabs > h2 > a").textContent.trim();e.state=t,e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/10.png",e.buttons=[{label:"View Submissions",url:`https://dmoj.ca/submissions/user/${t}`},{label:"View User",url:`https://dmoj.ca/user/${t}`}]}else e.details="Browsing submissions",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/10.png";else if(t.includes("submission"))e.details="Viewing submission to problem:",e.state=document.querySelector("#content > h2 > a").textContent.trim(),e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/15.png",e.buttons=[{label:"View Submission",url:`https://dmoj.ca/submission/${t[2]}`}];else if(t.includes("src"))e.details="Viewing submission source to problem:",e.state=document.querySelector("#content > h2 > a").textContent.trim(),e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/16.png";else if(t.includes("organizations"))e.details="Browsing organizations",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/3.png";else if(t.includes("organization")){const s=`https://dmoj.ca/organization/${t[2]}`;e.state=document.querySelector("#content > h2").textContent.trim().replace(" Members",""),e.buttons=[{label:"View Organization",url:s},{label:"View Members",url:`${s}/users`}],t.includes("users")?(e.details="Viewing members of organization:",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/18.png"):(e.details="Viewing organization:",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/3.png")}else if(t.includes("users"))e.details="Viewing leaderboard",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/8.png";else if(t.includes("user")){const s=document.querySelector(".tabs > h2").textContent.trim();if(t.includes("solved")){const[,t]=document.querySelectorAll(".user-sidebar > div")[2].textContent.trim().split("#");if(e.details="Viewing problems solved by:","My account"===s){const s=document.querySelector("#user-links > ul > li > a > span > span > b").textContent.trim(),i=`https://dmoj.ca/user/${s}`;e.state=`${s} (Rank: #${t})`,e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/10.png",e.buttons=[{label:"View User",url:i},{label:"View Solved Problems",url:`${i}/solved`}]}else{const[,s]=document.querySelector(".tabs > h2").textContent.trim().split(" "),i=`https://dmoj.ca/user/${s}`;e.state=`${s} (Rank: #${t})`,e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/10.png",e.buttons=[{label:"View User",url:i},{label:"View Solved Problems",url:`${i}/solved`}]}}else{const[,t]=document.querySelectorAll(".user-sidebar > div")[2].textContent.trim().split("#");if(e.details="Viewing user:","My account"===s){const s=document.querySelector("#user-links > ul > li > a > span > span > b").textContent.trim();e.state=`${s} (Rank: #${t})`,e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/17.png",e.buttons=[{label:"View User",url:`https://dmoj.ca/user/${s}`}]}else{const[,s]=document.querySelector(".tabs > h2").textContent.trim().split(" ");e.state=`${s} (Rank: #${t})`,e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/17.png",e.buttons=[{label:"View User",url:`https://dmoj.ca/user/${s}`}]}}}else if(t.includes("edit")&&t.includes("profile"))e.details="Editing profile:",e.state=document.querySelector("#user-links > ul > li > a > span > span > b").textContent.trim(),e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/2.png";else if(t.includes("contests"))e.details="Browsing contests",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/7.png";else if(t.includes("contest")){const s=`https://dmoj.ca/contests/${t[2]}`;e.state=document.querySelector(".tabs > h2").textContent.trim(),e.buttons=[{label:"View Contest",url:s}],t.includes("stats")?(e.details="Viewing statistics of contest:",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/14.png",e.buttons.push({label:"View Statistics",url:`${s}/stats`})):t.includes("ranking")?(e.details="Viewing rankings of contest:",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/8.png",e.buttons.push({label:"View Rankings",url:`${s}/ranking`})):t.includes("participations")?(e.details="Viewing participation of contest:",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/18.png",e.buttons.push({label:"View Participation",url:`${s}/participations`})):(e.details="Viewing contest:",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/7.png")}else t.includes("about")?(e.details="Viewing about page",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/5.png"):t.includes("status")?(e.details="Viewing status",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/9.png"):t.includes("runtimes")?t.includes("matrix")?(e.details="Viewing version matrix",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/16.png"):(e.details="Viewing runtimes",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/16.png"):t.includes("tips")?(e.details="Viewing tips",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/5.png"):t.includes("api")?(e.details="Viewing API",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/16.png"):(e.details="Viewing home page",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/D/DMOJ/assets/6.png");presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUssQ0FDdEJKLE1BQU8scUJBQ1BiLElBQUssR0FBRzBCLHVCQUlaOUIsRUFBYVUsUUFBVSxtQkFDdkJWLEVBQWFlLGNBQWdCLHlEQUVyQyxNQUNTWCxFQUFJSyxTQUFTLFVBQ2xCVCxFQUFhVSxRQUFVLHFCQUN2QlYsRUFBYWUsY0FBZ0IsMERBRXhCWCxFQUFJSyxTQUFTLFdBQ2xCVCxFQUFhVSxRQUFVLGlCQUN2QlYsRUFBYWUsY0FBZ0IsMERBRXhCWCxFQUFJSyxTQUFTLFlBQ2RMLEVBQUlLLFNBQVMsV0FDYlQsRUFBYVUsUUFBVSx5QkFDdkJWLEVBQWFlLGNBQWdCLDREQUc3QmYsRUFBYVUsUUFBVSxtQkFDdkJWLEVBQWFlLGNBQWdCLDJEQUc1QlgsRUFBSUssU0FBUyxTQUNsQlQsRUFBYVUsUUFBVSxlQUN2QlYsRUFBYWUsY0FBZ0IsMERBRXhCWCxFQUFJSyxTQUFTLFFBQ2xCVCxFQUFhVSxRQUFVLGNBQ3ZCVixFQUFhZSxjQUFnQiw0REFHN0JmLEVBQWFVLFFBQVUsb0JBQ3ZCVixFQUFhZSxjQUFnQiwwREFFakN4QixTQUFTd0MsWUFBWS9CLEVBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wcmVzZW5jZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwcmVzZW5jZSA9IG5ldyBQcmVzZW5jZSh7XG4gICAgY2xpZW50SWQ6IFwiNzU0MDcwMDQ3MTkzOTU2NDkyXCIsXG59KSwgYnJvd3NpbmdUaW1lc3RhbXAgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTtcbnByZXNlbmNlLm9uKFwiVXBkYXRlRGF0YVwiLCAoKSA9PiB7XG4gICAgY29uc3QgcHJlc2VuY2VEYXRhID0ge1xuICAgICAgICBzbWFsbEltYWdlS2V5OiBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRC9ETU9KL2Fzc2V0cy8xOS5wbmdcIixcbiAgICAgICAgc21hbGxJbWFnZVRleHQ6IFwiRE1PSjogTW9kZXJuIE9ubGluZSBKdWRnZVwiLFxuICAgICAgICBzdGFydFRpbWVzdGFtcDogYnJvd3NpbmdUaW1lc3RhbXAsXG4gICAgfSwgdXJsID0gZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoXCIvXCIpO1xuICAgIGlmICh1cmwuaW5jbHVkZXMoXCJwb3N0XCIpKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHBvc3Q6XCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGRvY3VtZW50XG4gICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIiNjb250ZW50ID4gaDJcIilcbiAgICAgICAgICAgIC50ZXh0Q29udGVudC50cmltKCk7XG4gICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL0QvRE1PSi9hc3NldHMvMS5wbmdcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmJ1dHRvbnMgPSBbXG4gICAgICAgICAgICB7IGxhYmVsOiBcIlZpZXcgUG9zdFwiLCB1cmw6IGBodHRwczovL2Rtb2ouY2EvcG9zdC8ke3VybFsyXVsyXX1gIH0sXG4gICAgICAgIF07XG4gICAgfVxuICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcInByb2JsZW1zXCIpKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJCcm93c2luZyBwcm9ibGVtc1wiO1xuICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzEyLnBuZ1wiO1xuICAgIH1cbiAgICBlbHNlIGlmICh1cmwuaW5jbHVkZXMoXCJwcm9ibGVtXCIpKSB7XG4gICAgICAgIGNvbnN0IHByb2JsZW1VUkwgPSBgaHR0cHM6Ly9kbW9qLmNhL3Byb2JsZW0vJHt1cmxbMl19YDtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmJ1dHRvbnMgPSBbeyBsYWJlbDogXCJWaWV3IFByb2JsZW1cIiwgdXJsOiBwcm9ibGVtVVJMIH1dO1xuICAgICAgICBpZiAodXJsLmluY2x1ZGVzKFwic3VibWl0XCIpKSB7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiU3VibWl0dGluZyB0byBwcm9ibGVtOlwiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIiNjb250ZW50ID4gaDIgPiBhXCIpXG4gICAgICAgICAgICAgICAgLnRleHRDb250ZW50LnRyaW0oKTtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL0QvRE1PSi9hc3NldHMvMTMucG5nXCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodXJsLmluY2x1ZGVzKFwic3VibWlzc2lvbnNcIikpIHtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHN1Ym1pc3Npb25zIHRvIHByb2JsZW06XCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnRhYnMgPiBoMiA+IGFcIilbZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi50YWJzID4gaDIgPiBhXCIpLmxlbmd0aCAtIDFdLnRleHRDb250ZW50LnRyaW0oKTtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL0QvRE1PSi9hc3NldHMvMTAucG5nXCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuYnV0dG9ucy5wdXNoKHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJWaWV3IFN1Ym1pc3Npb25zXCIsXG4gICAgICAgICAgICAgICAgdXJsOiBgJHtwcm9ibGVtVVJMfS9zdWJtaXNzaW9ucy9gLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodXJsLmluY2x1ZGVzKFwicmFua1wiKSkge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgYmVzdCBzdWJtaXNzaW9ucyB0byBwcm9ibGVtOlwiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi50YWJzID4gaDIgPiBhXCIpXG4gICAgICAgICAgICAgICAgLnRleHRDb250ZW50LnRyaW0oKTtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL0QvRE1PSi9hc3NldHMvMTAucG5nXCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuYnV0dG9ucy5wdXNoKHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJWaWV3IEJlc3QgU3VibWlzc2lvbnNcIixcbiAgICAgICAgICAgICAgICB1cmw6IGAke3Byb2JsZW1VUkx9L3JhbmsvYCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcImVkaXRvcmlhbFwiKSkge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgZWRpdG9yaWFsIGZvciBwcm9ibGVtOlwiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIiNjb250ZW50ID4gaDIgPiBhXCIpXG4gICAgICAgICAgICAgICAgLnRleHRDb250ZW50LnRyaW0oKTtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL0QvRE1PSi9hc3NldHMvMC5wbmdcIjtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5idXR0b25zLnB1c2goe1xuICAgICAgICAgICAgICAgIGxhYmVsOiBcIlZpZXcgRWRpdG9yaWFsXCIsXG4gICAgICAgICAgICAgICAgdXJsOiBgJHtwcm9ibGVtVVJMfS9lZGl0b3JpYWwvYCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcInRpY2tldHNcIikgJiYgdXJsLmluY2x1ZGVzKFwibmV3XCIpKSB7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiQ3JlYXRpbmcgYSB0aWNrZXQgZm9yIHByb2JsZW06XCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBkb2N1bWVudFxuICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRlbnQgPiBoMiA+IGFcIilcbiAgICAgICAgICAgICAgICAudGV4dENvbnRlbnQudHJpbSgpO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmxhcmdlSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRC9ETU9KL2Fzc2V0cy8xMS5wbmdcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHByb2JsZW1OYW1lID0gZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5wcm9ibGVtLXRpdGxlID4gaDJcIilcbiAgICAgICAgICAgICAgICAudGV4dENvbnRlbnQudHJpbSgpLCBwcm9ibGVtUG9pbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5waS12YWx1ZVwiKS50ZXh0Q29udGVudC50cmltKCk7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBwcm9ibGVtOlwiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmxhcmdlSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRC9ETU9KL2Fzc2V0cy80LnBuZ1wiO1xuICAgICAgICAgICAgaWYgKHByb2JsZW1Qb2ludHMgPT09IFwiMVwiKVxuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke3Byb2JsZW1OYW1lfSAoJHtwcm9ibGVtUG9pbnRzfSBwb2ludClgO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke3Byb2JsZW1OYW1lfSAoJHtwcm9ibGVtUG9pbnRzfSBwb2ludHMpYDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmICh1cmwuaW5jbHVkZXMoXCJzdWJtaXNzaW9uc1wiKSkge1xuICAgICAgICBpZiAodXJsLmluY2x1ZGVzKFwidXNlclwiKSkge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgc3VibWlzc2lvbnMgYnkgdXNlcjpcIjtcbiAgICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRhYnMgPiBoMlwiKS50ZXh0Q29udGVudC50cmltKCkgPT09XG4gICAgICAgICAgICAgICAgXCJBbGwgbXkgc3VibWlzc2lvbnNcIikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHVzZXIgPSBkb2N1bWVudFxuICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIiN1c2VyLWxpbmtzID4gdWwgPiBsaSA+IGEgPiBzcGFuID4gc3BhbiA+IGJcIilcbiAgICAgICAgICAgICAgICAgICAgLnRleHRDb250ZW50LnRyaW0oKTtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSB1c2VyO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL0QvRE1PSi9hc3NldHMvMTAucG5nXCI7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmJ1dHRvbnMgPSBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBcIlZpZXcgU3VibWlzc2lvbnNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogYGh0dHBzOi8vZG1vai5jYS9zdWJtaXNzaW9ucy91c2VyLyR7dXNlcn1gLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiBcIlZpZXcgVXNlclwiLCB1cmw6IGBodHRwczovL2Rtb2ouY2EvdXNlci8ke3VzZXJ9YCB9LFxuICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCB1c2VyID0gZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIudGFicyA+IGgyID4gYVwiKVxuICAgICAgICAgICAgICAgICAgICAudGV4dENvbnRlbnQudHJpbSgpO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IHVzZXI7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmxhcmdlSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRC9ETU9KL2Fzc2V0cy8xMC5wbmdcIjtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuYnV0dG9ucyA9IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IFwiVmlldyBTdWJtaXNzaW9uc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBgaHR0cHM6Ly9kbW9qLmNhL3N1Ym1pc3Npb25zL3VzZXIvJHt1c2VyfWAsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6IFwiVmlldyBVc2VyXCIsIHVybDogYGh0dHBzOi8vZG1vai5jYS91c2VyLyR7dXNlcn1gIH0sXG4gICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJCcm93c2luZyBzdWJtaXNzaW9uc1wiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmxhcmdlSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRC9ETU9KL2Fzc2V0cy8xMC5wbmdcIjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmICh1cmwuaW5jbHVkZXMoXCJzdWJtaXNzaW9uXCIpKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHN1Ym1pc3Npb24gdG8gcHJvYmxlbTpcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnRcbiAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRlbnQgPiBoMiA+IGFcIilcbiAgICAgICAgICAgIC50ZXh0Q29udGVudC50cmltKCk7XG4gICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL0QvRE1PSi9hc3NldHMvMTUucG5nXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5idXR0b25zID0gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGxhYmVsOiBcIlZpZXcgU3VibWlzc2lvblwiLFxuICAgICAgICAgICAgICAgIHVybDogYGh0dHBzOi8vZG1vai5jYS9zdWJtaXNzaW9uLyR7dXJsWzJdfWAsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdO1xuICAgIH1cbiAgICBlbHNlIGlmICh1cmwuaW5jbHVkZXMoXCJzcmNcIikpIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgc3VibWlzc2lvbiBzb3VyY2UgdG8gcHJvYmxlbTpcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnRcbiAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRlbnQgPiBoMiA+IGFcIilcbiAgICAgICAgICAgIC50ZXh0Q29udGVudC50cmltKCk7XG4gICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL0QvRE1PSi9hc3NldHMvMTYucG5nXCI7XG4gICAgfVxuICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcIm9yZ2FuaXphdGlvbnNcIikpIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIkJyb3dzaW5nIG9yZ2FuaXphdGlvbnNcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmxhcmdlSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRC9ETU9KL2Fzc2V0cy8zLnBuZ1wiO1xuICAgIH1cbiAgICBlbHNlIGlmICh1cmwuaW5jbHVkZXMoXCJvcmdhbml6YXRpb25cIikpIHtcbiAgICAgICAgY29uc3Qgb3JnYW5pemF0aW9uVVJMID0gYGh0dHBzOi8vZG1vai5jYS9vcmdhbml6YXRpb24vJHt1cmxbMl19YDtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnRcbiAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRlbnQgPiBoMlwiKVxuICAgICAgICAgICAgLnRleHRDb250ZW50LnRyaW0oKVxuICAgICAgICAgICAgLnJlcGxhY2UoXCIgTWVtYmVyc1wiLCBcIlwiKTtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmJ1dHRvbnMgPSBbXG4gICAgICAgICAgICB7IGxhYmVsOiBcIlZpZXcgT3JnYW5pemF0aW9uXCIsIHVybDogb3JnYW5pemF0aW9uVVJMIH0sXG4gICAgICAgICAgICB7IGxhYmVsOiBcIlZpZXcgTWVtYmVyc1wiLCB1cmw6IGAke29yZ2FuaXphdGlvblVSTH0vdXNlcnNgIH0sXG4gICAgICAgIF07XG4gICAgICAgIGlmICh1cmwuaW5jbHVkZXMoXCJ1c2Vyc1wiKSkge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgbWVtYmVycyBvZiBvcmdhbml6YXRpb246XCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzE4LnBuZ1wiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgb3JnYW5pemF0aW9uOlwiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmxhcmdlSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRC9ETU9KL2Fzc2V0cy8zLnBuZ1wiO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcInVzZXJzXCIpKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIGxlYWRlcmJvYXJkXCI7XG4gICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL0QvRE1PSi9hc3NldHMvOC5wbmdcIjtcbiAgICB9XG4gICAgZWxzZSBpZiAodXJsLmluY2x1ZGVzKFwidXNlclwiKSkge1xuICAgICAgICBjb25zdCB1c2VySGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50YWJzID4gaDJcIikudGV4dENvbnRlbnQudHJpbSgpO1xuICAgICAgICBpZiAodXJsLmluY2x1ZGVzKFwic29sdmVkXCIpKSB7XG4gICAgICAgICAgICBjb25zdCBbLCB1c2VyUmFua10gPSBkb2N1bWVudFxuICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yQWxsKFwiLnVzZXItc2lkZWJhciA+IGRpdlwiKVsyXVxuICAgICAgICAgICAgICAgIC50ZXh0Q29udGVudC50cmltKClcbiAgICAgICAgICAgICAgICAuc3BsaXQoXCIjXCIpO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgcHJvYmxlbXMgc29sdmVkIGJ5OlwiO1xuICAgICAgICAgICAgaWYgKHVzZXJIZWFkZXIgPT09IFwiTXkgYWNjb3VudFwiKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdXNlciA9IGRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI3VzZXItbGlua3MgPiB1bCA+IGxpID4gYSA+IHNwYW4gPiBzcGFuID4gYlwiKVxuICAgICAgICAgICAgICAgICAgICAudGV4dENvbnRlbnQudHJpbSgpLCB1c2VyVVJMID0gYGh0dHBzOi8vZG1vai5jYS91c2VyLyR7dXNlcn1gO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke3VzZXJ9IChSYW5rOiAjJHt1c2VyUmFua30pYDtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzEwLnBuZ1wiO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5idXR0b25zID0gW1xuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiBcIlZpZXcgVXNlclwiLCB1cmw6IHVzZXJVUkwgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogXCJWaWV3IFNvbHZlZCBQcm9ibGVtc1wiLCB1cmw6IGAke3VzZXJVUkx9L3NvbHZlZGAgfSxcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgWywgdXNlcl0gPSBkb2N1bWVudFxuICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi50YWJzID4gaDJcIilcbiAgICAgICAgICAgICAgICAgICAgLnRleHRDb250ZW50LnRyaW0oKVxuICAgICAgICAgICAgICAgICAgICAuc3BsaXQoXCIgXCIpLCB1c2VyVVJMID0gYGh0dHBzOi8vZG1vai5jYS91c2VyLyR7dXNlcn1gO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGAke3VzZXJ9IChSYW5rOiAjJHt1c2VyUmFua30pYDtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzEwLnBuZ1wiO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5idXR0b25zID0gW1xuICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiBcIlZpZXcgVXNlclwiLCB1cmw6IHVzZXJVUkwgfSxcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogXCJWaWV3IFNvbHZlZCBQcm9ibGVtc1wiLCB1cmw6IGAke3VzZXJVUkx9L3NvbHZlZGAgfSxcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgWywgdXNlclJhbmtdID0gZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvckFsbChcIi51c2VyLXNpZGViYXIgPiBkaXZcIilbMl1cbiAgICAgICAgICAgICAgICAudGV4dENvbnRlbnQudHJpbSgpXG4gICAgICAgICAgICAgICAgLnNwbGl0KFwiI1wiKTtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHVzZXI6XCI7XG4gICAgICAgICAgICBpZiAodXNlckhlYWRlciA9PT0gXCJNeSBhY2NvdW50XCIpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB1c2VyID0gZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIjdXNlci1saW5rcyA+IHVsID4gbGkgPiBhID4gc3BhbiA+IHNwYW4gPiBiXCIpXG4gICAgICAgICAgICAgICAgICAgIC50ZXh0Q29udGVudC50cmltKCk7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gYCR7dXNlcn0gKFJhbms6ICMke3VzZXJSYW5rfSlgO1xuICAgICAgICAgICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL0QvRE1PSi9hc3NldHMvMTcucG5nXCI7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmJ1dHRvbnMgPSBbXG4gICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6IFwiVmlldyBVc2VyXCIsIHVybDogYGh0dHBzOi8vZG1vai5jYS91c2VyLyR7dXNlcn1gIH0sXG4gICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IFssIHVzZXJdID0gZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIudGFicyA+IGgyXCIpXG4gICAgICAgICAgICAgICAgICAgIC50ZXh0Q29udGVudC50cmltKClcbiAgICAgICAgICAgICAgICAgICAgLnNwbGl0KFwiIFwiKTtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBgJHt1c2VyfSAoUmFuazogIyR7dXNlclJhbmt9KWA7XG4gICAgICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmxhcmdlSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRC9ETU9KL2Fzc2V0cy8xNy5wbmdcIjtcbiAgICAgICAgICAgICAgICBwcmVzZW5jZURhdGEuYnV0dG9ucyA9IFtcbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbDogXCJWaWV3IFVzZXJcIiwgdXJsOiBgaHR0cHM6Ly9kbW9qLmNhL3VzZXIvJHt1c2VyfWAgfSxcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcImVkaXRcIikgJiYgdXJsLmluY2x1ZGVzKFwicHJvZmlsZVwiKSkge1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiRWRpdGluZyBwcm9maWxlOlwiO1xuICAgICAgICBwcmVzZW5jZURhdGEuc3RhdGUgPSBkb2N1bWVudFxuICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIjdXNlci1saW5rcyA+IHVsID4gbGkgPiBhID4gc3BhbiA+IHNwYW4gPiBiXCIpXG4gICAgICAgICAgICAudGV4dENvbnRlbnQudHJpbSgpO1xuICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzIucG5nXCI7XG4gICAgfVxuICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcImNvbnRlc3RzXCIpKSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJCcm93c2luZyBjb250ZXN0c1wiO1xuICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzcucG5nXCI7XG4gICAgfVxuICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcImNvbnRlc3RcIikpIHtcbiAgICAgICAgY29uc3QgY29udGVzdFVSTCA9IGBodHRwczovL2Rtb2ouY2EvY29udGVzdHMvJHt1cmxbMl19YDtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gZG9jdW1lbnRcbiAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnRhYnMgPiBoMlwiKVxuICAgICAgICAgICAgLnRleHRDb250ZW50LnRyaW0oKTtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmJ1dHRvbnMgPSBbeyBsYWJlbDogXCJWaWV3IENvbnRlc3RcIiwgdXJsOiBjb250ZXN0VVJMIH1dO1xuICAgICAgICBpZiAodXJsLmluY2x1ZGVzKFwic3RhdHNcIikpIHtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHN0YXRpc3RpY3Mgb2YgY29udGVzdDpcIjtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5sYXJnZUltYWdlS2V5ID0gXCJodHRwczovL2Nkbi5yY2QuZ2cvUHJlTWlEL3dlYnNpdGVzL0QvRE1PSi9hc3NldHMvMTQucG5nXCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuYnV0dG9ucy5wdXNoKHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJWaWV3IFN0YXRpc3RpY3NcIixcbiAgICAgICAgICAgICAgICB1cmw6IGAke2NvbnRlc3RVUkx9L3N0YXRzYCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcInJhbmtpbmdcIikpIHtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHJhbmtpbmdzIG9mIGNvbnRlc3Q6XCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzgucG5nXCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuYnV0dG9ucy5wdXNoKHtcbiAgICAgICAgICAgICAgICBsYWJlbDogXCJWaWV3IFJhbmtpbmdzXCIsXG4gICAgICAgICAgICAgICAgdXJsOiBgJHtjb250ZXN0VVJMfS9yYW5raW5nYCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcInBhcnRpY2lwYXRpb25zXCIpKSB7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBwYXJ0aWNpcGF0aW9uIG9mIGNvbnRlc3Q6XCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzE4LnBuZ1wiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmJ1dHRvbnMucHVzaCh7XG4gICAgICAgICAgICAgICAgbGFiZWw6IFwiVmlldyBQYXJ0aWNpcGF0aW9uXCIsXG4gICAgICAgICAgICAgICAgdXJsOiBgJHtjb250ZXN0VVJMfS9wYXJ0aWNpcGF0aW9uc2AsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIGNvbnRlc3Q6XCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzcucG5nXCI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAodXJsLmluY2x1ZGVzKFwiYWJvdXRcIikpIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgYWJvdXQgcGFnZVwiO1xuICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzUucG5nXCI7XG4gICAgfVxuICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcInN0YXR1c1wiKSkge1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBzdGF0dXNcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmxhcmdlSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRC9ETU9KL2Fzc2V0cy85LnBuZ1wiO1xuICAgIH1cbiAgICBlbHNlIGlmICh1cmwuaW5jbHVkZXMoXCJydW50aW1lc1wiKSkge1xuICAgICAgICBpZiAodXJsLmluY2x1ZGVzKFwibWF0cml4XCIpKSB7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyB2ZXJzaW9uIG1hdHJpeFwiO1xuICAgICAgICAgICAgcHJlc2VuY2VEYXRhLmxhcmdlSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRC9ETU9KL2Fzc2V0cy8xNi5wbmdcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIHJ1bnRpbWVzXCI7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzE2LnBuZ1wiO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcInRpcHNcIikpIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlZpZXdpbmcgdGlwc1wiO1xuICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzUucG5nXCI7XG4gICAgfVxuICAgIGVsc2UgaWYgKHVybC5pbmNsdWRlcyhcImFwaVwiKSkge1xuICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IFwiVmlld2luZyBBUElcIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmxhcmdlSW1hZ2VLZXkgPSBcImh0dHBzOi8vY2RuLnJjZC5nZy9QcmVNaUQvd2Vic2l0ZXMvRC9ETU9KL2Fzc2V0cy8xNi5wbmdcIjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gXCJWaWV3aW5nIGhvbWUgcGFnZVwiO1xuICAgICAgICBwcmVzZW5jZURhdGEubGFyZ2VJbWFnZUtleSA9IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9EL0RNT0ovYXNzZXRzLzYucG5nXCI7XG4gICAgfVxuICAgIHByZXNlbmNlLnNldEFjdGl2aXR5KHByZXNlbmNlRGF0YSk7XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWNISmxjMlZ1WTJVdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUp3Y21WelpXNWpaUzUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeE5RVUZOTEZGQlFWRXNSMEZCUnl4SlFVRkpMRkZCUVZFc1EwRkJRenRKUVVNMVFpeFJRVUZSTEVWQlFVVXNiMEpCUVc5Q08wTkJRemxDTEVOQlFVTXNSVUZEUml4cFFrRkJhVUlzUjBGQlJ5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFVkJRVVVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNRMEZCUXp0QlFYbENia1FzVVVGQlVTeERRVUZETEVWQlFVVXNRMEZCUXl4WlFVRlpMRVZCUVVVc1IwRkJSeXhGUVVGRk8wbEJRemxDTEUxQlFVMHNXVUZCV1N4SFFVRnBRanRSUVVOcVF5eGhRVUZoTERKRVFVRmhPMUZCUXpGQ0xHTkJRV01zUlVGQlJTd3lRa0ZCTWtJN1VVRkRNME1zWTBGQll5eEZRVUZGTEdsQ1FVRnBRanRMUVVOcVF5eEZRVU5FTEVkQlFVY3NSMEZCUnl4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1NVRkROME1zU1VGQlNTeEhRVUZITEVOQlFVTXNVVUZCVVN4RFFVRkRMRTFCUVUwc1EwRkJReXhGUVVGRk8xRkJRM3BDTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1pVRkJaU3hEUVVGRE8xRkJRM1pETEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1VVRkJVVHRoUVVNelFpeGhRVUZoTEVOQlFVTXNaVUZCWlN4RFFVRkRPMkZCUXpsQ0xGZEJRVmNzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0UlFVTnlRaXhaUVVGWkxFTkJRVU1zWVVGQllTd3lSRUZCWXl4RFFVRkRPMUZCUTNwRExGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVYzdXVUZEZEVJc1JVRkJSU3hMUVVGTExFVkJRVVVzVjBGQlZ5eEZRVUZGTEVkQlFVY3NSVUZCUlN4M1FrRkJkMElzUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFVkJRVVU3VTBGRGFFVXNRMEZCUXp0TFFVTkdPMU5CUVUwc1NVRkJTU3hIUVVGSExFTkJRVU1zVVVGQlVTeERRVUZETEZWQlFWVXNRMEZCUXl4RlFVRkZPMUZCUTNCRExGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NiVUpCUVcxQ0xFTkJRVU03VVVGRE0wTXNXVUZCV1N4RFFVRkRMR0ZCUVdFc05FUkJRWEZDTEVOQlFVTTdTMEZEYUVRN1UwRkJUU3hKUVVGSkxFZEJRVWNzUTBGQlF5eFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRMRVZCUVVVN1VVRkRia01zVFVGQlRTeFZRVUZWTEVkQlFVY3NNa0pCUVRKQ0xFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRPMUZCUlhaRUxGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NRMEZCUXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hqUVVGakxFVkJRVVVzUjBGQlJ5eEZRVUZGTEZWQlFWVXNSVUZCUlN4RFFVRkRMRU5CUVVNN1VVRkZjRVVzU1VGQlNTeEhRVUZITEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJReXhGUVVGRk8xbEJRek5DTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc2QwSkJRWGRDTEVOQlFVTTdXVUZEYUVRc1dVRkJXU3hEUVVGRExFdEJRVXNzUjBGQlJ5eFJRVUZSTzJsQ1FVTXpRaXhoUVVGaExFTkJRVU1zYlVKQlFXMUNMRU5CUVVNN2FVSkJRMnhETEZkQlFWY3NRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRaUVVOeVFpeFpRVUZaTEVOQlFVTXNZVUZCWVN3MFJFRkJaMElzUTBGQlF6dFRRVU16UXp0aFFVRk5MRWxCUVVrc1IwRkJSeXhEUVVGRExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNSVUZCUlR0WlFVTjJReXhaUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEdsRFFVRnBReXhEUVVGRE8xbEJRM3BFTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1VVRkJVU3hEUVVGRExHZENRVUZuUWl4RFFVRkRMR2RDUVVGblFpeERRVUZETEVOQlJTOUVMRkZCUVZFc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4blFrRkJaMElzUTBGQlF5eERRVUZETEUxQlFVMHNSMEZCUnl4RFFVRkRMRU5CUTNSRUxFTkJRVU1zVjBGQlZ5eERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMWxCUTNKQ0xGbEJRVmtzUTBGQlF5eGhRVUZoTERSRVFVRjNRaXhEUVVGRE8xbEJRMjVFTEZsQlFWa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRE8yZENRVU42UWl4TFFVRkxMRVZCUVVVc2EwSkJRV3RDTzJkQ1FVTjZRaXhIUVVGSExFVkJRVVVzUjBGQlJ5eFZRVUZWTEdWQlFXVTdZVUZEYWtNc1EwRkJReXhEUVVGRE8xTkJRMGc3WVVGQlRTeEpRVUZKTEVkQlFVY3NRMEZCUXl4UlFVRlJMRU5CUVVNc1RVRkJUU3hEUVVGRExFVkJRVVU3V1VGRGFFTXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXh6UTBGQmMwTXNRMEZCUXp0WlFVTTVSQ3haUVVGWkxFTkJRVU1zUzBGQlN5eEhRVUZITEZGQlFWRTdhVUpCUXpOQ0xHRkJRV0VzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJRenRwUWtGREwwSXNWMEZCVnl4RFFVRkRMRWxCUVVrc1JVRkJSU3hEUVVGRE8xbEJRM0pDTEZsQlFWa3NRMEZCUXl4aFFVRmhMRFJFUVVGM1FpeERRVUZETzFsQlEyNUVMRmxCUVZrc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETzJkQ1FVTjZRaXhMUVVGTExFVkJRVVVzZFVKQlFYVkNPMmRDUVVNNVFpeEhRVUZITEVWQlFVVXNSMEZCUnl4VlFVRlZMRkZCUVZFN1lVRkRNVUlzUTBGQlF5eERRVUZETzFOQlEwZzdZVUZCVFN4SlFVRkpMRWRCUVVjc1EwRkJReXhSUVVGUkxFTkJRVU1zVjBGQlZ5eERRVUZETEVWQlFVVTdXVUZEY2tNc1dVRkJXU3hEUVVGRExFOUJRVThzUjBGQlJ5eG5RMEZCWjBNc1EwRkJRenRaUVVONFJDeFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRkZCUVZFN2FVSkJRek5DTEdGQlFXRXNRMEZCUXl4dFFrRkJiVUlzUTBGQlF6dHBRa0ZEYkVNc1YwRkJWeXhEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzFsQlEzSkNMRmxCUVZrc1EwRkJReXhoUVVGaExESkVRVUZ0UWl4RFFVRkRPMWxCUXpsRExGbEJRVmtzUTBGQlF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRPMmRDUVVONlFpeExRVUZMTEVWQlFVVXNaMEpCUVdkQ08yZENRVU4yUWl4SFFVRkhMRVZCUVVVc1IwRkJSeXhWUVVGVkxHRkJRV0U3WVVGREwwSXNRMEZCUXl4RFFVRkRPMU5CUTBnN1lVRkJUU3hKUVVGSkxFZEJRVWNzUTBGQlF5eFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1IwRkJSeXhEUVVGRExGRkJRVkVzUTBGQlF5eExRVUZMTEVOQlFVTXNSVUZCUlR0WlFVTXhSQ3haUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEdkRFFVRm5ReXhEUVVGRE8xbEJRM2hFTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1VVRkJVVHRwUWtGRE0wSXNZVUZCWVN4RFFVRkRMRzFDUVVGdFFpeERRVUZETzJsQ1FVTnNReXhYUVVGWExFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTTdXVUZEY2tJc1dVRkJXU3hEUVVGRExHRkJRV0VzTkVSQlFXZENMRU5CUVVNN1UwRkRNME03WVVGQlRUdFpRVU5PTEUxQlFVMHNWMEZCVnl4SFFVRkhMRkZCUVZFN2FVSkJRM3BDTEdGQlFXRXNRMEZCUXl4eFFrRkJjVUlzUTBGQlF6dHBRa0ZEY0VNc1YwRkJWeXhEUVVGRExFbEJRVWtzUlVGQlJTeEZRVU53UWl4aFFVRmhMRWRCUVVjc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXl4WFFVRlhMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU03V1VGRmVFVXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhyUWtGQmEwSXNRMEZCUXp0WlFVTXhReXhaUVVGWkxFTkJRVU1zWVVGQllTd3lSRUZCYVVJc1EwRkJRenRaUVVVMVF5eEpRVUZKTEdGQlFXRXNTMEZCU3l4SFFVRkhPMmRDUVVONFFpeFpRVUZaTEVOQlFVTXNTMEZCU3l4SFFVRkhMRWRCUVVjc1YwRkJWeXhMUVVGTExHRkJRV0VzVTBGQlV5eERRVUZET3p0blFrRkRNMFFzV1VGQldTeERRVUZETEV0QlFVc3NSMEZCUnl4SFFVRkhMRmRCUVZjc1MwRkJTeXhoUVVGaExGVkJRVlVzUTBGQlF6dFRRVU55UlR0TFFVTkVPMU5CUVUwc1NVRkJTU3hIUVVGSExFTkJRVU1zVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4RlFVRkZPMUZCUTNaRExFbEJRVWtzUjBGQlJ5eERRVUZETEZGQlFWRXNRMEZCUXl4TlFVRk5MRU5CUVVNc1JVRkJSVHRaUVVONlFpeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMRGhDUVVFNFFpeERRVUZETzFsQlJYUkVMRWxCUTBNc1VVRkJVU3hEUVVGRExHRkJRV0VzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXl4WFFVRlhMRU5CUVVNc1NVRkJTU3hGUVVGRk8yZENRVU4yUkN4dlFrRkJiMElzUlVGRGJrSTdaMEpCUTBRc1RVRkJUU3hKUVVGSkxFZEJRVWNzVVVGQlVUdHhRa0ZEYmtJc1lVRkJZU3hEUVVGRExEWkRRVUUyUXl4RFFVRkRPM0ZDUVVNMVJDeFhRVUZYTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN1owSkJRM0pDTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1NVRkJTU3hEUVVGRE8yZENRVU14UWl4WlFVRlpMRU5CUVVNc1lVRkJZU3cwUkVGQmQwSXNRMEZCUXp0blFrRkRia1FzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnp0dlFrRkRkRUk3ZDBKQlEwTXNTMEZCU3l4RlFVRkZMR3RDUVVGclFqdDNRa0ZEZWtJc1IwRkJSeXhGUVVGRkxHOURRVUZ2UXl4SlFVRkpMRVZCUVVVN2NVSkJReTlETzI5Q1FVTkVMRVZCUVVVc1MwRkJTeXhGUVVGRkxGZEJRVmNzUlVGQlJTeEhRVUZITEVWQlFVVXNkMEpCUVhkQ0xFbEJRVWtzUlVGQlJTeEZRVUZGTzJsQ1FVTXpSQ3hEUVVGRE8yRkJRMFk3YVVKQlFVMDdaMEpCUTA0c1RVRkJUU3hKUVVGSkxFZEJRVWNzVVVGQlVUdHhRa0ZEYmtJc1lVRkJZU3hEUVVGRExHZENRVUZuUWl4RFFVRkRPM0ZDUVVNdlFpeFhRVUZYTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN1owSkJRM0pDTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1NVRkJTU3hEUVVGRE8yZENRVU14UWl4WlFVRlpMRU5CUVVNc1lVRkJZU3cwUkVGQmQwSXNRMEZCUXp0blFrRkRia1FzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnp0dlFrRkRkRUk3ZDBKQlEwTXNTMEZCU3l4RlFVRkZMR3RDUVVGclFqdDNRa0ZEZWtJc1IwRkJSeXhGUVVGRkxHOURRVUZ2UXl4SlFVRkpMRVZCUVVVN2NVSkJReTlETzI5Q1FVTkVMRVZCUVVVc1MwRkJTeXhGUVVGRkxGZEJRVmNzUlVGQlJTeEhRVUZITEVWQlFVVXNkMEpCUVhkQ0xFbEJRVWtzUlVGQlJTeEZRVUZGTzJsQ1FVTXpSQ3hEUVVGRE8yRkJRMFk3VTBGRFJEdGhRVUZOTzFsQlEwNHNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXh6UWtGQmMwSXNRMEZCUXp0WlFVTTVReXhaUVVGWkxFTkJRVU1zWVVGQllTdzBSRUZCZDBJc1EwRkJRenRUUVVOdVJEdExRVU5FTzFOQlFVMHNTVUZCU1N4SFFVRkhMRU5CUVVNc1VVRkJVU3hEUVVGRExGbEJRVmtzUTBGQlF5eEZRVUZGTzFGQlEzUkRMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzWjBOQlFXZERMRU5CUVVNN1VVRkRlRVFzV1VGQldTeERRVUZETEV0QlFVc3NSMEZCUnl4UlFVRlJPMkZCUXpOQ0xHRkJRV0VzUTBGQlF5eHRRa0ZCYlVJc1EwRkJRenRoUVVOc1F5eFhRVUZYTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN1VVRkRja0lzV1VGQldTeERRVUZETEdGQlFXRXNORVJCUVc5Q0xFTkJRVU03VVVGREwwTXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSenRaUVVOMFFqdG5Ra0ZEUXl4TFFVRkxMRVZCUVVVc2FVSkJRV2xDTzJkQ1FVTjRRaXhIUVVGSExFVkJRVVVzT0VKQlFUaENMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJUdGhRVU16UXp0VFFVTkVMRU5CUVVNN1MwRkRSanRUUVVGTkxFbEJRVWtzUjBGQlJ5eERRVUZETEZGQlFWRXNRMEZCUXl4TFFVRkxMRU5CUVVNc1JVRkJSVHRSUVVNdlFpeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMSFZEUVVGMVF5eERRVUZETzFGQlF5OUVMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRVWNzVVVGQlVUdGhRVU16UWl4aFFVRmhMRU5CUVVNc2JVSkJRVzFDTEVOQlFVTTdZVUZEYkVNc1YwRkJWeXhEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzFGQlEzSkNMRmxCUVZrc1EwRkJReXhoUVVGaExEUkVRVUZuUWl4RFFVRkRPMHRCUXpORE8xTkJRVTBzU1VGQlNTeEhRVUZITEVOQlFVTXNVVUZCVVN4RFFVRkRMR1ZCUVdVc1EwRkJReXhGUVVGRk8xRkJRM3BETEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc2QwSkJRWGRDTEVOQlFVTTdVVUZEYUVRc1dVRkJXU3hEUVVGRExHRkJRV0VzTWtSQlFYTkNMRU5CUVVNN1MwRkRha1E3VTBGQlRTeEpRVUZKTEVkQlFVY3NRMEZCUXl4UlFVRlJMRU5CUVVNc1kwRkJZeXhEUVVGRExFVkJRVVU3VVVGRGVFTXNUVUZCVFN4bFFVRmxMRWRCUVVjc1owTkJRV2RETEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRE8xRkJRMnBGTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1VVRkJVVHRoUVVNelFpeGhRVUZoTEVOQlFVTXNaVUZCWlN4RFFVRkRPMkZCUXpsQ0xGZEJRVmNzUTBGQlF5eEpRVUZKTEVWQlFVVTdZVUZEYkVJc1QwRkJUeXhEUVVGRExGVkJRVlVzUlVGQlJTeEZRVUZGTEVOQlFVTXNRMEZCUXp0UlFVTXhRaXhaUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITzFsQlEzUkNMRVZCUVVVc1MwRkJTeXhGUVVGRkxHMUNRVUZ0UWl4RlFVRkZMRWRCUVVjc1JVRkJSU3hsUVVGbExFVkJRVVU3V1VGRGNFUXNSVUZCUlN4TFFVRkxMRVZCUVVVc1kwRkJZeXhGUVVGRkxFZEJRVWNzUlVGQlJTeEhRVUZITEdWQlFXVXNVVUZCVVN4RlFVRkZPMU5CUXpGRUxFTkJRVU03VVVGRlJpeEpRVUZKTEVkQlFVY3NRMEZCUXl4UlFVRlJMRU5CUVVNc1QwRkJUeXhEUVVGRExFVkJRVVU3V1VGRE1VSXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhyUTBGQmEwTXNRMEZCUXp0WlFVTXhSQ3haUVVGWkxFTkJRVU1zWVVGQllTdzBSRUZCWlN4RFFVRkRPMU5CUXpGRE8yRkJRVTA3V1VGRFRpeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMSFZDUVVGMVFpeERRVUZETzFsQlF5OURMRmxCUVZrc1EwRkJReXhoUVVGaExESkVRVUZ6UWl4RFFVRkRPMU5CUTJwRU8wdEJRMFE3VTBGQlRTeEpRVUZKTEVkQlFVY3NRMEZCUXl4UlFVRlJMRU5CUVVNc1QwRkJUeXhEUVVGRExFVkJRVVU3VVVGRGFrTXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXh4UWtGQmNVSXNRMEZCUXp0UlFVTTNReXhaUVVGWkxFTkJRVU1zWVVGQllTd3lSRUZCY1VJc1EwRkJRenRMUVVOb1JEdFRRVUZOTEVsQlFVa3NSMEZCUnl4RFFVRkRMRkZCUVZFc1EwRkJReXhOUVVGTkxFTkJRVU1zUlVGQlJUdFJRVU5vUXl4TlFVRk5MRlZCUVZVc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEZsQlFWa3NRMEZCUXl4RFFVRkRMRmRCUVZjc1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlF6dFJRVVV6UlN4SlFVRkpMRWRCUVVjc1EwRkJReXhSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETEVWQlFVVTdXVUZETTBJc1RVRkJUU3hEUVVGRExFVkJRVVVzVVVGQlVTeERRVUZETEVkQlFVY3NVVUZCVVR0cFFrRkRNMElzWjBKQlFXZENMRU5CUVVNc2NVSkJRWEZDTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN2FVSkJRekZETEZkQlFWY3NRMEZCUXl4SlFVRkpMRVZCUVVVN2FVSkJRMnhDTEV0QlFVc3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRaUVVWaUxGbEJRVmtzUTBGQlF5eFBRVUZQTEVkQlFVY3NOa0pCUVRaQ0xFTkJRVU03V1VGRmNrUXNTVUZCU1N4VlFVRlZMRXRCUVVzc1dVRkJXU3hGUVVGRk8yZENRVU5vUXl4TlFVRk5MRWxCUVVrc1IwRkJSeXhSUVVGUk8zRkNRVU5zUWl4aFFVRmhMRU5CUVVNc05rTkJRVFpETEVOQlFVTTdjVUpCUXpWRUxGZEJRVmNzUTBGQlF5eEpRVUZKTEVWQlFVVXNSVUZEY0VJc1QwRkJUeXhIUVVGSExIZENRVUYzUWl4SlFVRkpMRVZCUVVVc1EwRkJRenRuUWtGRk1VTXNXVUZCV1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhIUVVGSExFbEJRVWtzV1VGQldTeFJRVUZSTEVkQlFVY3NRMEZCUXp0blFrRkRjRVFzV1VGQldTeERRVUZETEdGQlFXRXNORVJCUVhkQ0xFTkJRVU03WjBKQlEyNUVMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWM3YjBKQlEzUkNMRVZCUVVVc1MwRkJTeXhGUVVGRkxGZEJRVmNzUlVGQlJTeEhRVUZITEVWQlFVVXNUMEZCVHl4RlFVRkZPMjlDUVVOd1F5eEZRVUZGTEV0QlFVc3NSVUZCUlN4elFrRkJjMElzUlVGQlJTeEhRVUZITEVWQlFVVXNSMEZCUnl4UFFVRlBMRk5CUVZNc1JVRkJSVHRwUWtGRE0wUXNRMEZCUXp0aFFVTkdPMmxDUVVGTk8yZENRVU5PTEUxQlFVMHNRMEZCUXl4RlFVRkZMRWxCUVVrc1EwRkJReXhIUVVGSExGRkJRVkU3Y1VKQlEzUkNMR0ZCUVdFc1EwRkJReXhaUVVGWkxFTkJRVU03Y1VKQlF6TkNMRmRCUVZjc1EwRkJReXhKUVVGSkxFVkJRVVU3Y1VKQlEyeENMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGRFdpeFBRVUZQTEVkQlFVY3NkMEpCUVhkQ0xFbEJRVWtzUlVGQlJTeERRVUZETzJkQ1FVVXhReXhaUVVGWkxFTkJRVU1zUzBGQlN5eEhRVUZITEVkQlFVY3NTVUZCU1N4WlFVRlpMRkZCUVZFc1IwRkJSeXhEUVVGRE8yZENRVU53UkN4WlFVRlpMRU5CUVVNc1lVRkJZU3cwUkVGQmQwSXNRMEZCUXp0blFrRkRia1FzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnp0dlFrRkRkRUlzUlVGQlJTeExRVUZMTEVWQlFVVXNWMEZCVnl4RlFVRkZMRWRCUVVjc1JVRkJSU3hQUVVGUExFVkJRVVU3YjBKQlEzQkRMRVZCUVVVc1MwRkJTeXhGUVVGRkxITkNRVUZ6UWl4RlFVRkZMRWRCUVVjc1JVRkJSU3hIUVVGSExFOUJRVThzVTBGQlV5eEZRVUZGTzJsQ1FVTXpSQ3hEUVVGRE8yRkJRMFk3VTBGRFJEdGhRVUZOTzFsQlEwNHNUVUZCVFN4RFFVRkRMRVZCUVVVc1VVRkJVU3hEUVVGRExFZEJRVWNzVVVGQlVUdHBRa0ZETTBJc1owSkJRV2RDTEVOQlFVTXNjVUpCUVhGQ0xFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdhVUpCUXpGRExGZEJRVmNzUTBGQlF5eEpRVUZKTEVWQlFVVTdhVUpCUTJ4Q0xFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0WlFVVmlMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzWlVGQlpTeERRVUZETzFsQlJYWkRMRWxCUVVrc1ZVRkJWU3hMUVVGTExGbEJRVmtzUlVGQlJUdG5Ra0ZEYUVNc1RVRkJUU3hKUVVGSkxFZEJRVWNzVVVGQlVUdHhRa0ZEYmtJc1lVRkJZU3hEUVVGRExEWkRRVUUyUXl4RFFVRkRPM0ZDUVVNMVJDeFhRVUZYTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN1owSkJRM0pDTEZsQlFWa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1IwRkJSeXhKUVVGSkxGbEJRVmtzVVVGQlVTeEhRVUZITEVOQlFVTTdaMEpCUTNCRUxGbEJRVmtzUTBGQlF5eGhRVUZoTERSRVFVRmpMRU5CUVVNN1owSkJRM3BETEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjN2IwSkJRM1JDTEVWQlFVVXNTMEZCU3l4RlFVRkZMRmRCUVZjc1JVRkJSU3hIUVVGSExFVkJRVVVzZDBKQlFYZENMRWxCUVVrc1JVRkJSU3hGUVVGRk8ybENRVU16UkN4RFFVRkRPMkZCUTBZN2FVSkJRVTA3WjBKQlEwNHNUVUZCVFN4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFZEJRVWNzVVVGQlVUdHhRa0ZEZGtJc1lVRkJZU3hEUVVGRExGbEJRVmtzUTBGQlF6dHhRa0ZETTBJc1YwRkJWeXhEUVVGRExFbEJRVWtzUlVGQlJUdHhRa0ZEYkVJc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzJkQ1FVVmlMRmxCUVZrc1EwRkJReXhMUVVGTExFZEJRVWNzUjBGQlJ5eEpRVUZKTEZsQlFWa3NVVUZCVVN4SFFVRkhMRU5CUVVNN1owSkJRM0JFTEZsQlFWa3NRMEZCUXl4aFFVRmhMRFJFUVVGakxFTkJRVU03WjBKQlEzcERMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWM3YjBKQlEzUkNMRVZCUVVVc1MwRkJTeXhGUVVGRkxGZEJRVmNzUlVGQlJTeEhRVUZITEVWQlFVVXNkMEpCUVhkQ0xFbEJRVWtzUlVGQlJTeEZRVUZGTzJsQ1FVTXpSQ3hEUVVGRE8yRkJRMFk3VTBGRFJEdExRVU5FTzFOQlFVMHNTVUZCU1N4SFFVRkhMRU5CUVVNc1VVRkJVU3hEUVVGRExFMUJRVTBzUTBGQlF5eEpRVUZKTEVkQlFVY3NRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRExFVkJRVVU3VVVGRE0wUXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhyUWtGQmEwSXNRMEZCUXp0UlFVTXhReXhaUVVGWkxFTkJRVU1zUzBGQlN5eEhRVUZITEZGQlFWRTdZVUZETTBJc1lVRkJZU3hEUVVGRExEWkRRVUUyUXl4RFFVRkRPMkZCUXpWRUxGZEJRVmNzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0UlFVTnlRaXhaUVVGWkxFTkJRVU1zWVVGQllTd3lSRUZCY1VJc1EwRkJRenRMUVVOb1JEdFRRVUZOTEVsQlFVa3NSMEZCUnl4RFFVRkRMRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVU1zUlVGQlJUdFJRVU53UXl4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExHMUNRVUZ0UWl4RFFVRkRPMUZCUXpORExGbEJRVmtzUTBGQlF5eGhRVUZoTERKRVFVRnBRaXhEUVVGRE8wdEJRelZETzFOQlFVMHNTVUZCU1N4SFFVRkhMRU5CUVVNc1VVRkJVU3hEUVVGRExGTkJRVk1zUTBGQlF5eEZRVUZGTzFGQlEyNURMRTFCUVUwc1ZVRkJWU3hIUVVGSExEUkNRVUUwUWl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF6dFJRVVY0UkN4WlFVRlpMRU5CUVVNc1MwRkJTeXhIUVVGSExGRkJRVkU3WVVGRE0wSXNZVUZCWVN4RFFVRkRMRmxCUVZrc1EwRkJRenRoUVVNelFpeFhRVUZYTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN1VVRkRja0lzV1VGQldTeERRVUZETEU5QlFVOHNSMEZCUnl4RFFVRkRMRVZCUVVVc1MwRkJTeXhGUVVGRkxHTkJRV01zUlVGQlJTeEhRVUZITEVWQlFVVXNWVUZCVlN4RlFVRkZMRU5CUVVNc1EwRkJRenRSUVVWd1JTeEpRVUZKTEVkQlFVY3NRMEZCUXl4UlFVRlJMRU5CUVVNc1QwRkJUeXhEUVVGRExFVkJRVVU3V1VGRE1VSXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhuUTBGQlowTXNRMEZCUXp0WlFVTjRSQ3haUVVGWkxFTkJRVU1zWVVGQllTdzBSRUZCYjBJc1EwRkJRenRaUVVNdlF5eFpRVUZaTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJRenRuUWtGRGVrSXNTMEZCU3l4RlFVRkZMR2xDUVVGcFFqdG5Ra0ZEZUVJc1IwRkJSeXhGUVVGRkxFZEJRVWNzVlVGQlZTeFJRVUZSTzJGQlF6RkNMRU5CUVVNc1EwRkJRenRUUVVOSU8yRkJRVTBzU1VGQlNTeEhRVUZITEVOQlFVTXNVVUZCVVN4RFFVRkRMRk5CUVZNc1EwRkJReXhGUVVGRk8xbEJRMjVETEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc09FSkJRVGhDTEVOQlFVTTdXVUZEZEVRc1dVRkJXU3hEUVVGRExHRkJRV0VzTWtSQlFYRkNMRU5CUVVNN1dVRkRhRVFzV1VGQldTeERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNN1owSkJRM3BDTEV0QlFVc3NSVUZCUlN4bFFVRmxPMmRDUVVOMFFpeEhRVUZITEVWQlFVVXNSMEZCUnl4VlFVRlZMRlZCUVZVN1lVRkROVUlzUTBGQlF5eERRVUZETzFOQlEwZzdZVUZCVFN4SlFVRkpMRWRCUVVjc1EwRkJReXhSUVVGUkxFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1JVRkJSVHRaUVVNeFF5eFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMRzFEUVVGdFF5eERRVUZETzFsQlF6TkVMRmxCUVZrc1EwRkJReXhoUVVGaExEUkVRVUZsTEVOQlFVTTdXVUZETVVNc1dVRkJXU3hEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTTdaMEpCUTNwQ0xFdEJRVXNzUlVGQlJTeHZRa0ZCYjBJN1owSkJRek5DTEVkQlFVY3NSVUZCUlN4SFFVRkhMRlZCUVZVc2FVSkJRV2xDTzJGQlEyNURMRU5CUVVNc1EwRkJRenRUUVVOSU8yRkJRVTA3V1VGRFRpeFpRVUZaTEVOQlFVTXNUMEZCVHl4SFFVRkhMR3RDUVVGclFpeERRVUZETzFsQlF6RkRMRmxCUVZrc1EwRkJReXhoUVVGaExESkVRVUZwUWl4RFFVRkRPMU5CUXpWRE8wdEJRMFE3VTBGQlRTeEpRVUZKTEVkQlFVY3NRMEZCUXl4UlFVRlJMRU5CUVVNc1QwRkJUeXhEUVVGRExFVkJRVVU3VVVGRGFrTXNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXh2UWtGQmIwSXNRMEZCUXp0UlFVTTFReXhaUVVGWkxFTkJRVU1zWVVGQllTd3lSRUZCWlN4RFFVRkRPMHRCUXpGRE8xTkJRVTBzU1VGQlNTeEhRVUZITEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFc1EwRkJReXhGUVVGRk8xRkJRMnhETEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1owSkJRV2RDTEVOQlFVTTdVVUZEZUVNc1dVRkJXU3hEUVVGRExHRkJRV0VzTWtSQlFXZENMRU5CUVVNN1MwRkRNME03VTBGQlRTeEpRVUZKTEVkQlFVY3NRMEZCUXl4UlFVRlJMRU5CUVVNc1ZVRkJWU3hEUVVGRExFVkJRVVU3VVVGRGNFTXNTVUZCU1N4SFFVRkhMRU5CUVVNc1VVRkJVU3hEUVVGRExGRkJRVkVzUTBGQlF5eEZRVUZGTzFsQlF6TkNMRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzZDBKQlFYZENMRU5CUVVNN1dVRkRhRVFzV1VGQldTeERRVUZETEdGQlFXRXNORVJCUVdkQ0xFTkJRVU03VTBGRE0wTTdZVUZCVFR0WlFVTk9MRmxCUVZrc1EwRkJReXhQUVVGUExFZEJRVWNzYTBKQlFXdENMRU5CUVVNN1dVRkRNVU1zV1VGQldTeERRVUZETEdGQlFXRXNORVJCUVdkQ0xFTkJRVU03VTBGRE0wTTdTMEZEUkR0VFFVRk5MRWxCUVVrc1IwRkJSeXhEUVVGRExGRkJRVkVzUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlR0UlFVTm9ReXhaUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEdOQlFXTXNRMEZCUXp0UlFVTjBReXhaUVVGWkxFTkJRVU1zWVVGQllTd3lSRUZCWlN4RFFVRkRPMHRCUXpGRE8xTkJRVTBzU1VGQlNTeEhRVUZITEVOQlFVTXNVVUZCVVN4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRk8xRkJReTlDTEZsQlFWa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1lVRkJZU3hEUVVGRE8xRkJRM0pETEZsQlFWa3NRMEZCUXl4aFFVRmhMRFJFUVVGblFpeERRVUZETzB0QlF6TkRPMU5CUVUwN1VVRkRUaXhaUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEcxQ1FVRnRRaXhEUVVGRE8xRkJRek5ETEZsQlFWa3NRMEZCUXl4aFFVRmhMREpFUVVGakxFTkJRVU03UzBGRGVrTTdTVUZGUkN4UlFVRlJMRU5CUVVNc1YwRkJWeXhEUVVGRExGbEJRVmtzUTBGQlF5eERRVUZETzBGQlEzQkRMRU5CUVVNc1EwRkJReXhEUVVGREluMD0iXSwibmFtZXMiOlsicHJlc2VuY2UiLCJQcmVzZW5jZSIsImNsaWVudElkIiwiYnJvd3NpbmdUaW1lc3RhbXAiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93Iiwib24iLCJwcmVzZW5jZURhdGEiLCJzbWFsbEltYWdlS2V5Iiwic21hbGxJbWFnZVRleHQiLCJzdGFydFRpbWVzdGFtcCIsInVybCIsImRvY3VtZW50IiwibG9jYXRpb24iLCJwYXRobmFtZSIsInNwbGl0IiwiaW5jbHVkZXMiLCJkZXRhaWxzIiwic3RhdGUiLCJxdWVyeVNlbGVjdG9yIiwidGV4dENvbnRlbnQiLCJ0cmltIiwibGFyZ2VJbWFnZUtleSIsImJ1dHRvbnMiLCJsYWJlbCIsInByb2JsZW1VUkwiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwicHVzaCIsInByb2JsZW1OYW1lIiwicHJvYmxlbVBvaW50cyIsInVzZXIiLCJvcmdhbml6YXRpb25VUkwiLCJyZXBsYWNlIiwidXNlckhlYWRlciIsInVzZXJSYW5rIiwidXNlclVSTCIsImNvbnRlc3RVUkwiLCJzZXRBY3Rpdml0eSJdLCJzb3VyY2VSb290IjoiIn0=
undefined;