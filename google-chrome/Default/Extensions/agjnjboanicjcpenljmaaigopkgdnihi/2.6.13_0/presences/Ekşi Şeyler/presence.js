var __webpack_exports__={};const presence=new Presence({clientId:"643771565951025153"});presence.on("UpdateData",(async()=>{const e=document.location.pathname,t=document.querySelector("#content-body-area > div > div > div.content-heading > h1");if(e.includes("/kategori/")){const e=document.title[0].toUpperCase()+document.title.replace(" - Ekşi Şeyler","").slice(1,document.title.length).toLowerCase();presence.setActivity({largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/E/Ek%C5%9Fi%20%C5%9Eeyler/assets/logo.png",details:"Bir kategoriye göz atıyor:",state:e||"Belirsiz",startTimestamp:Math.floor(Date.now()/1e3)})}else if(e.includes("/kanal/")){const e=document.title[0].toUpperCase()+document.title.replace(" - Ekşi Şeyler","").slice(1,document.title.length).toLowerCase();presence.setActivity({largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/E/Ek%C5%9Fi%20%C5%9Eeyler/assets/logo.png",details:"Bir kanala göz atıyor:",state:e||"Belirsiz",startTimestamp:Math.floor(Date.now()/1e3)})}else if(e.includes("/derleme/arama/")){const e=document.querySelector("#main-content > div > div > div.search-result-info > span");presence.setActivity({largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/E/Ek%C5%9Fi%20%C5%9Eeyler/assets/logo.png",details:"Bir şey arıyor:",state:e&&""!==e.textContent?e.textContent:"Belirsiz",startTimestamp:Math.floor(Date.now()/1e3)})}else t&&""!==t.textContent?presence.setActivity({largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/E/Ek%C5%9Fi%20%C5%9Eeyler/assets/logo.png",details:"Bir gönderiyi okuyor:",state:t.textContent||"Belirsiz",startTimestamp:Math.floor(Date.now()/1e3)}):presence.setActivity({largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/E/Ek%C5%9Fi%20%C5%9Eeyler/assets/logo.png",details:"Bir sayfaya göz atıyor:",state:"Ana Sayfa",startTimestamp:Math.floor(Date.now()/1e3)})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;