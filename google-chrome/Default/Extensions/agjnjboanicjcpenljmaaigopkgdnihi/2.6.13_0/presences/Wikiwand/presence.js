var __webpack_exports__={};const presence=new Presence({clientId:"731472884337475596"});let currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/");const browsingTimestamp=Math.floor(Date.now()/1e3);let presenceData={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Wikiwand/assets/logo.png",startTimestamp:browsingTimestamp};const updateCallback={_function:null,get function(){return this._function},set function(e){this._function=e},get present(){return null!==this._function}},resetData=(e={details:"Viewing an unsupported page",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/W/Wikiwand/assets/logo.png",startTimestamp:browsingTimestamp})=>{currentURL=new URL(document.location.href),currentPath=currentURL.pathname.replace(/^\/|\/$/g,"").split("/"),presenceData={...e}};if((()=>{let e;try{e=document.querySelector("h1.firstHeading span").textContent}catch(t){e=decodeURI(currentPath.slice(1).join("/").replaceAll("_"," "))}""===currentPath[0]?presenceData.details="On the main page":document.querySelector(".error_content")?presenceData.details="On a non-existent page":e?(presenceData.details="Reading a wiki page",presenceData.state=e,"en"!==currentPath[0]&&(presenceData.state+=` (${currentPath[0]})`)):(presenceData.details="Viewing a page",presenceData.state=document.title.replace(" - Wikiwand",""))})(),updateCallback.present){const e={...presenceData};presence.on("UpdateData",(async()=>{resetData(e),updateCallback.function(),presence.setActivity(presenceData)}))}else presence.on("UpdateData",(async()=>{presence.setActivity(presenceData)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;