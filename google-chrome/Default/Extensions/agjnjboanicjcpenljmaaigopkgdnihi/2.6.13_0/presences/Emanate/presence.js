var __webpack_exports__={};class Emanate extends Presence{constructor(e){super(e)}get startTime(){return~~(Date.now()/1e3)}isListening(){return document.querySelector('[id="GlobalPlayer"]')?.className.startsWith("active")}getSong(){if(this.isListening())return{author:document.querySelector("span.author").textContent.replace(" _ ",""),title:document.querySelector("span.title").textContent,duration:this.timestampFromFormat(document.querySelector("div.position-duration").textContent.split(" / ")[1]),currentTime:this.timestampFromFormat(document.querySelector("div.position-duration").textContent.split(" / ")[0]),paused:!document.querySelector("img.pause-button"),href:document.querySelector("a.track-link").href}}}const emanate=new Emanate({clientId:"843206620355625031"});emanate.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/E/Emanate/assets/logo.png",startTimestamp:emanate.startTime},t={"/dashboard/":()=>{switch(e.details="Viewing page:",location.pathname.split("/")[2]){case"profile":default:e.state="Account";break;case"tracks":e.state="My Tracks";break;case"earnings":e.state="Earnings";break;case"subscription":e.state="Subscription";break;case"drops":e.state="Drops"}},"/me":()=>{e.details="Viewing their profile"},"/listen":()=>{e.details="Browsing..."}};for(const[a,s]of Object.entries(t)){if(location.pathname.includes(a)&&!emanate.isListening()){s();break}if(emanate.isListening()){const t=emanate.getSong();e.details=(await emanate.getSetting("song_1")).replace("%title%",t.title).replace("%author%",t.author),e.state=(await emanate.getSetting("song_2")).replace("%title%",t.title).replace("%author%",t.author),[e.startTimestamp,e.endTimestamp]=emanate.getTimestamps(t.currentTime,t.duration),e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=t.paused?"Paused":"Playing",e.buttons=[{label:"Listen Along",url:t.href}],t.paused&&(delete e.startTimestamp,delete e.endTimestamp);break}}"dashboard.emanate.live"===location.hostname&&(e.details="Viewing their dashboard"),document.querySelector("input").value&&!emanate.isListening()&&(e.details="Searching for:",e.state=document.querySelector("input").value),!await emanate.getSetting("buttons")&&e.buttons&&delete e.buttons,e.details?emanate.setActivity(e):emanate.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;