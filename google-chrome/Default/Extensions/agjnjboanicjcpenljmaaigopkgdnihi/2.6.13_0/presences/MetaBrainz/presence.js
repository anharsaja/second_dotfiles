var __webpack_exports__={};const presence=new Presence({clientId:"1017489991930232902"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/MetaBrainz/assets/logo.png",startTimestamp:browsingTimestamp},{hostname:t,pathname:a,search:s}=window.location;switch(t){case"metabrainz.org":switch(e.details="Browsing...",a){case"/":e.state="Home page";break;case"/profile":e.details="Viewing MetaBrainz profile",e.state=new URLSearchParams(s).get("musicbrainz_id");break;default:e.state=document.title.split(" - MetaBrainz Foundation")[0]}break;case"blog.metabrainz.org":e.details="Reading blog","/"===a?e.state="Home page":a.startsWith("/author/")?e.state=`Viewing articles by ${a.match(/^\/author\/(.*?)\//)[1]}`:a.startsWith("/tag/")?e.state=`Viewing articles tagged '${document.querySelector(".page-title > span")?.textContent||a.match(/^\/tag\/(.*?)\//)[1]}'`:a.startsWith("/category/")?e.state=`Viewing category '${document.querySelector(".page-title > span")?.textContent||a.match(/^\/category\/(.*?)\//)[1]}'`:/^\/\d+\/(\d+\/)?$/.test(a)?e.state=`Viewing articles created in ${document.querySelector(".page-title > span").textContent}`:e.state=document.querySelector(".entry-title").textContent;break;case"community.metabrainz.org":e.details="Browsing forum",e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/M/MetaBrainz/assets/0.png","/"===a?e.state="Home page":a.startsWith("/c/")||/^\/tags\/c\/.+/.test(a)?e.state=`Viewing category '${document.querySelector(".category-name").textContent}'`:a.startsWith("/t/")?e.state=document.querySelector(".fancy-title").textContent:/^\/g\/.+/.test(a)?e.state=`Viewing group '${document.querySelector(".group-info-name").textContent}'`:/^\/categories\/?/.test(a)?e.state="Viewing categories":"/login-preferences"===a?e.state="Logging in":a.startsWith("/u/")?(e.state=`Viewing profile of ${document.querySelector(".username").textContent}`,e.smallImageKey=document.querySelector(".user-profile-avatar > img").src,e.smallImageText=document.querySelector(".full-name").textContent):e.state=document.title.split(" - MetaBrainz Community Discourse")[0]}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;