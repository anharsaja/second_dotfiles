var __webpack_exports__={};const presence=new Presence({clientId:"1027249400738750625"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/The%20Weather%20Channel/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:a,hostname:t,href:s}=window.location,r=a.split("/").filter((e=>e)),i=document.querySelector("[class*='--locationName--']")?.textContent,c=document.querySelector("h1")?.textContent;function l(a,t){""===(a??"")?e.details=`Browsing ${t} stories`:a.includes("video")?(e.details=`Watching a ${t} video`,e.state=c,e.buttons=[{label:"Watch Video",url:s}]):a.includes("news")&&(e.details=`Reading a ${t} article`,e.state=c,e.buttons=[{label:"Read Article",url:s}])}if("weather.com"===t)switch(r[0]??""){case"":e.details="Browsing homepage";break;case"deals":l(r,"deal");break;case"forecast":switch(r[1]){case"air-quality":e.details="Viewing air quality forecast",e.state=i;break;case"allergy":e.details="Viewing allergy forecast",e.state=`${document.querySelector("h2").textContent} for ${i}`;break;case"cold-flu":e.details="Viewing cold & flu forecasts";break;default:l(r.slice(1),"forecast")}break;case"health":"cold-flu"===r[1]?l(r.slice(2),"cold & flu"):l(r.slice(1),"health");break;case"slideshows":case"photos":l(r.slice(1),"photo"),"news"===r[1]&&(e.largeImageKey=document.querySelector("[id*='int-image'] img").src);break;case"promos":l(r.slice(1),"promo");break;case"login":case"signup":e.details="Logging in";break;case"maps":e.details="Viewing a map",e.state=c,e.buttons=[{label:"View Map",url:s}];break;case"member":e.details="Managing account";break;case"news":l(r.slice(1),"news");break;case"safety":l(r.slice(1),"safety");break;case"science":l(r.slice(1),"science");break;case"sports-recreation":"fishing"===r[1]?l(r.slice(2),"fishing"):l(r.slice(1),"sports & recreation");break;case"storms":switch(r[1]){case"tornado":l(r.slice(2),"tornado");break;case"hurricane":l(r.slice(2),"hurricane")}break;case"subscribe":e.details="Subscribing";break;case"travel":l(r.slice(1),"travel");break;case"weather":switch(r[1]){case"today":e.details="Browsing today's weather forecast",e.state=i;break;case"hourbyhour":e.details="Browsing hourly weather forecast",e.state=i;break;case"tenday":e.details="Browsing 10-day weather forecast",e.state=i;break;case"weekend":e.details="Browsing weekend weather forecast",e.state=i;break;case"monthly":e.details="Browsing monthly weather forecast",e.state=i;break;case"radar":e.details="Viewing weather radar",e.state=i}break;default:e.details="Browsing",e.state=document.title.match(/^(.*?)( \| The Weather Channel)?$/)[1]}else"features.weather.com"===t&&(""===r[0]?(e.details="Browsing",e.state="All features and stories"):"category"===r[0]?(e.details="Browsing category",e.state=c.match(/: (.*)$/)[1]):(e.details="Reading an article",e.state=c,e.buttons=[{label:"Read Article",url:s}]));e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;