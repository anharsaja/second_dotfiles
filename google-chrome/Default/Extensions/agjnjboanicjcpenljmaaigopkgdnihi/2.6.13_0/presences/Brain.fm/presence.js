var __webpack_exports__={};const presence=new Presence({clientId:"981442534167441428"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/B/Brain.fm/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:t,hostname:s}=document.location;if(["www.brain.fm","try.brain.fm"].includes(s))if(["/","/home"].includes(t))e.details="Viewing the home page";else if(t.startsWith("/about"))e.details="Viewing the about page";else if(t.startsWith("/pdfs"))switch(e.details="Reading a PDF",t){case"/pdfs/performance-pilot.pdf":e.state="Performance Pilot";break;case"/pdfs/white-paper.pdf":e.state="White Paper";break;case"/pdfs/sleep-study.pdf":e.state="Sleep Studies"}else t.startsWith("/science")?e.details="Viewing the science page":t.startsWith("/press")?e.details="Viewing the press page":t.startsWith("/pricing")?e.details="Viewing pricing options":t.startsWith("/jobs")?e.details="Viewing the jobs page":t.startsWith("/faq")?e.details="Viewing the FAQ page":t.startsWith("/contact")?e.details="Viewing the contact page":t.startsWith("/terms")?e.details="Viewing the terms page":t.startsWith("/privacy")?e.details="Viewing the privacy page":t.startsWith("/legal")?e.details="Viewing the legal page":t.startsWith("/forgot-password")&&(e.details="Resetting their password");else if(s.startsWith("my"))if("/"===t)document.querySelector("#root > div > div.sc-gKsewC.sc-iBPRYJ.sc-gGiJkG.efCouF.cOWINi.jzdkxv")?e.details="Logging in":document.querySelector("div[data-testid='focusCard']")&&(e.details="Choosing mode");else if(t.startsWith("/signup"))e.details="Signing up";else if(t.startsWith("/welcome"))e.details="Getting started";else if(["/focus","/relax","/sleep"].includes(t)){const s=document.evaluate('//span[text()="Activity"]',document)?.iterateNext()?.parentElement?.querySelectorAll("span")?.[1]?.textContent.trim();switch(t){case"/focus":e.state=`Focusing • ${s}`;break;case"/relax":e.state=`Relaxing • ${s}`;break;case"/sleep":e.state=`Sleeping • ${s}`}const i=document.querySelector("div[data-testid='trackSubtitle']").textContent.trim().split(" • ");e.details=`${document.querySelector("div[data-testid='currentTrackTitle']").textContent.trim()} • ${i[0]}`,e.largeImageKey=document.querySelector("div[data-testid='trackInformationCard'] > img").getAttribute("src"),e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/B/Brain.fm/assets/logo.png",e.smallImageText=i[1]}else t.startsWith("/user")?e.details="Viewing their user information":t.startsWith("/payment")&&(e.details="Viewing payment information");else e.details="Browsing";presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;