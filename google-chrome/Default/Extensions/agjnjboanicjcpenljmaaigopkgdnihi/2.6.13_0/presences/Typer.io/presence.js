var __webpack_exports__={};const presence=new Presence({clientId:"854448403273351202"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(()=>{const t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/Typer.io/assets/logo.png",startTimestamp:browsingTimestamp};if(document.location.pathname.startsWith("/play")){const e=document.querySelector("#__next > div.Play_root__16QtH > div.Play_container__392yl.false > div.Status_root__2iFRH > div > h3").textContent.trim();e&&(t.details="In a quick play race:",t.state=e);try{const e=`${document.querySelector("#PreMiD-WPM").textContent.trim()} WPM`,o=`${document.querySelector("#PreMiD-ACC").textContent.trim()} acc`,a=document.querySelector("#__next > div.Play_root__16QtH > div.Play_container__392yl.false > div.Status_root__2iFRH > div > h3").textContent.trim();"GO!"===a&&(t.details="In a quick play race:",t.state=`${e}, ${o}`);const n=document.querySelector("#PreMiD-RANK").textContent.trim(),i=document.querySelector("#PreMiD-TIME").textContent.trim();"--:--"!==i&&(t.details=`Placed ${n} in a quick play race!`,t.state=`${e}, ${o}, ${i}`),"-"===n&&"undefined"!==e&&"Game has Ended"===a&&(t.details="The game ended, did not finish.",t.state=`${e}, ${o}`)}catch{t.details="In a quick play race:",t.state="Connecting..."}}else if(document.location.pathname.startsWith("/solo")){const e=document.querySelector("#__next > div.Play_root__16QtH > div.Play_container__392yl.Play_soloContainer__1IpE4 > div.Status_root__2iFRH > div > h3").textContent.trim();"Press 'Space' to begin..."!==e?(t.details="In a solo race:",t.state=e):"Press 'Space' to begin..."===e&&(t.details="In a solo race:",t.state="Waiting for user to start the race.");try{const o=`${document.querySelector("#PreMiD-WPM").textContent.trim()} WPM`,a=`${document.querySelector("#PreMiD-ACC").textContent.trim()} acc`,n=document.querySelector("#PreMiD-TIME").textContent.trim();"GO!"===e&&(t.details="In a solo race:",t.state=`${o}, ${a}`),"Game has Ended"===e&&"--:--"!==n?(t.details="Completed a solo race:",t.state=`${o}, ${a}, ${n}`):"Game has Ended"===e&&"--:--"===n&&(t.details="Did not complete solo race:",t.state=`${o}, ${a}`)}catch{t.details="In a solo race:",t.state="Connecting..."}}else if(document.location.pathname.startsWith("/lobby"))try{t.details=document.querySelector("#__next > main > div > div.Lobby_container__1Y-Os > div.Banner_root__thCyZ > h3").textContent.trim()}catch{const e=document.querySelector("#__next > div.Play_root__16QtH > div.Play_container__392yl.false > div.Status_root__2iFRH > div > h3").textContent.trim(),o=`${document.querySelector("#PreMiD-WPM").textContent.trim()} WPM`,a=document.querySelector("#PreMiD-RANK").textContent.trim(),n=`${document.querySelector("#PreMiD-ACC").textContent.trim()} acc`;"Get Ready..."!==e&&"Get Set..."!==e||(t.details="In a private lobby race:",t.state=e),"GO!"===e&&(t.details="In a private lobby race:",t.state=`${o}, ${n}`),"-"===a&&"Game has Ended"!==e||(t.details=`Placed ${a} in a private race!`,t.state=`${o}, ${n}, ${document.querySelector("#PreMiD-TIME").textContent.trim()}`),"-"===a&&"Game has Ended"===e&&(t.details="The game ended, did not finish.",t.state=`${o}, ${n}`)}else if(document.location.pathname.startsWith("/forum/post/"))try{t.details="Reading a post on the forum:",t.state=document.querySelector("#__next > div.Post_root__ivA4B > div > div.Post_postContainer__oful_ > div.Post_postContent__2KI4z > div.Post_header__19SiQ > h1").textContent.trim()}catch{t.details="Reading a post on the forum."}else if("/forum"===document.location.pathname)t.details="Scrolling through forum posts.";else if(document.location.pathname.startsWith("/hiscores"))t.details="Viewing the hiscores.";else if("/u/settings"===document.location.pathname)t.details="Editing account settings...";else if(document.location.pathname.startsWith("/u/"))try{t.details=`Viewing ${document.querySelector("#__next > div.Profile_root__2QIUs > div.Profile_headerContainer__IYvIA > div.Profile_profileContainer__k2Fu9 > div.Profile_wrapper__3Ghk7 > div.Profile_content__rWK4h > h3").textContent.trim()}'s profile.`}catch{t.details="Viewing a user profile."}else if(document.location.pathname.startsWith("/login"))t.details="Logging in...";else if(document.location.pathname.startsWith("/signup"))t.details="Creating an account...";else if("/"===document.location.pathname)t.details="Viewing the home page.";else try{t.details=document.querySelector("#__next > main > h1").textContent.trim()}catch{t.details="Viewing an unsupported page."}presence.setActivity(t)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;