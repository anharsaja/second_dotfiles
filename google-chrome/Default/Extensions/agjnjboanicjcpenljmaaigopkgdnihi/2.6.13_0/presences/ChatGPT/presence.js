var __webpack_exports__={};const presence=new Presence({clientId:"1102935778570547282"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const{pathname:e}=document.location,t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/C/ChatGPT/assets/logo.png",startTimestamp:browsingTimestamp},s=await presence.getSetting("showTitle"),a=document.querySelector('[class*="text-2xl"] > span:nth-child(3)');let n=0;for(const e of document.querySelectorAll('[data-message-author-role="user"],[data-message-author-role="assistant"]')){const t=e.textContent.replace(/(, )|(,\n)|(,)|([.] )|([.])/gm," ").replace(/([0-9]*)|(\/)|(')|(,)|( )/gm,"");n+=t.split(" ").slice(2,t.split(" ").length).length}"c"===e.split("/")[1]?("ChatGPT"===document.title&&s?t.details=document.querySelector(`[href="/c/${e.split("/")[2]}"]`)?.textContent:t.details=s?document.title:"Talking with AI about something",t.state=a?"AI is responding...":`asked (${Number(document.querySelectorAll('[data-message-author-role="user"]').length)}) times | (${n}) words`,t.smallImageKey=a?"https://cdn.rcd.gg/PreMiD/websites/C/ChatGPT/assets/0.png":null):(t.details="Start new conversation",t.state="Thinking of a new prompt..."),presence.setActivity(t)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2VuY2UuanMiLCJtYXBwaW5ncyI6IjJCQUFBLE1BQU1BLFNBQVcsSUFBSUMsU0FBUyxDQUFFQyxTQUFVLHdCQUEwQkMsa0JBQW9CQyxLQUFLQyxNQUFNQyxLQUFLQyxNQUFRLEtBQ2hIUCxTQUFTUSxHQUFHLGNBQWNDLFVBQ3RCLE1BQU0sU0FBRUMsR0FBYUMsU0FBU0MsU0FBVUMsRUFBZSxDQUNuREMsY0FBZSwrREFDZkMsZUFBZ0JaLG1CQUNqQmEsUUFBa0JoQixTQUFTaUIsV0FBVyxhQUFjQyxFQUFZUCxTQUFTUSxjQUFjLDJDQUMxRixJQUFJQyxFQUFZLEVBQ2hCLElBQUssTUFBTUMsS0FBV1YsU0FBU1csaUJBQWlCLDRFQUE2RSxDQUN6SCxNQUFNQyxFQUFPRixFQUFRRyxZQUNoQkMsUUFBUSxnQ0FBaUMsS0FDekNBLFFBQVEsOEJBQStCLElBQzVDTCxHQUFhRyxFQUFLRyxNQUFNLEtBQUtDLE1BQU0sRUFBR0osRUFBS0csTUFBTSxLQUFLRSxRQUFRQSxNQUNsRSxDQUMrQixNQUEzQmxCLEVBQVNnQixNQUFNLEtBQUssSUFDRyxZQUFuQmYsU0FBU2tCLE9BQXVCYixFQUNoQ0gsRUFBYWlCLFFBQVVuQixTQUFTUSxjQUFjLGFBQWFULEVBQVNnQixNQUFNLEtBQUssU0FBU0YsWUFHeEZYLEVBQWFpQixRQUFVZCxFQUNqQkwsU0FBU2tCLE1BQ1Qsa0NBRVZoQixFQUFha0IsTUFBUWIsRUFDZixzQkFDQSxVQUFVYyxPQUFPckIsU0FBU1csaUJBQWlCLHFDQUFxQ00scUJBQXFCUixXQUMzR1AsRUFBYW9CLGNBQWdCZixFQUFZLDREQUE4RCxPQUd2R0wsRUFBYWlCLFFBQVUseUJBQ3ZCakIsRUFBYWtCLE1BQVEsK0JBRXpCL0IsU0FBU2tDLFlBQVlyQixFQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcHJlc2VuY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcHJlc2VuY2UgPSBuZXcgUHJlc2VuY2UoeyBjbGllbnRJZDogXCIxMTAyOTM1Nzc4NTcwNTQ3MjgyXCIgfSksIGJyb3dzaW5nVGltZXN0YW1wID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCk7XG5wcmVzZW5jZS5vbihcIlVwZGF0ZURhdGFcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHsgcGF0aG5hbWUgfSA9IGRvY3VtZW50LmxvY2F0aW9uLCBwcmVzZW5jZURhdGEgPSB7XG4gICAgICAgIGxhcmdlSW1hZ2VLZXk6IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9DL0NoYXRHUFQvYXNzZXRzL2xvZ28ucG5nXCIsXG4gICAgICAgIHN0YXJ0VGltZXN0YW1wOiBicm93c2luZ1RpbWVzdGFtcCxcbiAgICB9LCBzaG93VGl0bGUgPSBhd2FpdCBwcmVzZW5jZS5nZXRTZXR0aW5nKFwic2hvd1RpdGxlXCIpLCBpc1RhbGtpbmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbY2xhc3MqPVwidGV4dC0yeGxcIl0gPiBzcGFuOm50aC1jaGlsZCgzKScpO1xuICAgIGxldCB3b3JkQ291bnQgPSAwO1xuICAgIGZvciAoY29uc3QgZWxlbWVudCBvZiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1tZXNzYWdlLWF1dGhvci1yb2xlPVwidXNlclwiXSxbZGF0YS1tZXNzYWdlLWF1dGhvci1yb2xlPVwiYXNzaXN0YW50XCJdJykpIHtcbiAgICAgICAgY29uc3QgdGV4dCA9IGVsZW1lbnQudGV4dENvbnRlbnRcbiAgICAgICAgICAgIC5yZXBsYWNlKC8oLCApfCgsXFxuKXwoLCl8KFsuXSApfChbLl0pL2dtLCBcIiBcIilcbiAgICAgICAgICAgIC5yZXBsYWNlKC8oWzAtOV0qKXwoXFwvKXwoJyl8KCwpfCggKS9nbSwgXCJcIik7XG4gICAgICAgIHdvcmRDb3VudCArPSB0ZXh0LnNwbGl0KFwiIFwiKS5zbGljZSgyLCB0ZXh0LnNwbGl0KFwiIFwiKS5sZW5ndGgpLmxlbmd0aDtcbiAgICB9XG4gICAgaWYgKHBhdGhuYW1lLnNwbGl0KFwiL1wiKVsxXSA9PT0gXCJjXCIpIHtcbiAgICAgICAgaWYgKGRvY3VtZW50LnRpdGxlID09PSBcIkNoYXRHUFRcIiAmJiBzaG93VGl0bGUpIHtcbiAgICAgICAgICAgIHByZXNlbmNlRGF0YS5kZXRhaWxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgW2hyZWY9XCIvYy8ke3BhdGhuYW1lLnNwbGl0KFwiL1wiKVsyXX1cIl1gKT8udGV4dENvbnRlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwcmVzZW5jZURhdGEuZGV0YWlscyA9IHNob3dUaXRsZVxuICAgICAgICAgICAgICAgID8gZG9jdW1lbnQudGl0bGVcbiAgICAgICAgICAgICAgICA6IFwiVGFsa2luZyB3aXRoIEFJIGFib3V0IHNvbWV0aGluZ1wiO1xuICAgICAgICB9XG4gICAgICAgIHByZXNlbmNlRGF0YS5zdGF0ZSA9IGlzVGFsa2luZ1xuICAgICAgICAgICAgPyBcIkFJIGlzIHJlc3BvbmRpbmcuLi5cIlxuICAgICAgICAgICAgOiBgYXNrZWQgKCR7TnVtYmVyKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLW1lc3NhZ2UtYXV0aG9yLXJvbGU9XCJ1c2VyXCJdJykubGVuZ3RoKX0pIHRpbWVzIHwgKCR7d29yZENvdW50fSkgd29yZHNgO1xuICAgICAgICBwcmVzZW5jZURhdGEuc21hbGxJbWFnZUtleSA9IGlzVGFsa2luZyA/IFwiaHR0cHM6Ly9jZG4ucmNkLmdnL1ByZU1pRC93ZWJzaXRlcy9DL0NoYXRHUFQvYXNzZXRzLzAucG5nXCIgOiBudWxsO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcHJlc2VuY2VEYXRhLmRldGFpbHMgPSBcIlN0YXJ0IG5ldyBjb252ZXJzYXRpb25cIjtcbiAgICAgICAgcHJlc2VuY2VEYXRhLnN0YXRlID0gXCJUaGlua2luZyBvZiBhIG5ldyBwcm9tcHQuLi5cIjtcbiAgICB9XG4gICAgcHJlc2VuY2Uuc2V0QWN0aXZpdHkocHJlc2VuY2VEYXRhKTtcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY0hKbGMyVnVZMlV1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SndjbVZ6Wlc1alpTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGRkJRVkVzUTBGQlF5eEZRVUZGTEZGQlFWRXNSVUZCUlN4eFFrRkJjVUlzUlVGQlJTeERRVUZETEVWQlEycEZMR2xDUVVGcFFpeEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXl4RFFVRkRPMEZCVDI1RUxGRkJRVkVzUTBGQlF5eEZRVUZGTEVOQlFVTXNXVUZCV1N4RlFVRkZMRXRCUVVzc1NVRkJTU3hGUVVGRk8wbEJRM0JETEUxQlFVMHNSVUZCUlN4UlFVRlJMRVZCUVVVc1IwRkJSeXhSUVVGUkxFTkJRVU1zVVVGQlVTeEZRVU55UXl4WlFVRlpMRWRCUVdsQ08xRkJRelZDTEdGQlFXRXNaMFZCUVdFN1VVRkRNVUlzWTBGQll5eEZRVUZGTEdsQ1FVRnBRanRMUVVOcVF5eEZRVU5FTEZOQlFWTXNSMEZCUnl4TlFVRk5MRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVlVzVjBGQlZ5eERRVUZETEVWQlF6TkVMRk5CUVZNc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVU5xUXl4NVEwRkJlVU1zUTBGRGVrTXNRMEZCUXp0SlFVVklMRWxCUVVrc1UwRkJVeXhIUVVGSExFTkJRVU1zUTBGQlF6dEpRVU5zUWl4TFFVRkxMRTFCUVUwc1QwRkJUeXhKUVVGSkxGRkJRVkVzUTBGQlF5eG5Ra0ZCWjBJc1EwRkRPVU1zTUVWQlFUQkZMRU5CUXpGRkxFVkJRVVU3VVVGRFJpeE5RVUZOTEVsQlFVa3NSMEZCUnl4UFFVRlBMRU5CUVVNc1YwRkJWenRoUVVNNVFpeFBRVUZQTEVOQlFVTXNLMEpCUVN0Q0xFVkJRVVVzUjBGQlJ5eERRVUZETzJGQlF6ZERMRTlCUVU4c1EwRkJReXcyUWtGQk5rSXNSVUZCUlN4RlFVRkZMRU5CUVVNc1EwRkJRenRSUVVNM1F5eFRRVUZUTEVsQlFVa3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RlFVRkZMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1RVRkJUU3hEUVVGRE8wdEJRM0pGTzBsQlJVUXNTVUZCU1N4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4TFFVRkxMRWRCUVVjc1JVRkJSVHRSUVVWdVF5eEpRVUZKTEZGQlFWRXNRMEZCUXl4TFFVRkxMRXRCUVVzc1UwRkJVeXhKUVVGSkxGTkJRVk1zUlVGQlJUdFpRVU01UXl4WlFVRlpMRU5CUVVNc1QwRkJUeXhIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlF6VkRMR0ZCUVdFc1VVRkJVU3hEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVOMlF5eEZRVUZGTEZkQlFWY3NRMEZCUXp0VFFVTm1PMkZCUVUwN1dVRkRUaXhaUVVGWkxFTkJRVU1zVDBGQlR5eEhRVUZITEZOQlFWTTdaMEpCUXk5Q0xFTkJRVU1zUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3p0blFrRkRhRUlzUTBGQlF5eERRVUZETEdsRFFVRnBReXhEUVVGRE8xTkJRM0pETzFGQlEwUXNXVUZCV1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhUUVVGVE8xbEJRemRDTEVOQlFVTXNRMEZCUXl4eFFrRkJjVUk3V1VGRGRrSXNRMEZCUXl4RFFVRkRMRlZCUVZVc1RVRkJUU3hEUVVOb1FpeFJRVUZSTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zYlVOQlFXMURMRU5CUVVNc1EwRkJReXhOUVVGTkxFTkJRM0JGTEdOQlFXTXNVMEZCVXl4VFFVRlRMRU5CUVVNN1VVRkRja01zV1VGQldTeERRVUZETEdGQlFXRXNSMEZCUnl4VFFVRlRMRU5CUVVNc1EwRkJReXcyUkVGQlowSXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJRenRMUVVNdlJEdFRRVUZOTzFGQlEwNHNXVUZCV1N4RFFVRkRMRTlCUVU4c1IwRkJSeXgzUWtGQmQwSXNRMEZCUXp0UlFVTm9SQ3haUVVGWkxFTkJRVU1zUzBGQlN5eEhRVUZITERaQ1FVRTJRaXhEUVVGRE8wdEJRMjVFTzBsQlJVUXNVVUZCVVN4RFFVRkRMRmRCUVZjc1EwRkJReXhaUVVGWkxFTkJRVU1zUTBGQlF6dEJRVU53UXl4RFFVRkRMRU5CUVVNc1EwRkJReUo5Il0sIm5hbWVzIjpbInByZXNlbmNlIiwiUHJlc2VuY2UiLCJjbGllbnRJZCIsImJyb3dzaW5nVGltZXN0YW1wIiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsIm5vdyIsIm9uIiwiYXN5bmMiLCJwYXRobmFtZSIsImRvY3VtZW50IiwibG9jYXRpb24iLCJwcmVzZW5jZURhdGEiLCJsYXJnZUltYWdlS2V5Iiwic3RhcnRUaW1lc3RhbXAiLCJzaG93VGl0bGUiLCJnZXRTZXR0aW5nIiwiaXNUYWxraW5nIiwicXVlcnlTZWxlY3RvciIsIndvcmRDb3VudCIsImVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwidGV4dCIsInRleHRDb250ZW50IiwicmVwbGFjZSIsInNwbGl0Iiwic2xpY2UiLCJsZW5ndGgiLCJ0aXRsZSIsImRldGFpbHMiLCJzdGF0ZSIsIk51bWJlciIsInNtYWxsSW1hZ2VLZXkiLCJzZXRBY3Rpdml0eSJdLCJzb3VyY2VSb290IjoiIn0=
undefined;