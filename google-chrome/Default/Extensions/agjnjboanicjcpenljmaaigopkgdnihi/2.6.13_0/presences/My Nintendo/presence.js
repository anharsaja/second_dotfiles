var __webpack_exports__={};const presence=new Presence({clientId:"680498892651233310"});async function getStrings(){return presence.getStrings({browsing:"general.browsing",reading:"general.reading"},await presence.getSetting("lang").catch((()=>"en")))}let strings,oldLang=null;presence.on("UpdateData",(async()=>{const e=window.location.pathname.split("/").slice(1),t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/My%20Nintendo/assets/logo.png"},n=await presence.getSetting("lang").catch((()=>"en"));switch(oldLang=n,strings&&oldLang===n||(strings=await getStrings()),e[0]){case"reward_categories":t.details=document.querySelector("h1")?.textContent??document.title,t.smallImageText=strings.browsing,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.length>1&&(t.state=document.querySelector(".PageSubHeader_title")?.textContent);break;case"rewards":t.details=document.querySelector("h1")?.textContent??document.title,t.smallImageText=strings.browsing,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.length>1&&(t.state=document.querySelector(".RewardHeader_title").textContent);break;case"missions":case"getting_started":case"about_point":case"about_gold_point":t.details=document.querySelector("h1")?.textContent??document.title,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",t.smallImageText="reading";break;case"point":if(e.length<2)return presence.setActivity();t.details=document.querySelector("h1").textContent,t.state=document.querySelector("h2")?.textContent;break;case"news":t.details=document.querySelector("h1")?.textContent??document.title,t.smallImageText=strings.reading,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.length>1?t.state=document.querySelector(".NewsDetail_title")?.textContent:t.state=document.querySelector(".PageSubHeader_title")?.textContent;break;case"serial_number":t.details=document.querySelector("h1")?.textContent??document.title;break;default:return presence.setActivity()}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;