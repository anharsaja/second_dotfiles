var __webpack_exports__={};const presence=new Presence({clientId:"1200517025383075840"}),browsingTimestamp=Math.floor(Date.now()/1e3),{pathname}=document.location;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/H/HTB%20Academy/assets/logo.jpg",startTimestamp:browsingTimestamp};if("/"===pathname||"/login"===pathname)e.details="Breaching into the Academy";else if(pathname.includes("/dashboard"))e.details="Browsing the dashboard",e.state=`Off: ${document.querySelector(".red .progress").textContent} Def: ${document.querySelector(".blue .progress").textContent} Gen: ${document.querySelector(".green .progress").textContent}`;else if(pathname.includes("/exams"))e.details="Browsing the exams";else if(pathname.includes("/paths"))e.details="Browsing paths";else if(pathname.includes("/modules"))e.details="Browsing modules";else if(pathname.includes("/section")){let t;t=document.querySelector(".iterminal")?document.querySelector("#layout-wrapper > div.main-content > div > div:nth-child(2) > div > div > h4"):document.querySelector("#layout-wrapper > div.main-content > div > div:nth-child(1) > div > div > h4"),e.details=`Reading Module: ${t.textContent}`,e.state=`Section: ${document.querySelector(".training-module h1")?.textContent}`}else pathname.includes("/details")?(e.details="Reading details about module:",e.state=`"${document.querySelector(".page-title-box .page-title").textContent}"`):pathname.includes("/my-certificates")?e.details="Looking at their certificates":pathname.includes("/my-badges")&&(e.details="Looking at their badges");presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;