var __webpack_exports__={};const presence=new Presence({clientId:"660519861742731264"});let oldLang,newLang,strings,timestamp;async function getStrings(e){return presence.getStrings({play:"general.playing",pause:"general.paused",search:"general.searching",browsing:"general.browsing"},e)}presence.on("UpdateData",(async()=>{const e=window.location.pathname.split("/").slice(1),t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/R/RadioMe/assets/logo.png"};switch(oldLang=newLang,newLang=await presence.getSetting("lang").catch((()=>"en")),strings&&oldLang===newLang||(strings=await getStrings(newLang)),e[0]){case"search":t.details=new URLSearchParams(window.location.search).get("term"),t.state=document.querySelector("h1").textContent,t.smallImageText=strings.search,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png";break;case"c":t.details=document.title;break;default:{const a=[...document.querySelectorAll(".region-btn")].find((e=>e.classList.contains("active"))).pathname?.slice(1),n=document.querySelector(".song-name")?.textContent;a&&e[0]===a?t.details=document.querySelector("h1")?.textContent??document.title:n&&(document.querySelector(".playbutton-global-playing")?(timestamp||=Date.now(),t.details=n,t.largeImageKey=document.querySelector("#player-station-logo-link").children[0].src,t.smallImageText=strings.play,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",t.startTimestamp=timestamp):(timestamp=0,t.details=n,t.largeImageKey=document.querySelector("#player-station-logo-link").children[0].src,t.smallImageText=strings.pause,t.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png"));break}}presence.setActivity(t)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;