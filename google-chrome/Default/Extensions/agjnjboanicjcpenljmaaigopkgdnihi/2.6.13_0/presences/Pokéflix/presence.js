var __webpack_exports__={};const presence=new Presence({clientId:"1055612773419196476"});async function getStrings(){return presence.getStrings({viewHome:"general.viewHome",viewing:"general.viewing",search:"general.search",searchFor:"general.searchFor",play:"general.watchingVid",pause:"general.paused",searchSomething:"general.searchSomething",watchVideoButton:"general.buttonWatchVideo"},await presence.getSetting("lang").catch((()=>"en")))}let strings,video={duration:0,currentTime:0,paused:!0};function textContent(e){return document.querySelector(e)?.textContent?.trim()}function capitalizeFirstLetter(e){return e.trim().charAt(0).toUpperCase()+e.trim().slice(1)}presence.on("iFrameData",(e=>{video=e})),presence.on("UpdateData",(async()=>{const e={details:"Somewhere on the site",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Pok%C3%A9flix/assets/logo.png"},[t,s,n]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("time"),presence.getSetting("buttons")]),{pathname:r,href:a}=document.location,i=r.split("/")[1];switch(strings||(strings=await getStrings()),i){case"":e.details=strings.viewHome;break;case"browse":case"upcoming":case"movies":case"specials":e.details=t?strings.searchSomething:strings.searchFor,e.state="movies"===i||"specials"===i?capitalizeFirstLetter(i):textContent(".container h2"),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText=strings.search;break;case"v":case"video":e.details=t?strings.play:`${strings.viewing} ${document.querySelector(".fluid-container h2").firstChild?.textContent?.trim()}`,e.state=textContent(".fluid-container h2 p"),!t&&video.currentTime>0&&(e.smallImageKey=video.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=video.paused?strings.pause:strings.play,e.buttons=[{label:strings.watchVideoButton,url:a}],video.paused||!s?(delete e.startTimestamp,delete e.endTimestamp):[e.startTimestamp,e.endTimestamp]=presence.getTimestamps(video.currentTime,video.duration))}t&&delete e.state,!t&&n||delete e.buttons,presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;