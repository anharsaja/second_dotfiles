"use strict";var __webpack_exports__={};function findNearestAboveElement(e,t){let a=e;for(;a;){if(a.matches(t))return a;a=a.previousElementSibling}return null}const imageCache={};async function squareImage(e){const{src:t,width:a,height:i}=e;if(imageCache[t])return imageCache[t];const s=document.createElement("canvas"),n=s.getContext("2d");if(s.width=a,s.height=i,a>i&&(s.height=a),i>a&&(s.width=i),a===i)return imageCache[t]=Promise.resolve(t),t;n.clearRect(0,0,s.width,s.height),n.drawImage(e,(s.width-a)/2,(s.height-i)/2);const o=new Promise((e=>{s.toBlob((t=>{e(t)}))}));return imageCache[t]=o,o}const strategies=new Set(["Sakigiri","Suji","Kabe","Betaori","Kawa","Sashikomi","Defense","Tile_efficiency","Atozuke","Yaku_compatibility","Damaten","Kan","Machi","Riichi_strategy","Shanten","Tenpai","Ukeire","What_would_you_discard","Dora"]),yaku=new Set(["Menzenchin_tsumohou","Riichi","Ippatsu","Pinfu","Iipeikou","Haitei raoyue and houtei raoyui","Rinshan_kaihou","Chankan","Tanyao","Yakuhai","Daburu_riichi","Chanta","Sanshouku_doujun","Ikkitsuukan","Toitoihou","Sanankou","Sanshoku_doukou","Sankantsu","Chiitoitsu","Honroutou","Shousangen","Honiisou","Junchantaiyaochuu","Ryanpeikou","Chiniisou","Kazoe_yakuman","Kokushi_musou","Suuankou","Daisangen","Suushiihou","Tsuuiisou","Chinroutou","Ryuuiisou","Chuuren_poutou","Suukantsu","Tenhou_and_chiihou","Nagashi_mangan"]),games=new Set(["Riichi_City","Majsoul","Sega_MJ","Tenhou.net"]),SLIDESHOW_TIMEOUT=6e3;async function specialPageHandler(e,t){const{pathname:a,href:i,search:s}=document.location,n=new URLSearchParams(s),o=document.querySelector(".mw-page-title-main");let r=a.split("/").find(Boolean),l=!1;if("index.php"===r&&(r=n.get("title")),n.has("search"))e.details="Searching for a page",e.state=document.querySelector("#searchText > input")?.value;else if(n.has("action")||n.has("veaction"))switch(n.get("action")??n.get("veaction")){case"edit":e.details="Editing a page",e.state=document.querySelector("#firstHeadingTitle")??o;break;case"history":e.details="Viewing the revision history of a page",e.state=o}else{switch(!0){case r.startsWith("Talk:"):e.details=`Viewing the talk page for '${o.textContent}'`;break;case r.startsWith("User:"):e.details="Viewing a user page",e.state=o,e.buttons=[{label:"View User Page",url:i}];break;case r.startsWith("User_talk:"):e.details="Viewing a user's talk page",e.state=o;break;case r.startsWith("File:"):e.details="Viewing a file",e.state=o,e.smallImageKey=await squareImage(document.querySelector("#file img"));break;case r.startsWith("Category:"):e.details="Viewing a category",e.state=o,e.buttons=[{label:"View Category",url:i}];break;case"Special:Upload"===r:e.details="Uploading a file";break;case"Special:Contributions"===r:e.details="Viewing a user's contributions",e.state=document.querySelector(".mw-contributions-user-tools > a")}switch(r){case"Jikaze":e.details="Reading about seat winds";break;case"List_of_Mahjong_Soul_characters":{const a=document.querySelectorAll("h2 + ul[style] > li");e.details="Viewing Mahjong Soul characters",l=!0;for(const i of a){const a={...e},s=i.querySelector("img"),n=i.querySelector("p > b");a.smallImageKey=await squareImage(s),a.smallImageText=n.textContent,a.state=n.textContent,t.addSlide(n.textContent,a,6e3)}break}case"List_of_mahjong_video_games":e.details="Viewing the list of mahjong video games";break;case"List_of_Riichi_City_characters":{const a=document.querySelectorAll(".riichi-city-characters > li");e.details="Viewing Riichi City characters",l=!0;for(const i of a){const a={...e},s=i.querySelector("img"),n=i.querySelector("p > b");a.smallImageKey=await squareImage(s),a.smallImageText=n.textContent,a.state=n.textContent,t.addSlide(n.textContent,a,6e3)}break}case"List_of_yaku":{const a=document.querySelectorAll(".content-table-wrapper");e.details="Viewing list of yaku",l=!0;for(const i of a){const a={...e},s=i.querySelector("a"),n=i.querySelector("dd dl"),o=i.querySelector("dd + dd"),r=i.querySelector("td:last-child"),l=findNearestAboveElement(i,"h2").querySelector(".mw-headline");i.querySelector(".wikitable")&&(a.state=`${s.textContent} (${n.textContent}) - ${l.textContent}`,a.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/question.png",a.smallImageText=`${o.textContent} - ${r.textContent}`,a.buttons=[{label:"View Yaku",url:s}],t.addSlide(s.textContent,a,6e3))}break}case"Local_yaku":e.details="Viewing local yaku";break;case"Mahjong_equipment":{const a=document.querySelectorAll(".content-table-wrapper");e.details="Reading about the mahjong equipment",l=!0;for(const i of a){const a=i.previousElementSibling.querySelector(".mw-headline"),s=i.querySelector("tbody > tr").querySelectorAll("td img"),n=i.querySelector("tbody > tr + tr").querySelectorAll("td");for(const[i,o]of s.entries()){const s={...e};s.smallImageKey=await squareImage(o),s.smallImageText=n[i],s.state=a,t.addSlide(n[i].textContent,s,6e3)}}break}case"Mentsu":e.details="Reading about tile groups";break;case"Rules_overview":e.details="Reading the rules"}for(const t of strategies)if(r===t){e.details="Reading about a strategy",e.state=o,e.buttons=[{label:"View Strategy",url:i}];break}for(const t of yaku)if(r===t){e.details="Reading about a yaku",e.state=o,e.buttons=[{label:"View Yaku",url:i}];break}for(const t of games)if(r===t){e.details="Reading about a mahjong game",e.state=o,e.buttons=[{label:"View Game",url:i}];break}e.details||(e.details="Viewing a page",e.state=o)}return l}const staticPages={"/Main_Page":{details:"Viewing the main page"},"/Special:RecentChanges":{details:"Viewing recent changes"},"/Special:SpecialPages":{details:"Viewing special pages"},"/Special:Preferences":{details:"Managing their preferences"},"/Special:Watchlist":{details:"Viewing their watchlist"}},presence=new Presence({clientId:"1221269583567261786"}),slideshow=presence.createSlideshow(),browsingTimestamp=Math.floor(Date.now()/1e3);let oldPage;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/J/Japanese%20Mahjong%20Wiki/assets/logo.png",startTimestamp:browsingTimestamp,name:"Japanese Mahjong Wiki"},{pathname:t}=document.location;oldPage!==t&&(oldPage=t,slideshow.deleteAllSlides());let a=!1,i=!1;for(const[i,s]of Object.entries(staticPages))if(i===t){a=!0,Object.assign(e,s);break}a||(i=await specialPageHandler(e,slideshow)),i?presence.setActivity(slideshow):e.details&&presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;