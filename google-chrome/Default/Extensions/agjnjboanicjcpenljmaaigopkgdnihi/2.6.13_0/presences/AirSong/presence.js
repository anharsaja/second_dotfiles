var __webpack_exports__={};const presence=new Presence({clientId:"936448491373359105"});presence.on("UpdateData",(async()=>{if(document.querySelector("a.as-logo")){const[e,t,a]=await Promise.all([presence.getSetting("songDetail"),presence.getSetting("songState"),presence.getSetting("time")]),r=document.querySelector("#as-player-title").textContent,s=document.querySelector("#as-player-artist").textContent.split(" - ",1)[0],[,n]=document.querySelector("#as-player-artist").textContent.split(/(?: - )(.+)/),c=document.querySelector("div.mejs-horizontal-volume-current").style.width.replace("px",""),l=presence.timestampFromFormat(document.querySelector("span.mejs-currenttime").textContent),o={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/A/AirSong/assets/logo.png"},p=document.querySelector("#as-player-play").className.includes("fa-play");o.details=e.replace("%title%",r).replace("%artist%",s).replace("%album%",n),o.state=t.replace("%title%",r).replace("%artist%",s).replace("%album%",n),p||1!==a?p||2!==a||(o.startTimestamp=Date.now()/1e3-l):[o.startTimestamp,o.endTimestamp]=presence.getTimestamps(presence.timestampFromFormat(document.querySelector("span.mejs-duration").textContent),l),o.smallImageKey=p?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",o.smallImageText=p?"Paused":`Playing at ${2*c}%`,presence.setActivity(o)}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;