var __webpack_exports__={};const presence=new Presence({clientId:"682218734391394338"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/G/Gitea/assets/logo.png",startTimestamp:browsingTimestamp};switch(document.location.pathname){case"/":e.details="Viewing the front page...";break;case"/user/login":case"/user/login/openid":e.details="Logging in...";break;case"/user/sign_up":e.details="Signing up...";break;case"/issues":e.details="Viewing their Issues...";break;case"/pulls":e.details="Viewing their Pull Requests...";break;case"/milestones":e.details="Viewing their Milestones...";break;case"/explore/repos":e.details="Exploring Repositories...";break;case"/explore/users":e.details="Exploring Users...";break;case"/explore/organizations":e.details="Exploring Organizations...";break;default:if(document.location.pathname.startsWith("/user/settings"))e.details="Changing their Settings...";else if(document.location.pathname.startsWith("/notifications"))e.details="Checking their Notifications...";else if(document.location.pathname.startsWith("/repo/create"))e.details="Creating a new Repository...";else if(document.location.pathname.startsWith("/repo/migrate"))e.details="Creating a new Migration Repository...";else if(document.location.pathname.startsWith("/org/create"))e.details="Creating a new Organization...";else if(document.querySelector(".user.profile")){e.details=`Viewing Profile: ${document.querySelectorAll(".username")[0].textContent}`,document.querySelectorAll(".username")[0].parentElement.firstElementChild&&(e.details+=` (${document.querySelectorAll(".username")[0].parentElement.firstElementChild.textContent})`);const t=new URLSearchParams(window.location.search).get("tab");if(t)switch(t){case"activity":e.state="Tab: Public Activity";break;case"stars":e.state="Tab: Starred Repositories";break;case"following":e.state="Tab: Following";break;case"followers":e.state="Tab: Followers"}else e.state="Tab: Repositories"}else if(document.querySelector("#org-info")){const t=document.querySelector("#org-info").querySelector(".ui.header").textContent.replace(/\s*(?=(shaare))/gm,"").replace(/(?<=(shaare))\s*/gm,""),[,a]=document.location.pathname.split("/");e.details=t===a?`Viewing Organization: ${a}`:`Viewing Organization: ${t} (${a})`}else document.querySelector(".repository")&&(e.details=`Viewing Repository: ${document.location.pathname.split("/")[1]}/${document.location.pathname.split("/")[2]}`,"issues"===document.location.pathname.split("/")[3]?document.querySelector("#issue-title")?e.state=`Viewing an Issue... (${document.querySelector(".index").textContent})`:e.state="Viewing Issues...":"pulls"===document.location.pathname.split("/")[3]?document.querySelector("#issue-title")?e.state=`Viewing a Pull Request... (${document.querySelector(".index").textContent})`:e.state="Viewing Pull Requests...":"releases"===document.location.pathname.split("/")[3]?e.state="Viewing Releases...":"wiki"===document.location.pathname.split("/")[3]?(e.state="Viewing Wiki...",document.querySelector(".basic.small.button")&&(e.state+=` (${document.querySelector(".basic.small.button").firstElementChild.textContent.match(/<strong>.*<\/strong>/m)[0].replace(/(<strong>|<\/strong>)/gm,"")})`)):"activity"===document.location.pathname.split("/")[3]?e.state="Viewing Activity...":"src"===document.location.pathname.split("/")[3]?e.state=`Viewing Files... (${document.querySelectorAll(".octicon-git-branch")[1].parentNode.lastChild.textContent} Branch)`:"commits"===document.location.pathname.split("/")[3]?e.state=`Viewing Commits... (${document.querySelectorAll(".octicon-git-branch")[1].parentNode.lastChild.textContent} Branch)`:"branches"===document.location.pathname.split("/")[3]?e.state="Viewing Branches":"forks"===document.location.pathname.split("/")[3]?e.state="Viewing Forks":"stars"===document.location.pathname.split("/")[3]?e.state="Viewing Stargazers":"watchers"===document.location.pathname.split("/")[3]?e.state="Viewing Watchers":"labels"===document.location.pathname.split("/")[3]?e.state="Viewing Labels":document.location.pathname.split("/")[3]||(e.state="Viewing Files... (master Branch)"))}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;