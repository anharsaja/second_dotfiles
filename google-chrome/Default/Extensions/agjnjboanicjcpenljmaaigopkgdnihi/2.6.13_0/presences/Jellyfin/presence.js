var __webpack_exports__={};const JELLYFIN_URL="jellyfin.org",presenceData={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/J/Jellyfin/assets/logo.png",startTimestamp:Math.floor(Date.now()/1e3)};let ApiClient,presence,wasLogin=!1;function jellyfinBasenameUrl(){const{pathname:e}=location;return`${location.origin}${e.replace(e.split("/").slice(-2).join("/"),"")}`}function mediaPrimaryImage(e){let a;switch(e.Type){case"Episode":a=e.SeriesId;break;case"Audio":a=e.AlbumId;break;default:a=e.Id}return`${jellyfinBasenameUrl()}Items/${a}/Images/Primary?fillHeight=256&fillWidth=256`}async function handleAudioPlayback(){const e=/\/Audio\/(\w+)\/universal/.exec(document.querySelector("audio").src);e?await setPresenceByMediaId(e[1]):presence.error("Could not obtain audio itemId")}function handleOfficialWebsite(){switch(presenceData.details="At jellyfin.org",location.pathname){case"/":presenceData.state="On landing page";break;case"/posts/":presenceData.state="Reading the latest posts",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png";break;case"/clients/":presenceData.state="Checking clients",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png";break;case"/downloads/":presenceData.state="On downloads",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/downloading.png";break;case"/contribute/":presenceData.state="Learning how to contribute";break;case"/contact/":presenceData.state="On contact page";break;default:0===location.pathname.indexOf("/docs/")&&(presenceData.state=`Reading the docs: ${document.title.split("|")[0].trim()}`,presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png")}}function getUserId(){try{return ApiClient._currentUser.Id}catch(e){const a=JSON.parse(localStorage.getItem("jellyfin_credentials")).Servers;return(1===a.length?a[0]:a.find((e=>e.Id===new URLSearchParams(location.hash.split("?")[1]).get("serverId")))).UserId}}const mediaInfoCache=new Map;async function obtainMediaInfo(e){if(mediaInfoCache.has(e))return mediaInfoCache.get(e);const a=await fetch(`${jellyfinBasenameUrl()}Users/${getUserId()}/Items/${e}`,{credentials:"include",headers:{"x-emby-authorization":`MediaBrowser Client="${ApiClient._appName}",Device="${ApiClient._deviceName}",DeviceId="${ApiClient._deviceId}",Version="${ApiClient._appVersion}",Token="${ApiClient._serverInfo.AccessToken}"`}}),t=await a.json();return mediaInfoCache.set(e,t),mediaInfoCache.get(e)}const searchMediaCache=new Map,uploadedMediaCache=new Map;async function searchMedia(e){if(searchMediaCache.has(e))return searchMediaCache.get(e);/-[ ]S[0-9]+:E[0-9]+[ ]-/.test(e)&&(e=e.split(" - ").pop()),e=e.replace(/\([0-9]{4}\)/,"").trim();const a=await fetch(`${jellyfinBasenameUrl()}Users/${getUserId()}/Items/?searchTerm=${e}&IncludePeople=false&IncludeMedia=true&IncludeGenres=false&IncludeStudios=false&IncludeArtists=false&IncludeItemTypes=Movie,Episode&Limit=3&Fields=PrimaryImageAspectRatio%2CCanDelete%2CBasicSyncInfo%2CMediaSourceCount&Recursive=true&EnableTotalRecordCount=false&ImageTypeLimit=1`,{credentials:"include",headers:{"x-emby-authorization":`MediaBrowser Client="${ApiClient._appName}",Device="${ApiClient._deviceName}",DeviceId="${ApiClient._deviceId}",Version="${ApiClient._appVersion}",Token="${ApiClient._serverInfo.AccessToken}"`}}),t=await a.json();return searchMediaCache.set(e,t.Items),searchMediaCache.get(e)}async function handleVideoPlayback(){if(!document.querySelector("#videoOsdPage"))return;const[e]=await searchMedia(document.querySelector("h3.pageTitle").textContent);e?await setPresenceByMediaId(e.Id):(presenceData.details="Watching:",presenceData.state="Unknown Content",presenceData.state||delete presenceData.state)}async function handleRemotePlayback(){const[,e]=/\/Items\/(\w+)\/Images/.exec(document.querySelector(".nowPlayingImage").style.backgroundImage);await setPresenceByMediaId(e)}async function handleItemDetails(){const e=await obtainMediaInfo(new URLSearchParams(location.hash.split("?")[1]).get("id"));if(e){if("string"==typeof e)return;switch(presenceData.details=`Browsing details of: ${e.Name}`,e.Type){case"Movie":presenceData.state=`${e.Type} ─ ${e.OriginalTitle} (${e.ProductionYear})`;break;case"Series":presenceData.state=`${e.Type} ─ (${e.Status})`;break;case"Season":presenceData.state=`${e.Type} ─ ${e.SeriesName}`;break;case"Episode":presenceData.state=`${e.Type} ─ ${e.SeriesName} - ${e.SeasonName}`;break;case"Person":{let a="Description not available";e.Overview&&(a=e.Overview.substring(0,40)+(e.Overview.length>40?"...":"")),presenceData.state=`${e.Type} ─ ${a}`;break}case"MusicAlbum":presenceData.state=`${e.Type} ─ ${e.RecursiveItemCount} songs`;break;case"MusicArtist":case"TvChannel":presenceData.state=`${e.Type} ─ No further information available`;break;default:presenceData.state="No further information available"}await presence.getSetting("showThumbnails")&&(presenceData.largeImageKey=mediaPrimaryImage(e))}else presenceData.details="Browsing details of an item",presenceData.state="Could not get item details"}async function setPresenceByMediaId(e){const a=await obtainMediaInfo(e);let t,s;switch(a.Type){case"Audio":presenceData.type=2,t=`Listening to ${a.Name??"Unknown title"}`,s=`By ${a.AlbumArtist??"Unknown artist"}`;break;case"Movie":case"Series":default:t=`Watching ${a.Type}`,s=a.Name;break;case"Episode":t=`Watching: ${a.SeriesName}`,s=`${/S[0-9]+:E[0-9]+/.exec(document.querySelector(".pageTitle").textContent)} - ${a.Name}`;break;case"TvChannel":presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/live.png",presenceData.smallImageText="Live TV"}if(2!==presenceData.type&&(presenceData.type=3),await presence.getSetting("showThumbnails")&&(presenceData.largeImageKey=mediaPrimaryImage(a)),"TvChannel"!==a.Type){const e=document.querySelector("audio, video");(e?e.paused:document.querySelector(".nowPlayingBar .playPauseButton span").classList.contains("play_arrow"))?(presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",presenceData.smallImageText="Paused",delete presenceData.endTimestamp):(presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",presenceData.smallImageText="Playing",e&&await presence.getSetting("showMediaTimestamps")&&([presenceData.startTimestamp,presenceData.endTimestamp]=presence.getTimestampsfromMedia(e)))}presenceData.details=t,presenceData.state=s,presenceData.state||delete presenceData.state}function sleep(e){return new Promise((a=>{setTimeout(a,e)}))}async function loggedIn(){let e;do{await sleep(125),e=await presence.getPageletiable("ApiClient")}while(!e._serverInfo.AccessToken);ApiClient=e}async function handleWebClient(){const e=document.body.querySelector("audio"),a=document.querySelector(".nowPlayingBar");if(e&&e.classList.contains("mediaPlayerAudio")&&e.src)return void await handleAudioPlayback();if(a&&!a.classList.contains("nowPlayingBar-hidden"))return void await handleRemotePlayback();presenceData.details="At web client";const t=location.hash.split("?")[0].substring(2);switch("login.html"===t?(wasLogin=!0,presenceData.state="Logging in"):wasLogin&&(loggedIn(),wasLogin=!1),t){case"home.html":presenceData.state="At home";break;case"search.html":presenceData.state="Searching",presenceData.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png";break;case"mypreferencesmenu.html":case"myprofile.html":case"mypreferencesdisplay.html":case"mypreferenceshome.html":case"mypreferencesplayback.html":case"mypreferencessubtitles.html":presenceData.state="On user preferences";break;case"dashboard.html":case"dashboardgeneral.html":case"userprofiles.html":case"useredit.html":case"userlibraryaccess.html":case"userparentalcontrol.html":case"userpassword.html":case"library.html":case"librarydisplay.html":case"metadataimages.html":case"metadatanfo.html":case"encodingsettings.html":case"playbackconfiguration.html":case"streamingsettings.html":case"devices.html":case"device.html":case"serveractivity.html":case"dlnasettings.html":case"dlnaprofiles.html":case"dlnaprofile.html":case"livetvstatus.html":case"livetvtuner.html":case"livetvguideprovider.html":case"livetvsettings.html":case"networking.html":case"apikeys.html":case"log.html":case"notificationsettings.html":case"installedplugins.html":case"availableplugins.html":case"scheduledtasks.html":case"configurationpage":presenceData.state="On admin dashboard";break;case"movies.html":presenceData.state="Browsing movies";break;case"tv.html":presenceData.state="Browsing tv series";break;case"music.html":presenceData.state="Browsing music";break;case"livetv.html":presenceData.state="Browsing Live TV";break;case"edititemmetadata.html":presenceData.state="Editing media metadata";break;case"details":await handleItemDetails();break;case"video":await handleVideoPlayback();break;case"nowplaying.html":presenceData.state="Viewing the audio playlist"}}async function setDefaultsToPresence(){presenceData.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/J/Jellyfin/assets/logo.png",presenceData.smallImageKey&&delete presenceData.smallImageKey,presenceData.smallImageText&&delete presenceData.smallImageText,presenceData.state&&delete presenceData.state,presenceData.startTimestamp&&delete presenceData.startTimestamp,isNaN(presenceData.endTimestamp)&&delete presenceData.endTimestamp,!1===await presence.getSetting("showTimestamps")&&delete presenceData.startTimestamp}async function refreshApiClient(){ApiClient??=(await presence.getPageVariable("ApiClient")).ApiClient}async function isJellyfinWebClient(){return ApiClient||await refreshApiClient(),!(!ApiClient||"object"!=typeof ApiClient||!ApiClient._appName||"Jellyfin Web"!==ApiClient._appName)}async function updateData(){await setDefaultsToPresence();let e=!1;if(location.host.toLowerCase()===JELLYFIN_URL?(e=!0,handleOfficialWebsite()):await isJellyfinWebClient()&&(e=!0,await handleWebClient()),e){const e=presenceData.largeImageKey;isPrivateIP(e)&&(uploadedMediaCache.has(e)?presenceData.largeImageKey=uploadedMediaCache.get(e):await fetch(e).then((e=>e.blob())).then((a=>{const t=new FileReader;t.readAsDataURL(a),t.onloadend=()=>{const a=t.result;uploadedMediaCache.set(e,a),presenceData.largeImageKey=a}}))),presenceData.details?presence.setActivity(presenceData):presence.setActivity()}}function isPrivateIP(e){return/^http:\/\/(192\.168\.|10\.|172\.(1[6-9]|2[0-9]|3[01])\.|127\.0\.0\.1|localhost)/.test(e)}async function init(){let e,a=!1;if(location.host===JELLYFIN_URL)a=!0,e="Jellyfin website detected";else try{for(const t of JSON.parse(localStorage.getItem("jellyfin_credentials")).Servers)Date.now()-new Date(t.DateLastAccessed).getTime()<3e4&&(a=!0,e="Jellyfin web client detected")}catch(e){a=!1}a&&(presence=new Presence({clientId:"669359568391766018"}),presence.info(e),presence.on("UpdateData",updateData))}init();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;