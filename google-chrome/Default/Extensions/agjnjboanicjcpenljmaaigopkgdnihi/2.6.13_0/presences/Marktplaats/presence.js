var __webpack_exports__={};const presence=new Presence({clientId:"811572600294735902"}),timestampCheck={hash:"",timestamp:Math.floor(Date.now()/1e3)};presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/Marktplaats/assets/logo.png",startTimestamp:timestampCheck.timestamp},[t,a]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("buttons")]),{pathname:s,hostname:r,href:l}=document.location,n=document.querySelector("[class='hz-TabNext hz-TabNext--active']"),i=document.querySelector('[data-role="searchForm-autocomplete"]')||document.querySelector('[role="combobox"]'),c=l;switch(timestampCheck.hash!==c&&(timestampCheck.hash=c,timestampCheck.timestamp=Math.floor(Date.now()/1e3)),r){case"www.marktplaats.nl":switch(!0){case"complete"!==document.readyState:e.details="Marktplaats is aan het laden",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/M/Marktplaats/assets/0.gif";break;case s.includes("/q/"):case!!i?.value:{const a=JSON.parse(document.querySelector("[type='application/ld+json']")?.textContent)?.itemListElement[1]?.name;s.includes("/q/")&&i?.value===a?(e.details=t?"Bekijkt zoekresultaten":"Bekijkt resultaten voor:",e.state=a):(e.details=t?"Zoekt iets op":"Zoekt naar",e.state=i.value,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png");break}case"/"===s:e.details="Bekijkt de homepagina",e.state=n?.textContent;break;case s.includes("auto"):e.details=t?"Bekijkt items":`Bekijkt ${n.textContent?.toLowerCase()}`;break;case s.includes("/v/"):e.details=t?"Bekijkt een item":"Bekijkt item",e.state=document.querySelector('[class="Listing-title"]')?.textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/viewing.png",e.smallImageText=`${document.querySelector('[class="Stats-summary"]').textContent} weergaven`,e.buttons=[{label:"Bekijk item",url:l}];break;case s.includes("/l/"):e.details=t?"Bekijkt specifieke items":"Bekijkt items in categorie",e.state=[...document.querySelector('[class="innerWrapper"]').children].map((e=>e.textContent)).join(" => "),e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png",e.smallImageText=document.querySelector('[data-testid="breadcrumb-last-item"]')?.textContent,e.buttons=[{label:"Bekijk items In Categorie",url:l}];break;case s.includes("/plaats"):{const a=document.querySelectorAll('[name="title_nl-NL"],[id="category-keywords"]')?.[0];e.details=t?"Advertentie plaatsen":"Advertentie plaatsen voor",e.state=a?.value??"Onbekend",e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/writing.png";break}case s.includes("/cp/"):e.details=t?"Bekijkt catogorieÃ«n":"Bekijkt categorie",e.state=document.querySelector('[class="page-header heading heading-1"]')?.textContent,e.buttons=[{label:"Bekijk Categorie",url:l}];break;case"/messages"===s:e.details="Bekijkt alle berichten";break;case s.includes("/messages"):{const a=document.querySelector('[class="AdvertisementSnippet-module-root"]')?.getAttribute("href"),s=document.querySelector('[class="ConversationTopic-module-title"] > a')?.getAttribute("href");e.details=t?"Bekijkt een gesprek":`Bekijkt gesprek met ${document.querySelector('[data-sem="otherParticipant"]')?.textContent}`,e.state=`Over: ${document.querySelector('[class*="AdvertisementSnippet-module-title"]')?.textContent}`,e.buttons=a?[{label:"Bekijk Verkoper",url:s},{label:"Bekijk Item",url:a}]:[{label:"Bekijk Verkoper",url:s}];break}case s.includes("my-account"):e.details="Mijn Marktplaats",e.state=document.querySelector('[class*="Tab is-selected"]')?.textContent;break;case s.includes("/u/"):e.details=t?"Bekijkt een gebruiker":"Bekijkt gebruiker",e.state=document.querySelector('[class="hz-TopSection-TitleWrap-Name"]')?.textContent,e.buttons=[{label:"Bekijk Verkoper",url:l}];break;case"/notifications"===s:e.details="Bekijkt notificaties"}break;case"help.marktplaats.nl":switch(!0){case"complete"!==document.readyState:e.details="Marktplaats help is aan het laden",e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/M/Marktplaats/assets/0.gif";break;case!!i?.value:e.details=t?"Zoekt iets op":"Zoekt naar",e.state=i.value,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/search.png";break;case s.includes("/s/"):e.details=t?"Leest een help artikel":"Leest help artikel over",e.state=document.querySelector('[class="content-title"]')?.textContent??document.querySelector('[class="uiOutputText"]')?.textContent,e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/reading.png",e.buttons=[{label:"Lees Help Artikel",url:l}]}}t&&e.smallImageText&&delete e.smallImageText,t&&e.state&&delete e.state,a&&!t||!e.buttons||delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;