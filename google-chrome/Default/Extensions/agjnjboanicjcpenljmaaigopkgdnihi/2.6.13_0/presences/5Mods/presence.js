var __webpack_exports__={};const presence=new Presence({clientId:"651412198727352331"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/0-9/5Mods/assets/logo.jpg",startTimestamp:browsingTimestamp},[t,s,r]=await Promise.all([presence.getSetting("privacy"),presence.getSetting("buttons"),presence.getSetting("covers")]),{href:o,hostname:a,pathname:i}=document.location,l=i.split("/");if(t)return e.details="Browsing",presence.setActivity(e);switch(a.replace("www.","")){case"forums.gta5-mods.com":switch(l[1]){case"":e.details="Viewing the forum home page";break;case"category":e.details="Viewing forum category",e.state=document.querySelectorAll('[itemprop="title"]')[1]?.textContent,e.buttons=[{label:"View Forum Category",url:o}];break;case"topic":e.details="Viewing forum post about",e.state=document.querySelector('[class="topic-title"]')?.textContent?.slice(0,120),e.buttons=[{label:"View Forum Post",url:o}];break;case"user":e.details="Viewing forum user",e.state=document.querySelector('[class="fullname"]')?.textContent,e.largeImageKey=document.querySelector('[class="avatar-wrapper"]')?.firstElementChild.getAttribute("src")??"https://cdn.rcd.gg/PreMiD/websites/0-9/5Mods/assets/logo.jpg",e.buttons=[{label:"View Forum User",url:o}];break;case"groups":e.details="Viewing forum groups",e.buttons=[{label:"View Forum Group",url:o}];break;case"recent":case"popular":e.details=`Viewing ${l[2]} ${document.querySelectorAll('[itemprop="title"]')[1]?.textContent?.toLowerCase()} posts`,e.buttons=[{label:"View Forum Posts",url:o}]}break;case"gta5-mods.com":switch(l[1]){case"":e.details="Viewing the home page";break;case"users":e.details="Viewing user",e.state=document.querySelector('[class="username"]')?.textContent,e.largeImageKey=document.querySelector('[class="img-responsive"]')?.getAttribute("src")??"https://cdn.rcd.gg/PreMiD/websites/0-9/5Mods/assets/logo.jpg",e.buttons=[{label:"View User",url:o}];break;case"login":e.details="Logging in";break;default:document.querySelector('li[class*="active"]')&&(document.querySelector('[class="btn btn-primary btn-download"]')?(e.details="Browsing mod",e.state=document.querySelector('[class="version"]')?.parentNode?.textContent,e.buttons=[{label:"Browse Mod",url:o}]):(e.details="Browsing category",e.state=document.querySelector('li[class*="active"]')?.textContent,e.buttons=[{label:"Browse Category",url:o}]))}}r||(e.largeImageKey="https://cdn.rcd.gg/PreMiD/websites/0-9/5Mods/assets/logo.jpg"),s||delete e.buttons,e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;