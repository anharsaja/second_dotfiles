var PresenceClients,__webpack_exports__={};!function(e){e.X="802958757909889054",e.Twitter="1172850898624581652"}(PresenceClients||(PresenceClients={}));let twitterCheck,presence=new Presence({clientId:PresenceClients.X});const presences={[PresenceClients.X]:presence},capitalize=e=>e.replace(/[[{(_)}\]]/g," ").split(" ").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ");function setClient(e){presence.clearActivity(),presences[e]?(presence=presences[e],presence.setActivity()):(presence=new Presence({clientId:e}),presences[e]=presence),presence.info("Switched presence client!")}function stripText(e,t="None",s=!0){return e&&e.firstChild?e.firstChild.textContent:(s&&presence.error(`An error occurred while stripping data off the page. Please contact Bas950 on the PreMiD Discord server, and send him a screenshot of this error. ID: ${t}`),null)}let oldUrl,elapsed;async function getStrings(){return presence.getStrings({readPost:"x.readPost",viewDms:"x.viewDms",viewPosts:"x.viewPosts",viewPostsWithReplies:"x.viewPostsWithReplies",viewMedia:"x.viewMedia",viewLiked:"x.viewLiked",viewList:"x.viewList",bookmarks:"x.bookmarks",notifs:"x.notifs",explore:"x.explore",settings:"x.settings",terms:"general.terms",privacy:"general.privacy",browsing:"general.browsing",search:"general.searchFor",searchSomething:"general.searchSomething",viewing:"general.viewing",profile:"general.viewProfile"},await presence.getSetting("lang").catch((()=>"en")))}presence.info("When using the X presence for PreMiD, make sure you have the latest UI update. Twitter classic and any legacy versions before it will not work with this presence.");let strings,oldLang=null;presence.on("UpdateData",(async()=>{const[e,t,s,i]=await Promise.all([presence.getSetting("lang").catch((()=>"en")),presence.getSetting("privacy"),presence.getSetting("time"),presence.getSetting("twitter")]);let n,r;i||twitterCheck===i?twitterCheck!==i&&(twitterCheck=i,setClient(PresenceClients.Twitter)):(twitterCheck=i,setClient(PresenceClients.X)),oldLang===e&&strings||(oldLang=e,strings=await getStrings());const{pathname:c,href:a}=document.location;oldUrl!==a&&(oldUrl=a,elapsed=Math.floor(Date.now()/1e3)),n=strings.browsing,r=capitalize(c.split("/")[1]),c.match("/i/")&&(r=capitalize(c.split("/")[2]),"Bookmarks"===r&&(r=strings.bookmarks)),c.match("/notifications")&&(r=strings.notifs),c.match("/explore")&&(r=strings.explore),c.match("/tos")&&(r=strings.terms),c.match("/privacy")&&(r=strings.privacy),c.match("/settings/")&&(r=strings.settings),c.match("/search")&&(t?(n=strings.searchSomething,r=null):(n=strings.search,r=document.querySelector("input").textContent));const l=document.querySelector(`a[href='/${c.split("/")[1]}/header_photo']`)?.parentElement.children[1]?.children[1];l&&(n=strings.viewPosts,r=`${stripText(l,"Object Header").split("@")[0]} // ${capitalize(c.split("/")[1])}`,c.match("/with_replies")&&(n=strings.viewPostsWithReplies),c.match("/media")&&(n=strings.viewMedia),c.match("/likes")&&(n=strings.viewLiked)),!l&&c.match("/status/")&&(n=strings.readPost,[r]=stripText(document.querySelectorAll(`a[href='/${c.split("/")[1]}']`)[1],"Post").split("@")),c.match("/messages")&&l&&(n=strings.viewDms,r=stripText(l,"Object Header"),t&&(r=null));const o=Array.from(document.querySelectorAll("h2")).find((e=>e.parentElement.children[1]?.textContent.includes("@")));c.match("/moments")&&o&&(n="Browsing Moments...",r=capitalize(c.split("/")[1])),c.match("/lists")&&o&&(n=strings.viewList,r=capitalize(c.split("/")[1]));const p={details:n,state:r,largeImageKey:i?"https://cdn.rcd.gg/PreMiD/websites/X/X.com/assets/1.png":"https://cdn.rcd.gg/PreMiD/websites/X/X.com/assets/0.png"};s&&(p.startTimestamp=elapsed),presence.setActivity(p)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;