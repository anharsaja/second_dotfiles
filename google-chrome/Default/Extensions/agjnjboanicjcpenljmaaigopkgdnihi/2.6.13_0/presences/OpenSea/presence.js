var __webpack_exports__={};const presence=new Presence({clientId:"939259686727848069"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(async()=>{const[e,t]=await Promise.all([presence.getSetting("timestamps"),presence.getSetting("buttons")]),s={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/O/OpenSea/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:a,search:i,href:n,hostname:o}=document.location,r=a.split("/");if("opensea.io"===o)switch(r[1]){case"":s.details="Viewing home page";break;case"explore-collections":s.details="Browsing collections",s.state=document.querySelector(`a[href='${a}${i}'] > span`).textContent;break;case"assets":"/assets"===a?(s.details="Searching OpenSea",s.state=document.querySelector("input[role='searchbox']").value):(s.details="Viewing asset",s.state=document.querySelector("h1").textContent,s.buttons=[{label:"View Asset",url:n}]);break;case"collection":s.details="Viewing collection",s.state=document.querySelector("h1").textContent,s.buttons=[{label:"View Collection",url:n}];break;case"my-watchlist":s.details="Viewing their watchlist";break;case"collections":s.details="Viewing their collections";break;case"account":s.details="Viewing their account","settings"===r[2]&&(s.details="Viewing their settings");break;case"category":s.details="Browsing category",s.state=document.querySelector("h1").textContent;break;case"partners":s.details="Browsing partners";break;case"rankings":s.details="Browsing top NFTs";break;case"activity":s.details="Viewing recent activity";break;case"solana-collections":s.details="Browsing solana NFTs";break;case"asset":"create"===r[2]&&(s.details="Creating asset");break;case"blog":"category"===r[2]?(s.details="Browsing blogs category",s.state=document.querySelector(".current-menu-item").textContent):r[2]?(s.details="Viewing blog post",s.state=document.querySelector(".entry-title")?.textContent):s.details="Browsing blog posts";break;default:document.title.endsWith("Profile | OpenSea")&&(s.details="Viewing profile",s.state=document.querySelector("h1").textContent,s.buttons=[{label:"View Profile",url:n}])}else"docs.opensea.io"===o&&(s.details="Viewing documentation",s.state=document.querySelector(".active").textContent);e||(delete s.startTimestamp,delete s.endTimestamp),!t&&s.buttons&&delete s.buttons,s.details?presence.setActivity(s):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;