var __webpack_exports__={};const{href}=document.location;class TOD extends Presence{constructor(e){super(e)}getVideo(){return document.querySelector("video")}getVideoType(){return this.getVideoTitle().match(/S\d+\s*\|\s*E\d+/i)||this.getVideoTitle().match(/EP\s*\d+/i)?"show":"movie"}getTitle(e=!1){if(this.isWatching()&&e)return this.getVideoTitle();const t=document.querySelector("div.bein-dh1-hero__head-container > h1.bein-dh1-hero__title.heading-shadow")?.textContent;return t??this.getVideoTitle()?.replace(/\d+\s*-\s*\d+/,"vs")??"Unknown"}getVideoTitle(){return document.querySelector("div.diva-standard-title")?.textContent}isWatching(){return!!this.getVideoTitle()}isLive(){return!!document.querySelector("span.diva-live-now")}isTrailer(){return this.getVideoTitle().includes("Trailer")}}const presence=new TOD({clientId:"1229087342787039334"}),data={presence:{},startedSince:Math.floor(Date.now()/1e3)};presence.on("UpdateData",(async()=>{const e={type:3,smallImageKey:"https://cdn.rcd.gg/PreMiD/resources/search.png",smallImageText:"Browsing",largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/T/TOD/assets/logo.png",details:"Browsing...",startTimestamp:data.startedSince};let t;data.presence={"/movie/([a-zA-Z0-9-]+)":{setPresenceData(){if(presence.isWatching()){const t=presence.getVideo();[e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(t),presence.isTrailer()?(e.details="Watching a trailer",e.state=presence.getVideoTitle().replace(/- (.+)/,""),e.smallImageText=t.paused?"Paused":"Playing",e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.buttons=[{label:"Watch Trailer",url:href}]):(e.details=`Watching ${presence.getVideoType()}`,e.state=presence.getVideoTitle(),e.smallImageText=t.paused?"Paused":"Playing",e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.buttons=[{label:"Watch "+("show"===presence.getVideoType()?"Show":"Movie"),url:href}]),t.paused&&(delete e.startTimestamp,delete e.endTimestamp)}else e.details=`Viewing ${"show"===presence.getVideoType()?"Show":"Movie"}:`,e.state=presence.getVideoTitle().replace(/(.+)/,""),e.buttons=[{label:`View ${"show"===presence.getVideoType()?"Show":"Movie"}:`,url:href}]}},"/watch/(soccer|multisports)-([a-zA-Z0-9-]+)":{setPresenceData(){if(presence.isWatching()){const t=presence.getVideo();presence.isLive()?(e.smallImageText=t.paused?"Paused":"Live",e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/live.png"):([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(t),e.smallImageText=t.paused?"Paused":"Playing",e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png"),e.details=presence.getTitle(),e.state="Match",e.buttons=[{label:"Watch Match",url:href}],t.paused&&(delete e.startTimestamp,delete e.endTimestamp)}else e.details="Watching match:",e.state=presence.getTitle(),e.buttons=[{label:"Watch Match",url:href}]}},"/sports/event/soccer-([a-zA-Z0-9-]+)":{setPresenceData(){if(presence.isWatching()){const t=presence.getVideo();[e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(t),e.details=presence.getTitle(),e.state="Match",e.smallImageText=t.paused?"Paused":"Playing",e.smallImageKey=t.paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.buttons=[{label:"Preview Match",url:href}],t.paused&&(delete e.startTimestamp,delete e.endTimestamp)}else e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/viewing.png",e.smallImageText="Viewing",e.details="Previewing match:",e.state=presence.getTitle(),e.buttons=[{label:"Preview Match",url:href}]}},"/account":{setPresenceData(){e.details="Viewing their settings"}}},data.settings=[{id:"timestamp",data:["startTimestamp","endTimestamp"]},{id:"buttons",data:["buttons"]},{id:"smallImage",data:["smallImageKey"]}];for(const[e,s]of Object.entries(data.presence))new RegExp(e).test(document.location.pathname)&&(t=e,s.setPresenceData());if(!t&&presence.isWatching()){const e="movie"===presence.getVideoType()||"show"===presence.getVideoType()?"/movie/([a-zA-Z0-9-]+)":"Unknown";data.presence[e].setPresenceData()}for(const t of data.settings)if(!await presence.getSetting(t.id))for(const s of t.data)delete e[s];presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;