var __webpack_exports__={};const presence=new Presence({clientId:"1021922769111351379"}),browsingTimestamp=Math.floor(Date.now()/1e3);var Asset;!function(e){e.info="https://cdn.rcd.gg/PreMiD/websites/D/D&D%20Beyond/assets/0.png",e.logo="https://cdn.rcd.gg/PreMiD/websites/D/D&D%20Beyond/assets/logo.png"}(Asset||(Asset={})),presence.on("UpdateData",(async()=>{const e={largeImageKey:Asset.logo,startTimestamp:browsingTimestamp},{pathname:t,href:a,search:s}=window.location,r=t.split("/").filter((e=>e)),i=document.querySelector(".page-title")?.textContent.trim();switch(r[0]??""){case"":e.details="Browsing home page";break;case"account":e.details="Managing preferences",e.state=i;break;case"backgrounds":r[1]?(e.details="Viewing a background",e.state=i,e.largeImageKey=document.querySelector(".image").src,e.buttons=[{label:"View Background",url:a}]):e.details="Browsing list of backgrounds";break;case"changelog":r[1]?(e.details="Reading a changelog",e.state=i):e.details="Browsing the changelog";break;case"characters":if("builder"===r[1])e.details="Creating a new character";else if("builder"===r[2]){const t=document.querySelector(".character-builder-page-header-name").textContent;switch(e.details="Modifying a character",e.largeImageKey=getComputedStyle(document.querySelector(".ddbc-character-avatar__portrait")).backgroundImage?.match(/url\("(.*?)"\)/)[1],r[3]){case"home":e.state=`Basic preferences | ${t}`;break;case"race":"manage"===r[4]?(e.state=`Racial traits | ${t}`,e.smallImageKey=document.querySelector(".race-detail-preview-img").src,e.smallImageText=document.querySelector(".builder-page-header").textContent):e.state=`Choosing race | ${t}`;break;case"class":"manage"===r[4]?e.state=`Class features | ${t}`:e.state=`Choosing a class | ${t}`;break;case"ability-scores":e.state=`Ability scores | ${t}`;break;case"description":e.state=`Background | ${t}`,e.smallImageKey=Asset.info,e.smallImageText=document.querySelector(".description-manage-background-chooser").selectedOptions[0].textContent;break;case"equipment":e.state=`Equipment | ${t}`;break;default:e.state=t}}else r[1]?(e.details="Viewing a character sheet",e.state=document.querySelector(".ddbc-character-tidbits__heading > h1").textContent,e.largeImageKey=getComputedStyle(document.querySelector(".ddbc-character-avatar__portrait")).backgroundImage?.match(/url\("(.*?)"\)/)[1],e.smallImageKey=Asset.info,e.smallImageText=`${document.querySelector(".ddbc-character-summary__race").textContent} (${document.querySelector(".ddbc-character-summary__classes").textContent})`,e.buttons=[{label:"View character sheet",url:a}]):e.details="Browsing their characters";break;case"classes":r[1]?(e.details="Viewing a class",e.state=i,e.largeImageKey=document.querySelector(".image").src,e.buttons=[{label:"View class",url:a}]):e.details="Browsing list of classes";break;case"encounter-builder":e.details="Creating an encounter",e.state=document.querySelector("[name=encounterName]").value||"Untitled Encounter";break;case"encounters":"edit"===r[2]?(e.details="Editing an encounter",e.state=document.querySelector("[name=encounterName]").value||"Untitled Encounter"):(e.details="Viewing an encounter",e.state=document.querySelector(".ddb-page-header__title").textContent);break;case"equipment":r[1]?(e.details="Viewing an equipment",e.state=i,e.largeImageKey=document.querySelector(".image").src,e.buttons=[{label:"View equipment",url:a}]):e.details="Browsing list of equipment";break;case"feats":r[1]?(e.details="Viewing a feat",e.state=i,e.largeImageKey=document.querySelector(".image").src,e.buttons=[{label:"View feat",url:a}]):e.details="Browsing list of feats";break;case"forums":"search"===r[1]?(e.details="Searching forums",e.state=new URLSearchParams(s).get("search")):r[1]?/^\d+-/.test(r[r.length-1])?(e.details="Reading a forum post",e.state=i,e.buttons=[{label:"Read post",url:a}]):"create-thread"===r[r.length-1]?(e.details="Creating a forum post",e.state=document.querySelector("#field-title").value):(e.details="Browsing forums",e.state=i):(e.details="Browsing forums",e.state="Main page");break;case"homebrew":switch(r[1]??""){case"":e.details="Browsing Homebrew categories";break;case"creations":switch(r[2]){case"create-background":e.details="Creating a background";break;case"create-feat":e.details="Creating a feat";break;case"create-magic-item":e.details="Creating a magic item";break;case"create-monster":e.details="Creating a monster";break;case"create-race":e.details="Creating a race";break;case"create-spell":e.details="Creating a spell";break;case"create-subclass":e.details="Creating a subclass"}e.state=document.querySelector(".ddb-homebrew-create-form-fields-item-input > input").value;break;default:e.details="Browsing Hombrew category",e.state=i}break;case"magic-items":r[1]?(e.details="Viewing a magic item",e.state=i,e.smallImageKey=document.querySelector(".magic-item-image").src,e.smallImageText=document.querySelector(".item-info").textContent.trim(),e.buttons=[{label:"View magic item",url:a}]):e.details="Browsing list of magic items";break;case"marketplace":"redeem-key"===r[1]?e.details="Redeeming a product key":"cart"===r[1]||"address"===r[1]||"checkout"===r[1]?e.details="Purchasing materials":r[1]?(e.details="Browsing marketplace",e.state=i,e.largeImageKey=document.querySelector(".product-hero-avatar__image").src):e.details="Browsing marketplace";break;case"members":if(r[1]){const t=document.querySelector(".username").textContent.trim();e.details="Viewing a member's profile",e.largeImageKey=document.querySelector(".user-avatar img").src,"posts"===r[2]?e.state=`${t}'s posts`:e.state=t}else e.details="Viewing list of members";break;case"monsters":r[1]?(e.details="Viewing a monster",e.state=i,e.largeImageKey=document.querySelector(".monster-image").src,e.buttons=[{label:"View monster",url:a}]):e.details="Browsing list of monsters";break;case"my-collection":e.details="Browsing their Homebrew collection";break;case"my-creations":e.details="Browsing their Homebrew creations";break;case"my-encounters":e.details="Browsing their encounters";break;case"posts":r[1]?(e.details="Reading a post",e.state=i,e.buttons=[{label:"Read post",url:a}]):e.details="Browsing posts";break;case"private-messages":"send"===r[1]?e.details="Writing a direct message":e.details="Viewing direct messages";break;case"races":r[1]?(e.details="Viewing a race",e.state=i,e.largeImageKey=document.querySelector(".image").src,e.buttons=[{label:"View race",url:a}]):e.details="Browsing list of races";break;case"search":e.details="Searching",e.state=new URLSearchParams(s).get("q");break;case"sources":r[1]?r[2]?(e.details="Viewing a section of a source",e.state=document.querySelector(".p-article-content > h1").textContent,e.buttons=[{label:"Read section",url:a}]):(e.details="Viewing table of contents for source",e.state=i,e.buttons=[{label:"View source",url:a}]):e.details="Browsing list of sources";break;case"spells":switch(r[1]??""){case"":e.details="Browsing list of spells";break;case"class":case"school":e.details="Browsing list of spells",e.state=i;break;default:e.details="Viewing a spell",e.state=i,e.smallImageKey=document.querySelector(".spell-image").src,e.smallImageText=`School of ${document.querySelector(".ddb-statblock-item-school > .ddb-statblock-item-value").textContent.trim()}`,e.buttons=[{label:"View spell",url:a}]}break;case"tag":e.details=`Browsing posts tagged '${i}'`;break;case"vehicles":r[1]?(e.details="Viewing a vehicle",e.state=i,e.largeImageKey=document.querySelector(".monster-image").src,e.buttons=[{label:"View vehicle",url:a}]):e.details="Browsing list of vehicles";break;default:e.details="Browsing",e.state=i??document.title.match(/^(.*?)( - D&D Beyond)?$/)[1]}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;