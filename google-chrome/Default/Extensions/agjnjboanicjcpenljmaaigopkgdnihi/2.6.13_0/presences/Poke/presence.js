var __webpack_exports__={};const presence=new Presence({clientId:"1188371319776100463"});presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Poke/assets/logo.png"};let t=!1;switch(document.location.pathname.replace("/feed","").split("/")[1]){case"":case"app":e.details="Browsing trending videos";break;case"my-acc":e.details="Browsing subscriptions";break;case"license":case"privacy":e.details="Managing preferences";break;case"watch":{e.smallImageKey=document.querySelector("video")&&!document.querySelector("video").paused?"https://cdn.rcd.gg/PreMiD/resources/play.png":"https://cdn.rcd.gg/PreMiD/resources/pause.png";const t=document.querySelector(".video-title.t");e.details=t?t.textContent.trim():"No Title Available";const a=document.querySelector(".video-info-pill-channelname");e.state=a?a.textContent.trim():"No Channel Name Available";const s=document.querySelector("video");s&&!s.paused&&([e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(document.querySelector("video")));break}case"channel":{const t=document.querySelector(".name p");e.details="Viewing channel",e.state=t?t.textContent.trim():"No Name Available";break}default:t=!0}t?presence.setActivity():presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;