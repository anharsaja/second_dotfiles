var __webpack_exports__={};const presence=new Presence({clientId:"959487033963843594"}),browsingTimestamp=Math.floor(Date.now()/1e3);presence.on("UpdateData",(()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/G/Google%20Colab/assets/logo.png",startTimestamp:browsingTimestamp},t=document.querySelector("#doc-name")?.value,o=document.querySelector(".cell.focused"),{pathname:i}=location;if("/diff"===i)if(e.details="Viewing a diff",document.querySelector(".diff-raw[aria-checked=true]"))e.state="Raw diff";else if(document.querySelector(".diff-inline[aria-checked=true]")){const[t,o]=document.querySelectorAll(".view-zones");e.state=`${t.querySelector(".view-line").textContent} vs ${o.querySelector(".view-line").textContent}`}else{const[t,o]=document.querySelectorAll(".view-lines");e.state=`${t.querySelector(".view-line").textContent} vs ${o.querySelector(".view-line").textContent}`}else if(document.querySelector("#notebook-info"))e.details="Viewing notebook info",e.state=t;else if(document.querySelector(".notebook-settings"))e.details="Editing Notebook Settings";else if(document.querySelector(".colab-open-dialog"))e.details="Opening Notebook",e.state=`From ${document.querySelector(".colab-open-dialog .iron-selected").textContent}`;else if(document.querySelector("#preferences-dialog"))e.details="Editing Settings";else if("save"===document.querySelector("colab-last-saved-indicator").getAttribute("command")?e.details=`Viewing ${t}`:e.details=`Editing ${t}`,o?.classList.contains("code")?e.state="Editing code block":o?.classList.contains("text")&&(o.classList.contains("edit")?e.state="Editing text block":e.state="Viewing text block"),document.querySelector(".comment-fragment.editing.focused"))e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/G/Google%20Colab/assets/0.png",e.smallImageText="Commenting";else{const t=document.querySelector("colab-connect-button").shadowRoot;t.querySelector("#connect-button-resource-display")&&(e.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/G/Google%20Colab/assets/1.png",e.smallImageText=`Ram: ${t.querySelector(".ram").shadowRoot.querySelector(".total > div").style.width} Disk: ${t.querySelector(".disk").shadowRoot.querySelector(".total > div").style.width}`)}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;