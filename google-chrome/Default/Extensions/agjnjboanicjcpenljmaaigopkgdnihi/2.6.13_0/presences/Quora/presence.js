var __webpack_exports__={};const presence=new Presence({clientId:"798449961691250709"}),browsingTimestamp=Math.floor(Date.now()/1e3);let question,taxonomy,account;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/Q/Quora/assets/logo.png",startTimestamp:browsingTimestamp};if(document.location.hostname.match(/[A-Za-z]+.quora.com/)){if(document.location.hostname.match(/[A-Za-z]{4,}.quora.com/))taxonomy=document.querySelector("#mainContent > div.q-flex.qu-alignItems--center.qu-flexWrap--wrap > div > span > span > a > span > span > span").textContent,e.details="Viewing space:",e.state=taxonomy;else switch(document.location.pathname){case"/":e.details="Viewing homepage";break;case"/notifications":e.details="Viewing notifications";break;case"/following":e.details="Viewing feed";break;case"/answer":e.details="Viewing questions to be answered";break;case"/answer/requests":e.details="Viewing answer requests";break;case"/answer/answer_later":e.details="Viewing answer drafts";break;default:document.location.pathname.includes("/topic/")?(taxonomy=document.querySelector("#mainContent > div:nth-child(1) > div > div > div.q-flex.qu-flexDirection--column.qu-justifyContent--space-around.qu-ml--medium > div.CssComponent-sc-1oskqb9-0.EditWrapper___StyledCssComponent-sc-6vsimt-0.feqBgP > div > div.q-box.qu-display--inline-block > div > span > span > span > span").textContent,e.details="Viewing topic:",e.state=taxonomy):document.location.pathname.includes("/profile/")?(account=document.querySelector("#mainContent > div.q-flex.qu-flexDirection--column > div > div.q-flex.qu-flexDirection--column > div.q-flex.qu-alignItems--flex-start.qu-justifyContent--space-between > div.CssComponent-sc-1oskqb9-0.EditWrapper___StyledCssComponent-sc-6vsimt-0.feqBgP > div > div.q-box.qu-display--inline-block > div > div > div > div > span").textContent,e.details="Viewing profile:",e.state=account):document.location.pathname.match(/^\/[A-Za-z0-9%-]+\/answer\//)?(question=document.querySelector("#mainContent > div > div.q-box.qu-borderAll.qu-borderRadius--small.qu-borderColor--raised.qu-boxShadow--small.qu-bg--raised > div.q-box.qu-pt--medium.qu-px--medium.qu-pb--tiny > div.q-box.qu-mb--medium.qu-mt--small > div > span > span > a > div > div > div > div > span > span").textContent,account=document.querySelector("#mainContent > div > div.q-box.qu-borderAll.qu-borderRadius--small.qu-borderColor--raised.qu-boxShadow--small.qu-bg--raised > div.q-box.qu-pt--medium.qu-px--medium.qu-pb--tiny > div.q-box.qu-mb--small > div > div > div.q-box.qu-alignSelf--center.qu-flex--auto > div.q-text.qu-dynamicFontSize--regular.qu-truncateLines--3.qu-passColorToLinks > span > span.CssComponent-sc-1oskqb9-0.AbstractSeparatedItems___StyledCssComponent-sc-46kfvf-0.bxBZxD > span.q-text.qu-bold > div > div > div > div > div > a > div > span").textContent,e.details=`Viewing ${account}'s answer for:`,e.state=question):document.location.pathname.match(/^\/[A-Za-z0-9%-]+/)&&(question=document.querySelector("#mainContent > div.q-box.qu-borderBottom > div > div.q-text.qu-dynamicFontSize--xlarge.qu-bold.qu-color--gray_dark_dim.qu-passColorToLinks.qu-lineHeight--regular > span > span > div > div > div > span > span").textContent,e.details="Viewing question:",e.state=question)}e.details?presence.setActivity(e):presence.setActivity()}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;