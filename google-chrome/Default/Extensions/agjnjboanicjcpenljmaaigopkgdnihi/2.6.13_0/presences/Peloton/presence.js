var __webpack_exports__={};const presence=new Presence({clientId:"712294190339588209"}),browsingTimestamp=Math.floor(Date.now()/1e3);let path,strings,clipTitle,clipAuthor,clipTimeLeft;presence.on("UpdateData",(async()=>{strings=await presence.getStrings({live:"general.live",play:"general.playing",pause:"general.paused"});const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/P/Peloton/assets/logo.png",startTimestamp:browsingTimestamp};if(window.location.hostname.includes("www.onepeloton"))switch(window.location.pathname){case"/":e.details="Browsing the Home Page";break;case"/bike":e.details="Browsing the bikes";break;case"/app":e.details="Browsing the app";break;case"/membership":e.details="Browsing memberships";break;case"/terms":e.details="Browsing the terms of service";break;case"/company":e.details="Browsing Peloton's Mission";break;case"/showrooms":e.details="Browsing the showrooms";break;case"/membership-terms":e.details="Browsing the membership terms"}else if(window.location.hostname.includes("support.onepeloton"))e.details="Browsing the support pages";else if(window.location.hostname.includes("blog.onepeloton"))switch(window.location.pathname){case"/":e.details="Browsing the blogs";break;case"/category/community/":e.details="Browsing the community blogs";break;case"/category/lifestyle/":e.details="Browsing the lifestyle blogs";break;case"/category/news/":e.details="Browsing the news blogs";break;case"/category/tech/":e.details="Browsing the tech blogs";break;case"/category/wellness/":e.details="Browsing the wellness blogs"}else if(window.location.hostname.includes("members.onepeloton")){if("/classes"===window.location.pathname)e.details="Browsing classes";else if(window.location.pathname.includes("/classes/")){switch(path=window.location.pathname.replace("/classes/",""),path){case"strength":e.details="Browsing strength classes";break;case"yoga":e.details="Browsing yoga classes";break;case"meditation":e.details="Browsing meditation classes";break;case"cardio":e.details="Browsing cardio classes";break;case"stretching":e.details="Browsing stretching classes";break;case"cycling":e.details="Browsing cycling classes";break;case"outdoor":e.details="Browsing outdoor classes";break;case"running":e.details="Browsing running classes";break;case"walking":e.details="Browsing walking classes";break;case"bootcamp":e.details="Browsing bootcamp classes";break;default:e.details="Browsing classes"}if(path.includes("player/")){const s=document.querySelector(".jw-video");switch(clipTitle=document.querySelector(".jw-controlbar > div:nth-child(3) > div > div > div > h1").textContent,clipAuthor=document.querySelector(".jw-controlbar > div:nth-child(3) > div > div > div > p").textContent,!s.paused){case!0:e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=strings.play,[e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(s);break;case!1:e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/pause.png",e.smallImageText=strings.pause,[e.startTimestamp,e.endTimestamp]=presence.getTimestampsfromMedia(s)}e.details=clipTitle.replace("&amp;","&"),e.state=clipAuthor}}if(window.location.pathname.includes("/player/live")){switch(clipTitle=document.querySelector(".jw-controlbar > div:nth-child(3) > div > div > div > h1").textContent,clipAuthor=document.querySelector(".jw-controlbar > div:nth-child(3) > div > div > div > p").textContent,clipTimeLeft=document.querySelector(".player-overlay-wrapper > div:nth-child(3) > button > div:nth-child(2) > div > div > p").textContent.split(":").map(Number),!document.querySelector(".jw-video").paused){case!0:e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/live.png",e.smallImageText=strings.live,e.endTimestamp=new Date(Date.now()+10*(1*clipTimeLeft[0]+1*clipTimeLeft[1])).getTime();break;case!1:e.smallImageKey="https://cdn.rcd.gg/PreMiD/resources/live.png",e.smallImageText=strings.live}e.details=clipTitle.replace("&amp;","&"),e.state=clipAuthor}if(window.location.pathname.includes("/schedule/"))switch(path=window.location.pathname.replace("/schedule/",""),path){case"strength":e.details="Browsing strength schedule";break;case"yoga":e.details="Browsing yoga schedule";break;case"meditation":e.details="Browsing meditation schedule";break;case"cardio":e.details="Browsing cardio schedule";break;case"stretching":e.details="Browsing stretching schedule";break;case"cycling":e.details="Browsing cycling schedule";break;case"running":e.details="Browsing running schedule";break;case"walking":e.details="Browsing walking schedule";break;case"bootcamp":e.details="Browsing bootcamp schedule";break;default:e.details="Browsing schedule"}if(window.location.pathname.includes("/challenges/"))switch(path=window.location.pathname.replace("/challenges/",""),path){case"active":e.details="Browsing active challenges";break;case"upcoming":e.details="Browsing upcoming challenges";break;case"completed":e.details="Browsing completed challenges";break;default:e.details="Browsing challenges"}if(window.location.pathname.includes("/profile/"))switch(path=window.location.pathname.replace("/profile/",""),path){case"overview":default:e.details="Browsing their profile";break;case"workouts":e.details="Browsing their workouts";break;case"completed":e.details="Browsing their achievements"}window.location.pathname.includes("/preferences/")&&(e.details="Browsing their profile")}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;