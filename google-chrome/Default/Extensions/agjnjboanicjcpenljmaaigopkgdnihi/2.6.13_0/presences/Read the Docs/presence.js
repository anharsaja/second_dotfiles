var __webpack_exports__={};const presence=new Presence({clientId:"808404067344318494"});presence.on("UpdateData",(async()=>{async function e(e,t,a){let s=await e.getSetting(t);for(const[e,t]of Object.entries(a))s=s.replace(RegExp(`%${e}%`,"g"),t);return s}const t={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/R/Read%20the%20Docs/assets/logo.png",startTimestamp:Date.now()};let a=window.location.href;if(a.endsWith("/")&&(a=a.slice(0,-1)),a.match(/([a-z0-9-]+)[.]readthedocs[.](io|org).*/g)){const s=a.replace(/https:\/\/([a-z0-9-]+)[.]readthedocs[.](io|org).*/g,"$1");if(t.details="docs"===s?await e(presence,"viewing_main_docs",{}):await e(presence,"viewing_docs",{name:s}),a.match(/search/g)){let s=a.replace(/([a-z0-9-/:]+)[.]readthedocs[.](io|org)\/.+\/.+\/search.*\?q=([^&]+).*/g,"$3");s.endsWith("#")&&(s=s.slice(0,-1)),a.endsWith("/search")||a.endsWith("/search.html")||(t.state=await e(presence,"searching_for",{term:s}))}}else a.endsWith(".io")||a.endsWith(".org")?t.details=await e(presence,"main",{}):a.endsWith("signup")?t.details=await e(presence,"signup",{}):a.endsWith("login")?t.details=await e(presence,"login",{}):a.match(/accounts/)?t.details=await e(presence,"manage",{}):a.match(/profiles/)?t.details=await e(presence,"profile",{name:a.split("/")[a.split("/").length-1]}):a.endsWith("dashboard")?t.details=await e(presence,"dashboard",{}):a.match(/search/)&&(a.endsWith("/search")||(t.state=await e(presence,"searching_for",{term:a.replace(/https?:\/\/readthedocs[.](io|org)\/search\/\?q=([^&]+).*/g,"$2")})),t.details=await e(presence,"searching",{}));t.details?presence.setActivity(t):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;