var __webpack_exports__={};const presence=new Presence({clientId:"1026195572354449428"}),browsingTimestamp=Math.floor(Date.now()/1e3);let characterCreatorMenu=["species"];setInterval((()=>{"/"===window.location.pathname&&(characterCreatorMenu=[...document.querySelectorAll("#menuA, #menuB, #menuC")].map((e=>[...e.children].find((e=>"none"!==getComputedStyle(e).backgroundImage))?.textContent.trim().toLowerCase())))}),1e3),presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/H/Hero%20Forge/assets/logo.png",startTimestamp:browsingTimestamp},{pathname:a}=window.location,[,t]=a.split("/");switch(t??""){case"":if(document.querySelector("[src='/static/svg/bug-white.svg']"))e.details="Creating a bug report";else if(document.querySelector("[class*='characterFolder']"))e.details="Viewing their characters";else{const a=document.querySelector("img[src='/static/svg/character-menu/character.svg'] + div").textContent.match(/^(.*?)\*?$/)[1],t=document.querySelector("#view span[style*='/static/svg/item-selected.svg']"),r=t?.firstElementChild,c=r?.alt.match(/^(.*?) Add Part$/)[1];let s="",n="";switch(e.details=`Modifying Character: ${a}`,characterCreatorMenu[0]){case"species":s="Species",t&&(n=`${/Female_thumb/.test(r.src)?"Female":"Male"} ${t.parentElement.nextElementSibling.textContent}`);break;case"head":case"gear":case"stage":switch(characterCreatorMenu[0]){case"head":s="facial features";break;case"gear":s="gear";break;case"stage":s="stage"}n=t?`${characterCreatorMenu[1]} - ${c}`:characterCreatorMenu[1];break;case"body":s="Body Features",n="measure"===characterCreatorMenu[1]?"Measurements":t?`${characterCreatorMenu[1]} - ${c}`:characterCreatorMenu[1];break;case"clothing":s="Clothing",n="outfit"===characterCreatorMenu[1]?"Outfit":t?`${characterCreatorMenu[1]} - ${c}`:characterCreatorMenu[1];break;case"pose":switch(s="Pose",characterCreatorMenu[1]){case"body":case"face":n=t?`${characterCreatorMenu[1]} - ${c}`:characterCreatorMenu[1];break;case"eyes":n="eyes";break;case"advanced":n="Advanced"}break;case"color":switch(s="Color",characterCreatorMenu[1]){case"body":case"theme":n=characterCreatorMenu[1];break;case"decals":n=t?`decals - ${c}`:"decals";break;case"paints":case"mix":{const e=document.querySelector("[src*='/static/svg/tools/paint-selection.svg']");n=e?`${characterCreatorMenu[1]} - ${e.previousElementSibling.alt}`:characterCreatorMenu[1];break}}break;case"booth":s="Booth";break;case"buy":switch(s="Buying Items",characterCreatorMenu[1]){case"mini":{const e=document.querySelector("#view [class*=name]");n=e?`${characterCreatorMenu[1]} - ${e.textContent}`:characterCreatorMenu[1];break}case"packs":{const e=document.querySelector("#view [class*=displayLabel]");n=e?`${characterCreatorMenu[1]} - ${e.textContent}`:characterCreatorMenu[1];break}case"dice":n="dice";break;case"gift cards":n="gift cards";break;case"digital credits":n="digital credits"}}e.state=n?`${s[0].toUpperCase()}${s.slice(1)}: ${n[0].toUpperCase()}${n.slice(1)}`:`${s[0].toUpperCase()}${s.slice(1)}`}break;case"account":e.details="Managing account settings",e.state=document.querySelector("[class*=sidenavContainer] [class*=itemActive]").textContent;break;case"cart":e.details="Viewing cart";break;case"intro":e.details="Browsing",e.state="Sample characters and introduction";break;case"media-request":e.details="Creating a media request",e.state=document.querySelector("#issue_choices input:checked + label").textContent;break;case"suggest":e.details="Suggesting a feature";break;default:t.startsWith("load_config")?e.details="Loading character":(e.details="Browsing",e.state=document.title.match(/^(.*?)(?: \| Hero ForgeÂ®)?$/)[1])}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;