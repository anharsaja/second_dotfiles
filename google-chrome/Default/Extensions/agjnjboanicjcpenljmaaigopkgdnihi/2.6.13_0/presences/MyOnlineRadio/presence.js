"use strict";var __webpack_exports__={};function getDomainExtension(e){try{const t=/\.([a-zA-Z0-9-]+)$/.exec(new URL(e).hostname);return t?t[1]:null}catch(e){return"com"}}function extToCountry(e){const t=getDomainExtension(e);let n;return n="com"===t?e.includes("irish")?"Ireland":"UK":{hu:"Hungary",ro:"Romania",sk:"Slovakia",de:"Germany",at:"Austria",it:"Italy",es:"Spain",fr:"France",nl:"Netherlands",pl:"Poland",cl:"Chile",ar:"Argentina",mx:"Mexico"}[t.toLowerCase()],n?` (${n})`:""}const getDropDownSelected=e=>{const t=document.querySelector(`[name="${e}"]`);return t?.children[Number(t.selectedIndex)]?.textContent},getInp=e=>document.querySelector(`[name="${e}"]`)?.value,toDate=e=>{if(!e)return null;const t=e.split(".").map(Number),n=new Date(t[2],t[0],t[1]);return`${n.getDate()+1}/${n.getMonth()+1}/${n.getFullYear()}`};function tDiffInMS(e,t="00:00"){const n=e=>{const t=e.split(":").map(Number);let n=0;return 3===t.length?n=3600*t[0]+60*t[1]+t[2]:2===t.length&&(n=60*t[0]+t[1]),n},a=n(e),o=n(t);return 1e3*Math.abs(a-o)}const searchToPres=(e,t)=>{const n=getInp("name")||"",a=toDate(getInp("from")),o=toDate(getInp("to")),r=getDropDownSelected("hash");e.details=`Searching ${t}'s playlists`,n&&(e.state=`for ${n}}`),r&&(e.largeImageText=`in channel ${r}`),a&&o?e.state+=`(from ${a} to ${o})`:a?e.state+=`(from ${a})`:o&&(e.state+=`(to ${o})`)};function handleStation(e,t){const[,n,a]=document.location.pathname.split("/");switch(t.details=`Browsing ${n}`,a){case"playlist":searchToPres(t,n);try{const e=new URL(document.querySelector('[src*="//www.youtube.com/embed/"]')?.src).pathname.split("/")[2];if(e){const a={url:`https://www.youtube.com/watch?v=${e}`,title:document.querySelector(`[data-youtube="${e}"]`)?.querySelector(".txtsong")?.textContent||""};t.details=`Watching ${a.title}`,t.state=`From ${n}`,t.buttons=[{label:"View on YouTube",url:a.url}]}}catch(e){}break;case"archive":{searchToPres(t,n);const a=document.querySelector('[title="Pause"]');if(a){t.details=`From ${n}`;const o=a.parentElement.parentElement.parentElement.parentElement.querySelector("h4")?.innerText;t.state=`Listening to ${o}`;const r=a.parentElement.querySelector(".audioplayer-time-current")?.textContent,s=a.parentElement.querySelector(".audioplayer-time-duration")?.textContent;r&&(t.startTimestamp=tDiffInMS(r)),r&&s&&([t.startTimestamp,t.endTimestamp]=e.getTimestamps(e.timestampFromFormat(r),e.timestampFromFormat(s)))}}break;case"frequency":t.details=n,t.state="Viewing Frequency Map",t.buttons&&e.clearActivity();break;case"schedule":t.details=`Viewing Schedule for ${n}`,delete t.state,searchToPres(t,n);break;case"news":t.details=`Viewing News for ${n}`,delete t.state;break;default:t.details=`Browsing ${n}`,t.buttons=[{label:"View Station",url:document.location.href}],document.querySelector('[data-original-title="Pause"]')&&(t.state=`Listening to ${document.querySelector(".actSong")?.textContent}`,t.startTimestamp=tDiffInMS(document.querySelector(".ctime").textContent),t.largeImageText=document.querySelector(".server-conts")?.querySelector(".active > .info")?.textContent,document.querySelector(".live")&&(t.smallImageKey="https://cdn.rcd.gg/PreMiD/websites/M/MyOnlineRadio/assets/0.png",t.smallImageText="Recording Broadcast"))}t.buttons=[{label:"View Station",url:`${document.location.origin}/${n}/`}]}const presence=new Presence({clientId:"1217153856665026580"});presence.on("UpdateData",(async()=>{if(!document.location.toString())return;const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/M/MyOnlineRadio/assets/logo.png",name:`My Online Radio${extToCountry(document.location.origin)}`,type:2};switch(document.location.pathname){case"/":e.details="Browsing Stations (home)";break;case"/contact":{const t=getDropDownSelected("to");e.details="Sending feedback"+(t?` to ${t.split(" - ")[0]}`:"")}break;case"/partnership":e.details="Applying to be a partener!";break;case"/embed-radio":{const t=getDropDownSelected("rid");if(e.details="Embdedding"+(t?` ${t.split(" - ")[0]}`:""),t){const t=getDropDownSelected("rsu_id");t&&(e.largeImageText=t)}}break;case"/playlists":{const t=getInp("name")||"",n=getInp("from"),a=getInp("to"),o=getDropDownSelected("rid");e.details="Searching playlists "+(t?`for ${t}`:""),n&&a&&(e.largeImageText=`From ${toDate(n)} to ${toDate(a)}`),"Radio channel"===o?e.state=" any channel":o&&(e.state=`In Channel ${o}`)}break;case"/news":{const t=getInp("name"),n=getInp("from"),a=getInp("to");e.details="Browsing news from "+(t?`for ${t}`:""),n&&a&&(e.state=`From ${toDate(n)} to ${toDate(a)}`)}break;case"/schedule":e.details="Browsing Radio Programs";break;default:handleStation(presence,e)}presence.setActivity(e)}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;