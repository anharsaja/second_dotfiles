var __webpack_exports__={};const presence=new Presence({clientId:"641969062083035146"}),strings=presence.getStrings({play:"general.playing",pause:"general.paused"}),browsingTimestamp=Math.floor(Date.now()/1e3);let user,title,currentTime,duration,paused,startTimestamp,endTimestamp;presence.on("UpdateData",(async()=>{const e={largeImageKey:"https://cdn.rcd.gg/PreMiD/websites/S/Sdarot.TV/assets/logo.png"};if("/"===document.location.pathname||"/index"===document.location.pathname)e.startTimestamp=browsingTimestamp,e.details="צופה בדף הבית";else if("/series"===document.location.pathname)e.startTimestamp=browsingTimestamp,e.details="צופה ברשימת הסדרות";else if(document.location.pathname.includes("/watch/")){const t=document.querySelector("#playerDiv > div > video")??document.querySelector("#videojs_html5_api");title=document.querySelector("#watchEpisode > div.poster > div > h1").textContent,user=document.querySelector("#player > div.head > p").textContent,user.includes(" - ")&&([,user]=user.split(" - ")),t&&(({currentTime,duration,paused}=t),[startTimestamp,endTimestamp]=presence.getTimestamps(Math.floor(currentTime),Math.floor(duration))),isNaN(duration)?isNaN(duration)&&(e.startTimestamp=browsingTimestamp,e.details=":צופה ב",e.state=`${title} - ${user}`):(e.smallImageKey=paused?"https://cdn.rcd.gg/PreMiD/resources/pause.png":"https://cdn.rcd.gg/PreMiD/resources/play.png",e.smallImageText=paused?(await strings).pause:(await strings).play,[e.startTimestamp,e.endTimestamp]=[startTimestamp,endTimestamp],e.details=title,e.state=user,paused&&(delete e.startTimestamp,delete e.endTimestamp))}e.details?presence.setActivity(e):presence.setActivity()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
undefined;